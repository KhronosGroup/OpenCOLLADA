<?xml version="1.0"?>
<saxfwl xmlns="http://www.netallied.de/xsd2cppsax/saxfwl"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://www.netallied.de/xsd2cppsax/saxfwl ../saxfwl.xsd" >

	<config outpathBaseInc="${OPENCOLLADA_HOME}/COLLADASaxFrameworkLoader/include/generated" 
	        outpathBaseSrc="${OPENCOLLADA_HOME}/COLLADASaxFrameworkLoader/src/generated">
		<version include="COLLADASaxFWLIParserImpl14.h" baseClass="IParserImpl14">14</version>
		<version include="COLLADASaxFWLIParserImpl15.h" baseClass="IParserImpl15">15</version>
		<header>/*
    Copyright (c) 2008-2009 NetAllied Systems GmbH

    This file is part of COLLADASaxFrameworkLoader.

    Licensed under the MIT Open Source License, 
    for details please see LICENSE file or the website
    http://www.opensource.org/licenses/mit-license.php
*/</header>
		<namespace>COLLADASaxFWL</namespace>
		<includeHeader>COLLADASaxFWLPrerequisites.h</includeHeader>
		<includeImpl>COLLADASaxFWLStableHeaders.h</includeImpl>
		<forwardDecl>IFilePartLoader</forwardDecl>
	</config>

	<class name="AssetLoader" include="COLLADASaxFWLAssetLoader.h">
		<member type="AssetLoader*" name="mLoader" />
		<ctor>
			<parameter type="AssetLoader*" name="loader" />
			<initlist name="mLoader" value="loader" />
		</ctor>

		<method name="end__asset">
			<specific version="14" name="end__asset"></specific>
			<specific version="15" name="end__asset"></specific>
		</method>

		<method name="begin__contributor">
			<specific version="14" name="begin__contributor"></specific>
			<specific version="15" name="begin__contributor"></specific>
		</method>

		<method name="end__contributor">
			<specific version="14" name="end__contributor"></specific>
			<specific version="15" name="end__contributor"></specific>
		</method>

		<method name="begin__author">
			<specific version="14" name="begin__author"></specific>
			<specific version="15" name="begin__author"></specific>
		</method>

		<method name="end__author">
			<specific version="14" name="end__author"></specific>
			<specific version="15" name="end__author"></specific>
		</method>

		<method name="data__author">
			<parameter type="const ParserChar*" name="data" />
			<parameter type="size_t" name="length" />
			<specific version="14" name="data__author"></specific>
			<specific version="15" name="data__author"></specific>
		</method>

		<method name="begin__authoring_tool">
			<specific version="14" name="begin__authoring_tool"></specific>
			<specific version="15" name="begin__authoring_tool"></specific>
		</method>

		<method name="end__authoring_tool">
			<specific version="14" name="end__authoring_tool"></specific>
			<specific version="15" name="end__authoring_tool"></specific>
		</method>

		<method name="data__authoring_tool">
			<parameter type="const ParserChar*" name="data" />
			<parameter type="size_t" name="length" />
			<specific version="14" name="data__authoring_tool"></specific>
			<specific version="15" name="data__authoring_tool"></specific>
		</method>

		<method name="begin__comments">
			<specific version="14" name="begin__comments"></specific>
			<specific version="15" name="begin__comments"></specific>
		</method>

		<method name="end__comments">
			<specific version="14" name="end__comments"></specific>
			<specific version="15" name="end__comments"></specific>
		</method>

		<method name="data__comments">
			<parameter type="const ParserChar*" name="data" />
			<parameter type="size_t" name="length" />
			<specific version="14" name="data__comments"></specific>
			<specific version="15" name="data__comments"></specific>
		</method>

		<method name="begin__copyright">
			<specific version="14" name="begin__copyright"></specific>
			<specific version="15" name="begin__copyright"></specific>
		</method>

		<method name="end__copyright">
			<specific version="14" name="end__copyright"></specific>
			<specific version="15" name="end__copyright"></specific>
		</method>

		<method name="data__copyright">
			<parameter type="const ParserChar*" name="data" />
			<parameter type="size_t" name="length" />
			<specific version="14" name="data__copyright"></specific>
			<specific version="15" name="data__copyright"></specific>
		</method>

		<method name="begin__source_data">
			<specific version="14" name="begin__source_data"></specific>
			<specific version="15" name="begin__source_data"></specific>
		</method>

		<method name="end__source_data">
			<specific version="14" name="end__source_data"></specific>
			<specific version="15" name="end__source_data"></specific>
		</method>

		<method name="data__source_data">
			<parameter type="COLLADABU::URI" name="value" />
			<specific version="14" name="data__source_data"></specific>
			<specific version="15" name="data__source_data"></specific>
		</method>

		<method name="begin__created">
			<specific version="14" name="begin__created"></specific>
			<specific version="15" name="begin__created"></specific>
		</method>

		<method name="end__created">
			<specific version="14" name="end__created"></specific>
			<specific version="15" name="end__created"></specific>
		</method>

		<method name="data__created">
			<parameter type="const ParserChar*" name="data" />
			<parameter type="size_t" name="length" />
			<specific version="14" name="data__created"></specific>
			<specific version="15" name="data__created"></specific>
		</method>

		<method name="begin__keywords">
			<specific version="14" name="begin__keywords"></specific>
			<specific version="15" name="begin__keywords"></specific>
		</method>

		<method name="end__keywords">
			<specific version="14" name="end__keywords"></specific>
			<specific version="15" name="end__keywords"></specific>
		</method>

		<method name="data__keywords">
			<parameter type="const ParserChar*" name="data" />
			<parameter type="size_t" name="length" />
			<specific version="14" name="data__keywords"></specific>
			<specific version="15" name="data__keywords"></specific>
		</method>

		<method name="begin__modified">
			<specific version="14" name="begin__modified"></specific>
			<specific version="15" name="begin__modified"></specific>
		</method>

		<method name="end__modified">
			<specific version="14" name="end__modified"></specific>
			<specific version="15" name="end__modified"></specific>
		</method>

		<method name="data__modified">
			<parameter type="const ParserChar*" name="data" />
			<parameter type="size_t" name="length" />
			<specific version="14" name="data__modified"></specific>
			<specific version="15" name="data__modified"></specific>
		</method>

		<method name="begin__revision">
			<specific version="14" name="begin__revision"></specific>
			<specific version="15" name="begin__revision"></specific>
		</method>

		<method name="end__revision">
			<specific version="14" name="end__revision"></specific>
			<specific version="15" name="end__revision"></specific>
		</method>

		<method name="data__revision">
			<parameter type="const ParserChar*" name="data" />
			<parameter type="size_t" name="length" />
			<specific version="14" name="data__revision"></specific>
			<specific version="15" name="data__revision"></specific>
		</method>

		<method name="begin__subject">
			<specific version="14" name="begin__subject"></specific>
			<specific version="15" name="begin__subject"></specific>
		</method>

		<method name="end__subject">
			<specific version="14" name="end__subject"></specific>
			<specific version="15" name="end__subject"></specific>
		</method>

		<method name="data__subject">
			<parameter type="const ParserChar*" name="data" />
			<parameter type="size_t" name="length" />
			<specific version="14" name="data__subject"></specific>
			<specific version="15" name="data__subject"></specific>
		</method>

		<method name="begin__title">
			<specific version="14" name="begin__title"></specific>
			<specific version="15" name="begin__title"></specific>
		</method>

		<method name="end__title">
			<specific version="14" name="end__title"></specific>
			<specific version="15" name="end__title"></specific>
		</method>

		<method name="data__title">
			<parameter type="const ParserChar*" name="data" />
			<parameter type="size_t" name="length" />
			<specific version="14" name="data__title"></specific>
			<specific version="15" name="data__title"></specific>
		</method>

		<method name="begin__unit">
			<parameter type="COLLADASaxFWL::unit__AttributeData" name="attrData" />
			<specific version="14" name="begin__unit">
				<parameter type="const COLLADASaxFWL14::unit__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::unit__AttributeData attrData;</code_line>
				<code_line>attrData.meter = attributeData.meter;</code_line>
	            <code_line>attrData.name = attributeData.name;</code_line>
			</specific>
			<specific version="15" name="begin__unit">
				<parameter type="const COLLADASaxFWL15::unit__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::unit__AttributeData attrData;</code_line>
				<code_line>attrData.meter = attributeData.meter;</code_line>
	            <code_line>attrData.name = attributeData.name;</code_line>
			</specific>
		</method>

		<method name="end__unit">
			<specific version="14" name="end__unit"></specific>
			<specific version="15" name="end__unit"></specific>
		</method>

		<method name="begin__up_axis">
			<specific version="14" name="begin__up_axis"></specific>
			<specific version="15" name="begin__up_axis"></specific>
		</method>

		<method name="end__up_axis">
			<specific version="14" name="end__up_axis"></specific>
			<specific version="15" name="end__up_axis"></specific>
		</method>

		<method name="data__up_axis">
			<parameter type="COLLADASaxFWL::ENUM__UpAxisType" name="val" />
			<specific version="14" name="data__up_axis">
				<parameter type="const COLLADASaxFWL14::ENUM__UpAxisType" name="value" />
				<code_line>COLLADASaxFWL::ENUM__UpAxisType val;</code_line>
				<code_line>switch (value) {</code_line>
				<code_line>case COLLADASaxFWL14::ENUM__UpAxisType__X_UP: val=COLLADASaxFWL::ENUM__UpAxisType__X_UP; break;</code_line>
				<code_line>case COLLADASaxFWL14::ENUM__UpAxisType__Y_UP: val=COLLADASaxFWL::ENUM__UpAxisType__Y_UP; break;</code_line>
				<code_line>case COLLADASaxFWL14::ENUM__UpAxisType__Z_UP: val=COLLADASaxFWL::ENUM__UpAxisType__Z_UP; break;</code_line>
				<code_line>case COLLADASaxFWL14::ENUM__UpAxisType__COUNT: val=COLLADASaxFWL::ENUM__UpAxisType__INVALID; break;</code_line>
				<code_line>case COLLADASaxFWL14::ENUM__UpAxisType__NOT_PRESENT: val=COLLADASaxFWL::ENUM__UpAxisType__NOT_PRESENT; break;</code_line>
	            <code_line>}</code_line>
			</specific>
			<specific version="15" name="data__up_axis">
				<parameter type="const COLLADASaxFWL15::ENUM__up_axis_enum" name="value" />
				<code_line>COLLADASaxFWL::ENUM__UpAxisType val;</code_line>
				<code_line>switch (value) {</code_line>
				<code_line>case COLLADASaxFWL15::ENUM__up_axis_enum__X_UP: val=COLLADASaxFWL::ENUM__UpAxisType__X_UP; break;</code_line>
				<code_line>case COLLADASaxFWL15::ENUM__up_axis_enum__Y_UP: val=COLLADASaxFWL::ENUM__UpAxisType__Y_UP; break;</code_line>
				<code_line>case COLLADASaxFWL15::ENUM__up_axis_enum__Z_UP: val=COLLADASaxFWL::ENUM__UpAxisType__Z_UP; break;</code_line>
				<code_line>case COLLADASaxFWL15::ENUM__up_axis_enum__COUNT: val=COLLADASaxFWL::ENUM__UpAxisType__INVALID; break;</code_line>
				<code_line>case COLLADASaxFWL15::ENUM__up_axis_enum__NOT_PRESENT: val=COLLADASaxFWL::ENUM__UpAxisType__NOT_PRESENT; break;</code_line>
	            <code_line>}</code_line>
			</specific>
		</method>

		<method name="begin__technique">
			<parameter type="COLLADASaxFWL::technique__AttributeData" name="attrData" />
			<specific version="14" name="begin__technique">
				<parameter type="const COLLADASaxFWL14::technique__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::technique__AttributeData attrData;</code_line>
				<code_line>attrData.profile = attributeData.profile;</code_line>
			</specific>
			<specific version="15" name="begin__technique____technique_type">
				<parameter type="const COLLADASaxFWL15::technique____technique_type__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::technique__AttributeData attrData;</code_line>
				<code_line>attrData.profile = attributeData.profile;</code_line>
			</specific>
		</method>

		<method name="end__technique">
			<specific version="14" name="end__technique"></specific>
			<specific version="15" name="end__technique____technique_type"></specific>
		</method>

	</class>

	<class name="SceneLoader" include="COLLADASaxFWLSceneLoader.h">
		<member type="SceneLoader*" name="mLoader" />
		<ctor>
			<parameter type="SceneLoader*" name="loader" />
			<initlist name="mLoader" value="loader" />
		</ctor>

		<method name="begin__instance_visual_scene">
			<parameter type="COLLADASaxFWL::instance_visual_scene__AttributeData" name="attrData" />
			<specific version="14" name="begin__instance_visual_scene">
				<parameter type="const COLLADASaxFWL14::instance_visual_scene__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::instance_visual_scene__AttributeData attrData;</code_line>
				<code_line>attrData.present_attributes = 0;</code_line>
				<code_line>attrData.sid = attributeData.sid;</code_line>
	            <code_line>attrData.name = attributeData.name;</code_line>
	            <code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL14::instance_visual_scene__AttributeData::ATTRIBUTE_URL_PRESENT) == COLLADASaxFWL14::instance_visual_scene__AttributeData::ATTRIBUTE_URL_PRESENT ) {</code_line>
	            <code_line>    attrData.url = attributeData.url;</code_line>
	            <code_line>    attrData.present_attributes |= COLLADASaxFWL::instance_visual_scene__AttributeData::ATTRIBUTE_URL_PRESENT;</code_line>
	            <code_line>}</code_line>
			</specific>
			<specific version="15" name="begin__instance_visual_scene">
				<parameter type="const COLLADASaxFWL15::instance_visual_scene__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::instance_visual_scene__AttributeData attrData;</code_line>
				<code_line>attrData.present_attributes = 0;</code_line>
				<code_line>attrData.sid = attributeData.sid;</code_line>
	            <code_line>attrData.name = attributeData.name;</code_line>
	            <code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::instance_visual_scene__AttributeData::ATTRIBUTE_URL_PRESENT) == COLLADASaxFWL15::instance_visual_scene__AttributeData::ATTRIBUTE_URL_PRESENT ) {</code_line>
	            <code_line>    attrData.url = attributeData.url;</code_line>
	            <code_line>    attrData.present_attributes |= COLLADASaxFWL::instance_visual_scene__AttributeData::ATTRIBUTE_URL_PRESENT;</code_line>
	            <code_line>}</code_line>
			</specific>
		</method>

		<method name="end__instance_visual_scene">
			<specific version="14" name="end__instance_visual_scene"></specific>
			<specific version="15" name="end__instance_visual_scene"></specific>
		</method>


		<method name="begin__instance_kinematics_scene">
			<parameter type="COLLADASaxFWL::instance_kinematics_scene__AttributeData" name="attrData" />
			<specific version="15" name="begin__instance_kinematics_scene">
				<parameter type="const COLLADASaxFWL15::instance_kinematics_scene__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::instance_kinematics_scene__AttributeData attrData;</code_line>
				<code_line>attrData.present_attributes = 0;</code_line>
				<code_line>attrData.sid = attributeData.sid;</code_line>
	      <code_line>attrData.name = attributeData.name;</code_line>
	            <code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::instance_kinematics_scene__AttributeData::ATTRIBUTE_URL_PRESENT) == COLLADASaxFWL15::instance_kinematics_scene__AttributeData::ATTRIBUTE_URL_PRESENT ) {</code_line>
	            <code_line>    attrData.url = attributeData.url;</code_line>
	            <code_line>    attrData.present_attributes |= COLLADASaxFWL::instance_kinematics_scene__AttributeData::ATTRIBUTE_URL_PRESENT;</code_line>
	            <code_line>}</code_line>
			</specific>
		</method>

		<method name="end__instance_kinematics_scene">
			<specific version="15" name="end__instance_kinematics_scene"></specific>
		</method>
		
		<method name="begin__bind_kinematics_model">
			<parameter type="COLLADASaxFWL::bind_kinematics_model__AttributeData" name="attrData" />
			<specific version="15" name="begin__bind_kinematics_model">
				<parameter type="const COLLADASaxFWL15::bind_kinematics_model__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::bind_kinematics_model__AttributeData attrData;</code_line>
				<code_line>attrData.node = attributeData.node;</code_line>
			</specific>
		</method>

		<method name="end__bind_kinematics_model">
			<specific version="15" name="end__bind_kinematics_model"></specific>
		</method>

		<method name="begin__bind_joint_axis">
			<parameter type="COLLADASaxFWL::bind_joint_axis__AttributeData" name="attrData" />
			<specific version="15" name="begin__bind_joint_axis">
				<parameter type="const COLLADASaxFWL15::bind_joint_axis__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::bind_joint_axis__AttributeData attrData;</code_line>
				<code_line>attrData.target = attributeData.target;</code_line>
			</specific>
		</method>

		<method name="end__bind_joint_axis">
			<specific version="15" name="end__bind_joint_axis"></specific>
		</method>

		<method name="begin__axis____common_sidref_or_param_type">
			<specific version="15" name="begin__axis____common_sidref_or_param_type"></specific>
		</method>

		<method name="end__axis____common_sidref_or_param_type">
			<specific version="15" name="end__axis____common_sidref_or_param_type"></specific>
		</method>

		<method name="begin__value____common_float_or_param_type">
			<specific version="15" name="begin__value____common_float_or_param_type"></specific>
		</method>

		<method name="end__value____common_float_or_param_type">
			<specific version="15" name="end__value____common_float_or_param_type"></specific>
		</method>
		
		<method name="begin__param____common_param_type">
			<specific version="15" name="begin__param____common_param_type"></specific>
		</method>

		<method name="end__param____common_param_type">
			<specific version="15" name="end__param____common_param_type"></specific>
		</method>

		<method name="data__param____common_param_type">
			<parameter type="const ParserChar*" name="value" />
			<parameter type="size_t" name="length" />
			<specific version="15" name="data__param____common_param_type"></specific>
		</method>

		<method name="end__scene">
			<specific version="14" name="end__scene"></specific>
			<specific version="15" name="end__scene"></specific>
		</method>

		<method name="begin__technique">
			<parameter type="COLLADASaxFWL::technique__AttributeData" name="attrData" />
			<specific version="14" name="begin__technique">
				<parameter type="const COLLADASaxFWL14::technique__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::technique__AttributeData attrData;</code_line>
				<code_line>attrData.profile = attributeData.profile;</code_line>
			</specific>
			<specific version="15" name="begin__technique____technique_type">
				<parameter type="const COLLADASaxFWL15::technique____technique_type__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::technique__AttributeData attrData;</code_line>
				<code_line>attrData.profile = attributeData.profile;</code_line>
			</specific>
		</method>

		<method name="end__technique">
			<specific version="14" name="end__technique"></specific>
			<specific version="15" name="end__technique____technique_type"></specific>
		</method>

	</class>

	<class name="NodeLoader" include="COLLADASaxFWLNodeLoader.h">
		<member type="NodeLoader*" name="mLoader" />
		<ctor>
			<parameter type="NodeLoader*" name="loader" />
			<initlist name="mLoader" value="loader" />
		</ctor>

		<method name="begin__node">
			<parameter type="COLLADASaxFWL::node__AttributeData" name="attrData" />
			<specific version="14" name="begin__node">
				<parameter type="const COLLADASaxFWL14::node__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::node__AttributeData attrData;</code_line>
				<code_line>attrData.present_attributes = 0;</code_line>
				<code_line>attrData.id = attributeData.id;</code_line>
	            <code_line>attrData.name = attributeData.name;</code_line>
	            <code_line>attrData.sid = attributeData.sid;</code_line>
				<code_line>switch (attributeData.type) {</code_line>
				<code_line>case COLLADASaxFWL14::ENUM__NodeType__JOINT: attrData.type=COLLADASaxFWL::ENUM__NodeType__JOINT; break;</code_line>
				<code_line>case COLLADASaxFWL14::ENUM__NodeType__NODE: attrData.type=COLLADASaxFWL::ENUM__NodeType__NODE; break;</code_line>
				<code_line>case COLLADASaxFWL14::ENUM__NodeType__COUNT: attrData.type=COLLADASaxFWL::ENUM__NodeType__INVALID; break;</code_line>
				<code_line>case COLLADASaxFWL14::ENUM__NodeType__NOT_PRESENT: attrData.type=COLLADASaxFWL::ENUM__NodeType__NOT_PRESENT; break;</code_line>
	            <code_line>}</code_line>
	            <code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL14::node__AttributeData::ATTRIBUTE_LAYER_PRESENT) == COLLADASaxFWL14::node__AttributeData::ATTRIBUTE_LAYER_PRESENT ) {</code_line>
	            <code_line>    attrData.layer = attributeData.layer;</code_line>
	            <code_line>    attrData.present_attributes |= COLLADASaxFWL::node__AttributeData::ATTRIBUTE_LAYER_PRESENT;</code_line>
	            <code_line>}</code_line>
			</specific>
			<specific version="15" name="begin__node">
				<parameter type="const COLLADASaxFWL15::node__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::node__AttributeData attrData;</code_line>
				<code_line>attrData.present_attributes = 0;</code_line>
				<code_line>attrData.id = attributeData.id;</code_line>
	            <code_line>attrData.name = attributeData.name;</code_line>
	            <code_line>attrData.sid = attributeData.sid;</code_line>
				<code_line>switch (attributeData.type) {</code_line>
				<code_line>case COLLADASaxFWL15::ENUM__node_enum__JOINT: attrData.type=COLLADASaxFWL::ENUM__NodeType__JOINT; break;</code_line>
				<code_line>case COLLADASaxFWL15::ENUM__node_enum__NODE: attrData.type=COLLADASaxFWL::ENUM__NodeType__NODE; break;</code_line>
				<code_line>case COLLADASaxFWL15::ENUM__node_enum__COUNT: attrData.type=COLLADASaxFWL::ENUM__NodeType__INVALID; break;</code_line>
				<code_line>case COLLADASaxFWL15::ENUM__node_enum__NOT_PRESENT: attrData.type=COLLADASaxFWL::ENUM__NodeType__NOT_PRESENT; break;</code_line>
	            <code_line>}</code_line>
	            <code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::node__AttributeData::ATTRIBUTE_LAYER_PRESENT) == COLLADASaxFWL15::node__AttributeData::ATTRIBUTE_LAYER_PRESENT ) {</code_line>
	            <code_line>    attrData.layer = attributeData.layer;</code_line>
	            <code_line>    attrData.present_attributes |= COLLADASaxFWL::node__AttributeData::ATTRIBUTE_LAYER_PRESENT;</code_line>
	            <code_line>}</code_line>
			</specific>
		</method>

		<method name="end__node">
			<specific version="14" name="end__node"></specific>
			<specific version="15" name="end__node"></specific>
		</method>

		<method name="begin__translate">
			<parameter type="COLLADASaxFWL::translate__AttributeData" name="attrData" />
			<specific version="14" name="begin__translate">
				<parameter type="const COLLADASaxFWL14::translate__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::translate__AttributeData attrData;</code_line>
				<code_line>attrData.sid = attributeData.sid;</code_line>
			</specific>
			<specific version="15" name="begin__translate">
				<parameter type="const COLLADASaxFWL15::translate__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::translate__AttributeData attrData;</code_line>
				<code_line>attrData.sid = attributeData.sid;</code_line>
			</specific>
		</method>

		<method name="end__translate">
			<specific version="14" name="end__translate"></specific>
			<specific version="15" name="end__translate"></specific>
		</method>

		<method name="data__translate">
			<parameter type="const float*" name="data" />
			<parameter type="size_t" name="length" />
			<specific version="14" name="data__translate"></specific>
			<specific version="15" name="data__translate"></specific>
		</method>

		<method name="begin__rotate">
			<parameter type="COLLADASaxFWL::rotate__AttributeData" name="attrData" />
			<specific version="14" name="begin__rotate">
				<parameter type="const COLLADASaxFWL14::rotate__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::rotate__AttributeData attrData;</code_line>
				<code_line>attrData.sid = attributeData.sid;</code_line>
			</specific>
			<specific version="15" name="begin__rotate">
				<parameter type="const COLLADASaxFWL15::rotate__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::rotate__AttributeData attrData;</code_line>
				<code_line>attrData.sid = attributeData.sid;</code_line>
			</specific>
		</method>

		<method name="end__rotate">
			<specific version="14" name="end__rotate"></specific>
			<specific version="15" name="end__rotate"></specific>
		</method>

		<method name="data__rotate">
			<parameter type="const float*" name="data" />
			<parameter type="size_t" name="length" />
			<specific version="14" name="data__rotate"></specific>
			<specific version="15" name="data__rotate"></specific>
		</method>

		<method name="begin__matrix">
			<parameter type="COLLADASaxFWL::matrix__AttributeData" name="attrData" />
			<specific version="14" name="begin__matrix">
				<parameter type="const COLLADASaxFWL14::matrix__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::matrix__AttributeData attrData;</code_line>
				<code_line>attrData.sid = attributeData.sid;</code_line>
			</specific>
			<specific version="15" name="begin__matrix____matrix_type">
				<parameter type="const COLLADASaxFWL15::matrix____matrix_type__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::matrix__AttributeData attrData;</code_line>
				<code_line>attrData.sid = attributeData.sid;</code_line>
			</specific>
		</method>

		<method name="end__matrix">
			<specific version="14" name="end__matrix"></specific>
			<specific version="15" name="end__matrix____matrix_type"></specific>
		</method>

		<method name="data__matrix">
			<parameter type="const float*" name="data" />
			<parameter type="size_t" name="length" />
			<specific version="14" name="data__matrix"></specific>
			<specific version="15" name="data__matrix____matrix_type"></specific>
		</method>

		<method name="begin__scale">
			<parameter type="COLLADASaxFWL::scale__AttributeData" name="attrData" />
			<specific version="14" name="begin__scale">
				<parameter type="const COLLADASaxFWL14::scale__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::scale__AttributeData attrData;</code_line>
				<code_line>attrData.sid = attributeData.sid;</code_line>
			</specific>
			<specific version="15" name="begin__scale">
				<parameter type="const COLLADASaxFWL15::scale__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::scale__AttributeData attrData;</code_line>
				<code_line>attrData.sid = attributeData.sid;</code_line>
			</specific>
		</method>

		<method name="end__scale">
			<specific version="14" name="end__scale"></specific>
			<specific version="15" name="end__scale"></specific>
		</method>

		<method name="data__scale">
			<parameter type="const float*" name="data" />
			<parameter type="size_t" name="length" />
			<specific version="14" name="data__scale"></specific>
			<specific version="15" name="data__scale"></specific>
		</method>

		<method name="begin__skew">
			<parameter type="COLLADASaxFWL::skew__AttributeData" name="attrData" />
			<specific version="14" name="begin__skew">
				<parameter type="const COLLADASaxFWL14::skew__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::skew__AttributeData attrData;</code_line>
				<code_line>attrData.sid = attributeData.sid;</code_line>
			</specific>
			<specific version="15" name="begin__skew">
				<parameter type="const COLLADASaxFWL15::skew__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::skew__AttributeData attrData;</code_line>
				<code_line>attrData.sid = attributeData.sid;</code_line>
			</specific>
		</method>

		<method name="end__skew">
			<specific version="14" name="end__skew"></specific>
			<specific version="15" name="end__skew"></specific>
		</method>

		<method name="data__skew">
			<parameter type="const float*" name="data" />
			<parameter type="size_t" name="length" />
			<specific version="14" name="data__skew"></specific>
			<specific version="15" name="data__skew"></specific>
		</method>

		<method name="begin__lookat">
			<parameter type="COLLADASaxFWL::lookat__AttributeData" name="attrData" />
			<specific version="14" name="begin__lookat">
				<parameter type="const COLLADASaxFWL14::lookat__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::lookat__AttributeData attrData;</code_line>
				<code_line>attrData.sid = attributeData.sid;</code_line>
			</specific>
			<specific version="15" name="begin__lookat">
				<parameter type="const COLLADASaxFWL15::lookat__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::lookat__AttributeData attrData;</code_line>
				<code_line>attrData.sid = attributeData.sid;</code_line>
			</specific>
		</method>

		<method name="end__lookat">
			<specific version="14" name="end__lookat"></specific>
			<specific version="15" name="end__lookat"></specific>
		</method>

		<method name="data__lookat">
			<parameter type="const float*" name="data" />
			<parameter type="size_t" name="length" />
			<specific version="14" name="data__lookat"></specific>
			<specific version="15" name="data__lookat"></specific>
		</method>

		<method name="begin__instance_geometry">
			<parameter type="COLLADASaxFWL::instance_geometry__AttributeData" name="attrData" />
			<specific version="14" name="begin__instance_geometry">
				<parameter type="const COLLADASaxFWL14::instance_geometry__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::instance_geometry__AttributeData attrData;</code_line>
				<code_line>attrData.present_attributes = 0;</code_line>
				<code_line>attrData.sid = attributeData.sid;</code_line>
				<code_line>attrData.name = attributeData.name;</code_line>
	            <code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL14::instance_geometry__AttributeData::ATTRIBUTE_URL_PRESENT) == COLLADASaxFWL14::instance_geometry__AttributeData::ATTRIBUTE_URL_PRESENT ) {</code_line>
	            <code_line>    attrData.url = attributeData.url;</code_line>
	            <code_line>    attrData.present_attributes |= COLLADASaxFWL::instance_geometry__AttributeData::ATTRIBUTE_URL_PRESENT;</code_line>
	            <code_line>}</code_line>
			</specific>
			<specific version="15" name="begin__instance_geometry">
				<parameter type="const COLLADASaxFWL15::instance_geometry__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::instance_geometry__AttributeData attrData;</code_line>
				<code_line>attrData.present_attributes = 0;</code_line>
				<code_line>attrData.sid = attributeData.sid;</code_line>
				<code_line>attrData.name = attributeData.name;</code_line>
	            <code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::instance_geometry__AttributeData::ATTRIBUTE_URL_PRESENT) == COLLADASaxFWL15::instance_geometry__AttributeData::ATTRIBUTE_URL_PRESENT ) {</code_line>
	            <code_line>    attrData.url = attributeData.url;</code_line>
	            <code_line>    attrData.present_attributes |= COLLADASaxFWL::instance_geometry__AttributeData::ATTRIBUTE_URL_PRESENT;</code_line>
	            <code_line>}</code_line>
			</specific>
		</method>

		<method name="end__instance_geometry">
			<specific version="14" name="end__instance_geometry"></specific>
			<specific version="15" name="end__instance_geometry"></specific>
		</method>

		<method name="begin__bind_material">
			<specific version="14" name="begin__bind_material"></specific>
			<specific version="15" name="begin__bind_material"></specific>
		</method>

		<method name="end__bind_material">
			<specific version="14" name="end__bind_material"></specific>
			<specific version="15" name="end__bind_material"></specific>
		</method>

		<method name="begin__bind_material__technique_common">
			<specific version="14" name="begin__bind_material__technique_common"></specific>
			<specific version="15" name="begin__bind_material_type____technique_common"></specific>
		</method>

		<method name="end__bind_material__technique_common">
			<specific version="14" name="end__bind_material__technique_common"></specific>
			<specific version="15" name="end__bind_material_type____technique_common"></specific>
		</method>

		<method name="begin__instance_material">
			<parameter type="COLLADASaxFWL::instance_material__AttributeData" name="attrData" />
			<specific version="14" name="begin__instance_material">
				<parameter type="const COLLADASaxFWL14::instance_material__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::instance_material__AttributeData attrData;</code_line>
				<code_line>attrData.present_attributes = 0;</code_line>
				<code_line>attrData.sid = attributeData.sid;</code_line>
				<code_line>attrData.symbol = attributeData.symbol;</code_line>
				<code_line>attrData.name = attributeData.name;</code_line>
	            <code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL14::instance_material__AttributeData::ATTRIBUTE_TARGET_PRESENT) == COLLADASaxFWL14::instance_material__AttributeData::ATTRIBUTE_TARGET_PRESENT ) {</code_line>
	            <code_line>    attrData.target = attributeData.target;</code_line>
	            <code_line>    attrData.present_attributes |= COLLADASaxFWL::instance_material__AttributeData::ATTRIBUTE_TARGET_PRESENT;</code_line>
	            <code_line>}</code_line>
			</specific>
			<specific version="15" name="begin__instance_material____instance_material_type">
				<parameter type="const COLLADASaxFWL15::instance_material____instance_material_type__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::instance_material__AttributeData attrData;</code_line>
				<code_line>attrData.present_attributes = 0;</code_line>
				<code_line>attrData.sid = attributeData.sid;</code_line>
				<code_line>attrData.symbol = attributeData.symbol;</code_line>
				<code_line>attrData.name = attributeData.name;</code_line>
	            <code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::instance_material____instance_material_type__AttributeData::ATTRIBUTE_TARGET_PRESENT) == COLLADASaxFWL15::instance_material____instance_material_type__AttributeData::ATTRIBUTE_TARGET_PRESENT ) {</code_line>
	            <code_line>    attrData.target = attributeData.target;</code_line>
	            <code_line>    attrData.present_attributes |= COLLADASaxFWL::instance_material__AttributeData::ATTRIBUTE_TARGET_PRESENT;</code_line>
	            <code_line>}</code_line>
			</specific>
		</method>

		<method name="end__instance_material">
			<specific version="14" name="end__instance_material"></specific>
			<specific version="15" name="end__instance_material____instance_material_type"></specific>
		</method>

		<method name="begin__bind_vertex_input">
			<parameter type="COLLADASaxFWL::bind_vertex_input__AttributeData" name="attrData" />
			<specific version="14" name="begin__bind_vertex_input">
				<parameter type="const COLLADASaxFWL14::bind_vertex_input__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::bind_vertex_input__AttributeData attrData;</code_line>
				<code_line>attrData.present_attributes = 0;</code_line>
				<code_line>attrData.semantic = attributeData.semantic;</code_line>
				<code_line>attrData.input_semantic = attributeData.input_semantic;</code_line>
	            <code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL14::bind_vertex_input__AttributeData::ATTRIBUTE_INPUT_SET_PRESENT) == COLLADASaxFWL14::bind_vertex_input__AttributeData::ATTRIBUTE_INPUT_SET_PRESENT ) {</code_line>
	            <code_line>    attrData.input_set = attributeData.input_set;</code_line>
	            <code_line>    attrData.present_attributes |= COLLADASaxFWL::bind_vertex_input__AttributeData::ATTRIBUTE_INPUT_SET_PRESENT;</code_line>
	            <code_line>} else {</code_line>
	            <code_line>    attrData.input_set = ~0;</code_line>
	            <code_line>}</code_line>
			</specific>
			<specific version="15" name="begin__bind_vertex_input">
				<parameter type="const COLLADASaxFWL15::bind_vertex_input__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::bind_vertex_input__AttributeData attrData;</code_line>
				<code_line>attrData.present_attributes = 0;</code_line>
				<code_line>attrData.semantic = attributeData.semantic;</code_line>
				<code_line>attrData.input_semantic = attributeData.input_semantic;</code_line>
	            <code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::bind_vertex_input__AttributeData::ATTRIBUTE_INPUT_SET_PRESENT) == COLLADASaxFWL15::bind_vertex_input__AttributeData::ATTRIBUTE_INPUT_SET_PRESENT ) {</code_line>
	            <code_line>    attrData.input_set = attributeData.input_set;</code_line>
	            <code_line>    attrData.present_attributes |= COLLADASaxFWL::bind_vertex_input__AttributeData::ATTRIBUTE_INPUT_SET_PRESENT;</code_line>
	            <code_line>} else {</code_line>
	            <code_line>    attrData.input_set = ~0;</code_line>
	            <code_line>}</code_line>
			</specific>
		</method>

		<method name="end__bind_vertex_input">
			<specific version="14" name="end__bind_vertex_input"></specific>
			<specific version="15" name="end__bind_vertex_input"></specific>
		</method>

		<method name="begin__instance_node">
			<parameter type="COLLADASaxFWL::instance_node__AttributeData" name="attrData" />
			<specific version="14" name="begin__instance_node">
				<parameter type="const COLLADASaxFWL14::instance_node__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::instance_node__AttributeData attrData;</code_line>
				<code_line>attrData.present_attributes = 0;</code_line>
				<code_line>attrData.sid = attributeData.sid;</code_line>
				<code_line>attrData.name = attributeData.name;</code_line>
	            <code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL14::instance_node__AttributeData::ATTRIBUTE_URL_PRESENT) == COLLADASaxFWL14::instance_node__AttributeData::ATTRIBUTE_URL_PRESENT ) {</code_line>
	            <code_line>    attrData.url = attributeData.url;</code_line>
	            <code_line>    attrData.present_attributes |= COLLADASaxFWL::instance_node__AttributeData::ATTRIBUTE_URL_PRESENT;</code_line>
	            <code_line>}</code_line>
			</specific>
			<specific version="15" name="begin__instance_node">
				<parameter type="const COLLADASaxFWL15::instance_node__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::instance_node__AttributeData attrData;</code_line>
				<code_line>attrData.present_attributes = 0;</code_line>
				<code_line>attrData.sid = attributeData.sid;</code_line>
				<code_line>attrData.name = attributeData.name;</code_line>
	            <code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::instance_node__AttributeData::ATTRIBUTE_URL_PRESENT) == COLLADASaxFWL15::instance_node__AttributeData::ATTRIBUTE_URL_PRESENT ) {</code_line>
	            <code_line>    attrData.url = attributeData.url;</code_line>
	            <code_line>    attrData.present_attributes |= COLLADASaxFWL::instance_node__AttributeData::ATTRIBUTE_URL_PRESENT;</code_line>
	            <code_line>}</code_line>
	            <code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::instance_node__AttributeData::ATTRIBUTE_PROXY_PRESENT) == COLLADASaxFWL15::instance_node__AttributeData::ATTRIBUTE_PROXY_PRESENT ) {</code_line>
	            <code_line>    attrData.proxy = attributeData.proxy;</code_line>
	            <code_line>    attrData.present_attributes |= COLLADASaxFWL::instance_node__AttributeData::ATTRIBUTE_PROXY_PRESENT;</code_line>
	            <code_line>}</code_line>
			</specific>
		</method>

		<method name="end__instance_node">
			<specific version="14" name="end__instance_node"></specific>
			<specific version="15" name="end__instance_node"></specific>
		</method>

		<method name="begin__instance_camera">
			<parameter type="COLLADASaxFWL::instance_camera__AttributeData" name="attrData" />
			<specific version="14" name="begin__instance_camera">
				<parameter type="const COLLADASaxFWL14::instance_camera__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::instance_camera__AttributeData attrData;</code_line>
				<code_line>attrData.present_attributes = 0;</code_line>
				<code_line>attrData.sid = attributeData.sid;</code_line>
				<code_line>attrData.name = attributeData.name;</code_line>
	            <code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL14::instance_camera__AttributeData::ATTRIBUTE_URL_PRESENT) == COLLADASaxFWL14::instance_camera__AttributeData::ATTRIBUTE_URL_PRESENT ) {</code_line>
	            <code_line>    attrData.url = attributeData.url;</code_line>
	            <code_line>    attrData.present_attributes |= COLLADASaxFWL::instance_camera__AttributeData::ATTRIBUTE_URL_PRESENT;</code_line>
	            <code_line>}</code_line>
			</specific>
			<specific version="15" name="begin__instance_camera">
				<parameter type="const COLLADASaxFWL15::instance_camera__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::instance_camera__AttributeData attrData;</code_line>
				<code_line>attrData.present_attributes = 0;</code_line>
				<code_line>attrData.sid = attributeData.sid;</code_line>
				<code_line>attrData.name = attributeData.name;</code_line>
	            <code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::instance_camera__AttributeData::ATTRIBUTE_URL_PRESENT) == COLLADASaxFWL15::instance_camera__AttributeData::ATTRIBUTE_URL_PRESENT ) {</code_line>
	            <code_line>    attrData.url = attributeData.url;</code_line>
	            <code_line>    attrData.present_attributes |= COLLADASaxFWL::instance_camera__AttributeData::ATTRIBUTE_URL_PRESENT;</code_line>
	            <code_line>}</code_line>
			</specific>
		</method>

		<method name="end__instance_camera">
			<specific version="14" name="end__instance_camera"></specific>
			<specific version="15" name="end__instance_camera"></specific>
		</method>

		<method name="begin__instance_light">
			<parameter type="COLLADASaxFWL::instance_light__AttributeData" name="attrData" />
			<specific version="14" name="begin__instance_light">
				<parameter type="const COLLADASaxFWL14::instance_light__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::instance_light__AttributeData attrData;</code_line>
				<code_line>attrData.present_attributes = 0;</code_line>
				<code_line>attrData.sid = attributeData.sid;</code_line>
				<code_line>attrData.name = attributeData.name;</code_line>
	            <code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL14::instance_light__AttributeData::ATTRIBUTE_URL_PRESENT) == COLLADASaxFWL14::instance_light__AttributeData::ATTRIBUTE_URL_PRESENT ) {</code_line>
	            <code_line>    attrData.url = attributeData.url;</code_line>
	            <code_line>    attrData.present_attributes |= COLLADASaxFWL::instance_light__AttributeData::ATTRIBUTE_URL_PRESENT;</code_line>
	            <code_line>}</code_line>
			</specific>
			<specific version="15" name="begin__instance_light">
				<parameter type="const COLLADASaxFWL15::instance_light__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::instance_light__AttributeData attrData;</code_line>
				<code_line>attrData.present_attributes = 0;</code_line>
				<code_line>attrData.sid = attributeData.sid;</code_line>
				<code_line>attrData.name = attributeData.name;</code_line>
	            <code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::instance_light__AttributeData::ATTRIBUTE_URL_PRESENT) == COLLADASaxFWL15::instance_light__AttributeData::ATTRIBUTE_URL_PRESENT ) {</code_line>
	            <code_line>    attrData.url = attributeData.url;</code_line>
	            <code_line>    attrData.present_attributes |= COLLADASaxFWL::instance_light__AttributeData::ATTRIBUTE_URL_PRESENT;</code_line>
	            <code_line>}</code_line>
			</specific>
		</method>

		<method name="end__instance_light">
			<specific version="14" name="end__instance_light"></specific>
			<specific version="15" name="end__instance_light"></specific>
		</method>

		<method name="begin__instance_controller">
			<parameter type="COLLADASaxFWL::instance_controller__AttributeData" name="attrData" />
			<specific version="14" name="begin__instance_controller">
				<parameter type="const COLLADASaxFWL14::instance_controller__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::instance_controller__AttributeData attrData;</code_line>
				<code_line>attrData.present_attributes = 0;</code_line>
				<code_line>attrData.sid = attributeData.sid;</code_line>
				<code_line>attrData.name = attributeData.name;</code_line>
	            <code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL14::instance_controller__AttributeData::ATTRIBUTE_URL_PRESENT) == COLLADASaxFWL14::instance_controller__AttributeData::ATTRIBUTE_URL_PRESENT ) {</code_line>
	            <code_line>    attrData.url = attributeData.url;</code_line>
	            <code_line>    attrData.present_attributes |= COLLADASaxFWL::instance_controller__AttributeData::ATTRIBUTE_URL_PRESENT;</code_line>
	            <code_line>}</code_line>
			</specific>
			<specific version="15" name="begin__instance_controller">
				<parameter type="const COLLADASaxFWL15::instance_controller__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::instance_controller__AttributeData attrData;</code_line>
				<code_line>attrData.present_attributes = 0;</code_line>
				<code_line>attrData.sid = attributeData.sid;</code_line>
				<code_line>attrData.name = attributeData.name;</code_line>
	            <code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::instance_controller__AttributeData::ATTRIBUTE_URL_PRESENT) == COLLADASaxFWL15::instance_controller__AttributeData::ATTRIBUTE_URL_PRESENT ) {</code_line>
	            <code_line>    attrData.url = attributeData.url;</code_line>
	            <code_line>    attrData.present_attributes |= COLLADASaxFWL::instance_controller__AttributeData::ATTRIBUTE_URL_PRESENT;</code_line>
	            <code_line>}</code_line>
			</specific>
		</method>

		<method name="end__instance_controller">
			<specific version="14" name="end__instance_controller"></specific>
			<specific version="15" name="end__instance_controller"></specific>
		</method>

		<method name="begin__skeleton">
			<specific version="14" name="begin__skeleton"></specific>
			<specific version="15" name="begin__skeleton"></specific>
		</method>

		<method name="end__skeleton">
			<specific version="14" name="end__skeleton"></specific>
			<specific version="15" name="end__skeleton"></specific>
		</method>

		<method name="data__skeleton">
			<parameter type="COLLADABU::URI" name="value" />
			<specific version="14" name="data__skeleton"></specific>
			<specific version="15" name="data__skeleton"></specific>
		</method>

    <!-- We don't need that here. Its part of visual scenen and libraray nodes-->
		<!--method name="begin__technique">
			<parameter type="COLLADASaxFWL::technique__AttributeData" name="attrData" />
			<specific version="14" name="begin__technique">
				<parameter type="const COLLADASaxFWL14::technique__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::technique__AttributeData attrData;</code_line>
				<code_line>attrData.profile = attributeData.profile;</code_line>
			</specific>
			<specific version="15" name="begin__technique____technique_type">
				<parameter type="const COLLADASaxFWL15::technique____technique_type__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::technique__AttributeData attrData;</code_line>
				<code_line>attrData.profile = attributeData.profile;</code_line>
			</specific>
		</method>

		<method name="end__technique">
			<specific version="14" name="end__technique"></specific>
			<specific version="15" name="end__technique____technique_type"></specific>
		</method-->

	</class>

	<class name="LibraryNodesLoader" include="COLLADASaxFWLLibraryNodesLoader.h" 
			baseClass="NodeLoader" baseInclude="COLLADASaxFWLNodeLoader.h">
		<member type="LibraryNodesLoader*" name="mLoader" />
		<ctor>
			<parameter type="LibraryNodesLoader*" name="loader" />
			<initlist name="NodeLoader" value="loader" />
			<initlist name="mLoader" value="loader" />
		</ctor>

		<method name="begin__node">
			<parameter type="COLLADASaxFWL::node__AttributeData" name="attrData" />
			<specific version="14" name="begin__node">
				<parameter type="const COLLADASaxFWL14::node__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::node__AttributeData attrData;</code_line>
				<code_line>attrData.present_attributes = 0;</code_line>
				<code_line>attrData.id = attributeData.id;</code_line>
	            <code_line>attrData.name = attributeData.name;</code_line>
	            <code_line>attrData.sid = attributeData.sid;</code_line>
				<code_line>switch (attributeData.type) {</code_line>
				<code_line>case COLLADASaxFWL14::ENUM__NodeType__JOINT: attrData.type=COLLADASaxFWL::ENUM__NodeType__JOINT; break;</code_line>
				<code_line>case COLLADASaxFWL14::ENUM__NodeType__NODE: attrData.type=COLLADASaxFWL::ENUM__NodeType__NODE; break;</code_line>
				<code_line>case COLLADASaxFWL14::ENUM__NodeType__COUNT: attrData.type=COLLADASaxFWL::ENUM__NodeType__INVALID; break;</code_line>
				<code_line>case COLLADASaxFWL14::ENUM__NodeType__NOT_PRESENT: attrData.type=COLLADASaxFWL::ENUM__NodeType__NOT_PRESENT; break;</code_line>
	            <code_line>}</code_line>
	            <code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL14::node__AttributeData::ATTRIBUTE_LAYER_PRESENT) == COLLADASaxFWL14::node__AttributeData::ATTRIBUTE_LAYER_PRESENT ) {</code_line>
	            <code_line>    attrData.layer = attributeData.layer;</code_line>
	            <code_line>    attrData.present_attributes |= COLLADASaxFWL::node__AttributeData::ATTRIBUTE_LAYER_PRESENT;</code_line>
	            <code_line>}</code_line>
			</specific>
			<specific version="15" name="begin__node">
				<parameter type="const COLLADASaxFWL15::node__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::node__AttributeData attrData;</code_line>
				<code_line>attrData.present_attributes = 0;</code_line>
				<code_line>attrData.id = attributeData.id;</code_line>
	            <code_line>attrData.name = attributeData.name;</code_line>
	            <code_line>attrData.sid = attributeData.sid;</code_line>
				<code_line>switch (attributeData.type) {</code_line>
				<code_line>case COLLADASaxFWL15::ENUM__node_enum__JOINT: attrData.type=COLLADASaxFWL::ENUM__NodeType__JOINT; break;</code_line>
				<code_line>case COLLADASaxFWL15::ENUM__node_enum__NODE: attrData.type=COLLADASaxFWL::ENUM__NodeType__NODE; break;</code_line>
				<code_line>case COLLADASaxFWL15::ENUM__node_enum__COUNT: attrData.type=COLLADASaxFWL::ENUM__NodeType__INVALID; break;</code_line>
				<code_line>case COLLADASaxFWL15::ENUM__node_enum__NOT_PRESENT: attrData.type=COLLADASaxFWL::ENUM__NodeType__NOT_PRESENT; break;</code_line>
	            <code_line>}</code_line>
	            <code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::node__AttributeData::ATTRIBUTE_LAYER_PRESENT) == COLLADASaxFWL15::node__AttributeData::ATTRIBUTE_LAYER_PRESENT ) {</code_line>
	            <code_line>    attrData.layer = attributeData.layer;</code_line>
	            <code_line>    attrData.present_attributes |= COLLADASaxFWL::node__AttributeData::ATTRIBUTE_LAYER_PRESENT;</code_line>
	            <code_line>}</code_line>
			</specific>
		</method>

		<method name="end__node">
			<specific version="14" name="end__node"></specific>
			<specific version="15" name="end__node"></specific>
		</method>

		<method name="end__library_nodes">
			<specific version="14" name="end__library_nodes"></specific>
			<specific version="15" name="end__library_nodes"></specific>
		</method>

		<method name="begin__technique">
			<parameter type="COLLADASaxFWL::technique__AttributeData" name="attrData" />
			<specific version="14" name="begin__technique">
				<parameter type="const COLLADASaxFWL14::technique__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::technique__AttributeData attrData;</code_line>
				<code_line>attrData.profile = attributeData.profile;</code_line>
			</specific>
			<specific version="15" name="begin__technique____technique_type">
				<parameter type="const COLLADASaxFWL15::technique____technique_type__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::technique__AttributeData attrData;</code_line>
				<code_line>attrData.profile = attributeData.profile;</code_line>
			</specific>
		</method>

		<method name="end__technique">
			<specific version="14" name="end__technique"></specific>
			<specific version="15" name="end__technique____technique_type"></specific>
		</method>

	</class>

	<class name="VisualSceneLoader" include="COLLADASaxFWLVisualSceneLoader.h" 
			baseClass="NodeLoader" baseInclude="COLLADASaxFWLNodeLoader.h">
		<member type="VisualSceneLoader*" name="mLoader" />
		<ctor>
			<parameter type="VisualSceneLoader*" name="loader" />
			<initlist name="NodeLoader" value="loader" />
			<initlist name="mLoader" value="loader" />
		</ctor>

		<method name="begin__visual_scene__node">
			<parameter type="COLLADASaxFWL::node__AttributeData" name="attrData" />
			<specific version="14" name="begin__node">
				<parameter type="const COLLADASaxFWL14::node__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::node__AttributeData attrData;</code_line>
				<code_line>attrData.present_attributes = 0;</code_line>
				<code_line>attrData.id = attributeData.id;</code_line>
	            <code_line>attrData.name = attributeData.name;</code_line>
	            <code_line>attrData.sid = attributeData.sid;</code_line>
				<code_line>switch (attributeData.type) {</code_line>
				<code_line>case COLLADASaxFWL14::ENUM__NodeType__JOINT: attrData.type=COLLADASaxFWL::ENUM__NodeType__JOINT; break;</code_line>
				<code_line>case COLLADASaxFWL14::ENUM__NodeType__NODE: attrData.type=COLLADASaxFWL::ENUM__NodeType__NODE; break;</code_line>
				<code_line>case COLLADASaxFWL14::ENUM__NodeType__COUNT: attrData.type=COLLADASaxFWL::ENUM__NodeType__INVALID; break;</code_line>
				<code_line>case COLLADASaxFWL14::ENUM__NodeType__NOT_PRESENT: attrData.type=COLLADASaxFWL::ENUM__NodeType__NOT_PRESENT; break;</code_line>
	            <code_line>}</code_line>
	            <code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL14::node__AttributeData::ATTRIBUTE_LAYER_PRESENT) == COLLADASaxFWL14::node__AttributeData::ATTRIBUTE_LAYER_PRESENT ) {</code_line>
	            <code_line>    attrData.layer = attributeData.layer;</code_line>
	            <code_line>    attrData.present_attributes |= COLLADASaxFWL::node__AttributeData::ATTRIBUTE_LAYER_PRESENT;</code_line>
	            <code_line>}</code_line>
			</specific>
			<specific version="15" name="begin__node">
				<parameter type="const COLLADASaxFWL15::node__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::node__AttributeData attrData;</code_line>
				<code_line>attrData.present_attributes = 0;</code_line>
				<code_line>attrData.id = attributeData.id;</code_line>
	            <code_line>attrData.name = attributeData.name;</code_line>
	            <code_line>attrData.sid = attributeData.sid;</code_line>
				<code_line>switch (attributeData.type) {</code_line>
				<code_line>case COLLADASaxFWL15::ENUM__node_enum__JOINT: attrData.type=COLLADASaxFWL::ENUM__NodeType__JOINT; break;</code_line>
				<code_line>case COLLADASaxFWL15::ENUM__node_enum__NODE: attrData.type=COLLADASaxFWL::ENUM__NodeType__NODE; break;</code_line>
				<code_line>case COLLADASaxFWL15::ENUM__node_enum__COUNT: attrData.type=COLLADASaxFWL::ENUM__NodeType__INVALID; break;</code_line>
				<code_line>case COLLADASaxFWL15::ENUM__node_enum__NOT_PRESENT: attrData.type=COLLADASaxFWL::ENUM__NodeType__NOT_PRESENT; break;</code_line>
	            <code_line>}</code_line>
	            <code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::node__AttributeData::ATTRIBUTE_LAYER_PRESENT) == COLLADASaxFWL15::node__AttributeData::ATTRIBUTE_LAYER_PRESENT ) {</code_line>
	            <code_line>    attrData.layer = attributeData.layer;</code_line>
	            <code_line>    attrData.present_attributes |= COLLADASaxFWL::node__AttributeData::ATTRIBUTE_LAYER_PRESENT;</code_line>
	            <code_line>}</code_line>
			</specific>
		</method>

		<method name="end__visual_scene__node">
			<specific version="14" name="end__node"></specific>
			<specific version="15" name="end__node"></specific>
		</method>

		<method name="end__visual_scene">
			<specific version="14" name="end__visual_scene"></specific>
			<specific version="15" name="end__visual_scene"></specific>
		</method>

		<method name="begin__technique">
			<parameter type="COLLADASaxFWL::technique__AttributeData" name="attrData" />
			<specific version="14" name="begin__technique">
				<parameter type="const COLLADASaxFWL14::technique__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::technique__AttributeData attrData;</code_line>
				<code_line>attrData.profile = attributeData.profile;</code_line>
			</specific>
			<specific version="15" name="begin__technique____technique_type">
				<parameter type="const COLLADASaxFWL15::technique____technique_type__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::technique__AttributeData attrData;</code_line>
				<code_line>attrData.profile = attributeData.profile;</code_line>
			</specific>
		</method>

		<method name="end__technique">
			<specific version="14" name="end__technique"></specific>
			<specific version="15" name="end__technique____technique_type"></specific>
		</method>

	</class>

	<class name="SourceArrayLoader" include="COLLADASaxFWLSourceArrayLoader.h">
		<member type="SourceArrayLoader*" name="mLoader" />
		<ctor>
			<parameter type="SourceArrayLoader*" name="loader" />
			<initlist name="mLoader" value="loader" />
		</ctor>

		<method name="begin__float_array">
			<parameter type="COLLADASaxFWL::float_array__AttributeData" name="attrData" />
			<specific version="14" name="begin__float_array">
				<parameter type="const COLLADASaxFWL14::float_array__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::float_array__AttributeData attrData;</code_line>
				<code_line>attrData.present_attributes = 0;</code_line>
				<code_line>attrData.id = attributeData.id;</code_line>
	            <code_line>attrData.name = attributeData.name;</code_line>
				<code_line>attrData.digits = attributeData.digits;</code_line>
	            <code_line>attrData.magnitude = attributeData.magnitude;</code_line>
	            <code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL14::float_array__AttributeData::ATTRIBUTE_COUNT_PRESENT) == COLLADASaxFWL14::float_array__AttributeData::ATTRIBUTE_COUNT_PRESENT ) {</code_line>
	            <code_line>    attrData.count = attributeData.count;</code_line>
	            <code_line>    attrData.present_attributes |= COLLADASaxFWL::float_array__AttributeData::ATTRIBUTE_COUNT_PRESENT;</code_line>
	            <code_line>}</code_line>
			</specific>
			<specific version="15" name="begin__float_array">
				<parameter type="const COLLADASaxFWL15::float_array__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::float_array__AttributeData attrData;</code_line>
				<code_line>attrData.present_attributes = 0;</code_line>
				<code_line>attrData.id = attributeData.id;</code_line>
	            <code_line>attrData.name = attributeData.name;</code_line>
				<code_line>attrData.digits = attributeData.digits;</code_line>
	            <code_line>attrData.magnitude = attributeData.magnitude;</code_line>
	            <code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::float_array__AttributeData::ATTRIBUTE_COUNT_PRESENT) == COLLADASaxFWL15::float_array__AttributeData::ATTRIBUTE_COUNT_PRESENT ) {</code_line>
	            <code_line>    attrData.count = attributeData.count;</code_line>
	            <code_line>    attrData.present_attributes |= COLLADASaxFWL::float_array__AttributeData::ATTRIBUTE_COUNT_PRESENT;</code_line>
	            <code_line>}</code_line>
			</specific>
		</method>

		<method name="end__float_array">
			<specific version="14" name="end__float_array"></specific>
			<specific version="15" name="end__float_array"></specific>
		</method>

		<method name="data__float_array">
			<parameter type="const float*" name="data" />
			<parameter type="size_t" name="length" />
			<specific version="14" name="data__float_array"></specific>
			<specific version="15" name="data__float_array"></specific>
		</method>

		<method name="begin__animation__source__technique_common">
			<specific version="14" name="begin__animation__source__technique_common"></specific>
			<specific version="15" name="begin__source_type____technique_common"></specific>
		</method>

		<method name="end__animation__source__technique_common">
			<specific version="14" name="end__animation__source__technique_common"></specific>
			<specific version="15" name="end__source_type____technique_common"></specific>
		</method>

		<method name="begin__accessor">
			<parameter type="COLLADASaxFWL::accessor__AttributeData" name="attrData" />
			<specific version="14" name="begin__accessor">
				<parameter type="const COLLADASaxFWL14::accessor__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::accessor__AttributeData attrData;</code_line>
				<code_line>attrData.present_attributes = 0;</code_line>
				<code_line>attrData.offset = attributeData.offset;</code_line>
	            <code_line>attrData.stride = attributeData.stride;</code_line>
	            <code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL14::accessor__AttributeData::ATTRIBUTE_COUNT_PRESENT) == COLLADASaxFWL14::accessor__AttributeData::ATTRIBUTE_COUNT_PRESENT ) {</code_line>
	            <code_line>    attrData.count = attributeData.count;</code_line>
	            <code_line>    attrData.present_attributes |= COLLADASaxFWL::accessor__AttributeData::ATTRIBUTE_COUNT_PRESENT;</code_line>
	            <code_line>}</code_line>
	            <code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL14::accessor__AttributeData::ATTRIBUTE_SOURCE_PRESENT) == COLLADASaxFWL14::accessor__AttributeData::ATTRIBUTE_SOURCE_PRESENT ) {</code_line>
	            <code_line>    attrData.source = attributeData.source;</code_line>
	            <code_line>    attrData.present_attributes |= COLLADASaxFWL::accessor__AttributeData::ATTRIBUTE_SOURCE_PRESENT;</code_line>
	            <code_line>}</code_line>
			</specific>
			<specific version="15" name="begin__accessor">
				<parameter type="const COLLADASaxFWL15::accessor__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::accessor__AttributeData attrData;</code_line>
				<code_line>attrData.present_attributes = 0;</code_line>
				<code_line>attrData.offset = attributeData.offset;</code_line>
	            <code_line>attrData.stride = attributeData.stride;</code_line>
	            <code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::accessor__AttributeData::ATTRIBUTE_COUNT_PRESENT) == COLLADASaxFWL15::accessor__AttributeData::ATTRIBUTE_COUNT_PRESENT ) {</code_line>
	            <code_line>    attrData.count = attributeData.count;</code_line>
	            <code_line>    attrData.present_attributes |= COLLADASaxFWL::accessor__AttributeData::ATTRIBUTE_COUNT_PRESENT;</code_line>
	            <code_line>}</code_line>
	            <code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::accessor__AttributeData::ATTRIBUTE_SOURCE_PRESENT) == COLLADASaxFWL15::accessor__AttributeData::ATTRIBUTE_SOURCE_PRESENT ) {</code_line>
	            <code_line>    attrData.source = attributeData.source;</code_line>
	            <code_line>    attrData.present_attributes |= COLLADASaxFWL::accessor__AttributeData::ATTRIBUTE_SOURCE_PRESENT;</code_line>
	            <code_line>}</code_line>
			</specific>
		</method>

		<method name="end__accessor">
			<specific version="14" name="end__accessor"></specific>
			<specific version="15" name="end__accessor"></specific>
		</method>

		<method name="begin__param">
			<parameter type="COLLADASaxFWL::param__AttributeData" name="attrData" />
			<specific version="14" name="begin__param">
				<parameter type="const COLLADASaxFWL14::param__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::param__AttributeData attrData;</code_line>
				<code_line>attrData.name = attributeData.name;</code_line>
	            <code_line>attrData.sid = attributeData.sid;</code_line>
				<code_line>attrData.semantic = attributeData.semantic;</code_line>
	            <code_line>attrData.type = attributeData.type;</code_line>
			</specific>
			<specific version="15" name="begin__param____param_type">
				<parameter type="const COLLADASaxFWL15::param____param_type__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::param__AttributeData attrData;</code_line>
				<code_line>attrData.name = attributeData.name;</code_line>
	            <code_line>attrData.sid = attributeData.sid;</code_line>
				<code_line>attrData.semantic = attributeData.semantic;</code_line>
	            <code_line>attrData.type = attributeData.type;</code_line>
			</specific>
		</method>

		<method name="end__param">
			<specific version="14" name="end__param"></specific>
			<specific version="15" name="end__param____param_type"></specific>
		</method>

		<method name="data__param">
			<parameter type="const ParserChar*" name="value" />
			<parameter type="size_t" name="length" />
			<specific version="14" name="data__param"></specific>
			<specific version="15" name="data__param____param_type"></specific>
		</method>

		<method name="begin__technique">
			<parameter type="COLLADASaxFWL::technique__AttributeData" name="attrData" />
			<specific version="14" name="begin__technique">
				<parameter type="const COLLADASaxFWL14::technique__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::technique__AttributeData attrData;</code_line>
				<code_line>attrData.profile = attributeData.profile;</code_line>
			</specific>
			<specific version="15" name="begin__technique____technique_type">
				<parameter type="const COLLADASaxFWL15::technique____technique_type__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::technique__AttributeData attrData;</code_line>
				<code_line>attrData.profile = attributeData.profile;</code_line>
			</specific>
		</method>

		<method name="end__technique">
			<specific version="14" name="end__technique"></specific>
			<specific version="15" name="end__technique____technique_type"></specific>
		</method>

	</class>

	<class name="MeshLoader" include="COLLADASaxFWLMeshLoader.h" 
			baseClass="SourceArrayLoader" baseInclude="COLLADASaxFWLSourceArrayLoader.h">
		<member type="MeshLoader*" name="mLoader" />
		<ctor>
			<parameter type="MeshLoader*" name="loader" />
			<initlist name="SourceArrayLoader" value="loader" />
			<initlist name="mLoader" value="loader" />
		</ctor>

		<method name="begin__source">
			<parameter type="COLLADASaxFWL::source__AttributeData" name="attrData" />
			<specific version="14" name="begin__source">
				<parameter type="const COLLADASaxFWL14::source__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::source__AttributeData attrData;</code_line>
				<code_line>attrData.id = attributeData.id;</code_line>
	            <code_line>attrData.name = attributeData.name;</code_line>
			</specific>
			<specific version="15" name="begin__source">
				<parameter type="const COLLADASaxFWL15::source__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::source__AttributeData attrData;</code_line>
				<code_line>attrData.id = attributeData.id;</code_line>
	            <code_line>attrData.name = attributeData.name;</code_line>
			</specific>
		</method>

		<method name="end__source">
			<specific version="14" name="end__source"></specific>
			<specific version="15" name="end__source"></specific>
		</method>

		<method name="end__mesh">
			<specific version="14" name="end__mesh"></specific>
			<specific version="15" name="end__mesh"></specific>
		</method>

		<method name="begin__vertices">
			<parameter type="COLLADASaxFWL::vertices__AttributeData" name="attrData" />
			<specific version="14" name="begin__vertices">
				<parameter type="const COLLADASaxFWL14::vertices__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::vertices__AttributeData attrData;</code_line>
				<code_line>attrData.id = attributeData.id;</code_line>
	            <code_line>attrData.name = attributeData.name;</code_line>
			</specific>
			<specific version="15" name="begin__vertices">
				<parameter type="const COLLADASaxFWL15::vertices__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::vertices__AttributeData attrData;</code_line>
				<code_line>attrData.id = attributeData.id;</code_line>
	            <code_line>attrData.name = attributeData.name;</code_line>
			</specific>
		</method>

		<method name="end__vertices">
			<specific version="14" name="end__vertices"></specific>
			<specific version="15" name="end__vertices"></specific>
		</method>

		<method name="begin__input____InputLocal">
			<parameter type="COLLADASaxFWL::input____InputLocal__AttributeData" name="attrData" />
			<specific version="14" name="begin__input____InputLocal">
				<parameter type="const COLLADASaxFWL14::input____InputLocal__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::input____InputLocal__AttributeData attrData;</code_line>
				<code_line>attrData.semantic = attributeData.semantic;</code_line>
	            <code_line>attrData.source = attributeData.source;</code_line>
			</specific>
			<specific version="15" name="begin__input____input_local_type">
				<parameter type="const COLLADASaxFWL15::input____input_local_type__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::input____InputLocal__AttributeData attrData;</code_line>
				<code_line>attrData.semantic = attributeData.semantic;</code_line>
	            <code_line>attrData.source = attributeData.source;</code_line>
			</specific>
		</method>

		<method name="end__input____InputLocal">
			<specific version="14" name="end__input____InputLocal"></specific>
			<specific version="15" name="end__input____input_local_type"></specific>
		</method>

		<method name="begin__input____InputLocalOffset">
			<parameter type="COLLADASaxFWL::input____InputLocalOffset__AttributeData" name="attrData" />
			<specific version="14" name="begin__input____InputLocalOffset">
				<parameter type="const COLLADASaxFWL14::input____InputLocalOffset__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::input____InputLocalOffset__AttributeData attrData;</code_line>
				<code_line>attrData.present_attributes = 0;</code_line>
				<code_line>attrData.semantic = attributeData.semantic;</code_line>
	            <code_line>attrData.source = attributeData.source;</code_line>
	            <code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL14::input____InputLocalOffset__AttributeData::ATTRIBUTE_OFFSET_PRESENT) == COLLADASaxFWL14::input____InputLocalOffset__AttributeData::ATTRIBUTE_OFFSET_PRESENT ) {</code_line>
	            <code_line>    attrData.offset = attributeData.offset;</code_line>
	            <code_line>    attrData.present_attributes |= COLLADASaxFWL::input____InputLocalOffset__AttributeData::ATTRIBUTE_OFFSET_PRESENT;</code_line>
	            <code_line>}</code_line>
	            <code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL14::input____InputLocalOffset__AttributeData::ATTRIBUTE_SET_PRESENT) == COLLADASaxFWL14::input____InputLocalOffset__AttributeData::ATTRIBUTE_SET_PRESENT ) {</code_line>
	            <code_line>    attrData.set = attributeData.set;</code_line>
	            <code_line>    attrData.present_attributes |= COLLADASaxFWL::input____InputLocalOffset__AttributeData::ATTRIBUTE_SET_PRESENT;</code_line>
	            <code_line>}</code_line>
			</specific>
			<specific version="15" name="begin__input____input_local_offset_type">
				<parameter type="const COLLADASaxFWL15::input____input_local_offset_type__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::input____InputLocalOffset__AttributeData attrData;</code_line>
				<code_line>attrData.present_attributes = 0;</code_line>
				<code_line>attrData.semantic = attributeData.semantic;</code_line>
	            <code_line>attrData.source = attributeData.source;</code_line>
	            <code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::input____input_local_offset_type__AttributeData::ATTRIBUTE_OFFSET_PRESENT) == COLLADASaxFWL15::input____input_local_offset_type__AttributeData::ATTRIBUTE_OFFSET_PRESENT ) {</code_line>
	            <code_line>    attrData.offset = attributeData.offset;</code_line>
	            <code_line>    attrData.present_attributes |= COLLADASaxFWL::input____InputLocalOffset__AttributeData::ATTRIBUTE_OFFSET_PRESENT;</code_line>
	            <code_line>}</code_line>
	            <code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::input____input_local_offset_type__AttributeData::ATTRIBUTE_SET_PRESENT) == COLLADASaxFWL15::input____input_local_offset_type__AttributeData::ATTRIBUTE_SET_PRESENT ) {</code_line>
	            <code_line>    attrData.set = attributeData.set;</code_line>
	            <code_line>    attrData.present_attributes |= COLLADASaxFWL::input____InputLocalOffset__AttributeData::ATTRIBUTE_SET_PRESENT;</code_line>
	            <code_line>}</code_line>
			</specific>
		</method>

		<method name="end__input____InputLocalOffset">
			<specific version="14" name="end__input____InputLocalOffset"></specific>
			<specific version="15" name="end__input____input_local_offset_type"></specific>
		</method>

		<method name="begin__ph">
			<specific version="14" name="begin__ph"></specific>
			<specific version="15" name="begin__ph"></specific>
		</method>

		<method name="end__ph">
			<specific version="14" name="end__ph"></specific>
			<specific version="15" name="end__ph"></specific>
		</method>

		<method name="begin__p">
			<specific version="14" name="begin__p"></specific>
			<specific version="15" name="begin__p"></specific>
		</method>

		<method name="end__p">
			<specific version="14" name="end__p"></specific>
			<specific version="15" name="end__p"></specific>
		</method>

		<method name="data__p">
			<parameter type="const uint64*" name="data" />
			<parameter type="size_t" name="length" />
			<specific version="14" name="data__p"></specific>
			<specific version="15" name="data__p"></specific>
		</method>

		<method name="begin__vcount">
			<specific version="14" name="begin__vcount"></specific>
			<specific version="15" name="begin__vcount"></specific>
		</method>

		<method name="end__vcount">
			<specific version="14" name="end__vcount"></specific>
			<specific version="15" name="end__vcount"></specific>
		</method>

		<method name="data__vcount">
			<parameter type="const uint64*" name="data" />
			<parameter type="size_t" name="length" />
			<specific version="14" name="data__vcount"></specific>
			<specific version="15" name="data__vcount"></specific>
		</method>

		<method name="begin__h">
			<specific version="14" name="begin__h"></specific>
			<specific version="15" name="begin__h"></specific>
		</method>

		<method name="end__h">
			<specific version="14" name="end__h"></specific>
			<specific version="15" name="end__h"></specific>
		</method>

		<method name="data__h">
			<parameter type="const uint64*" name="data" />
			<parameter type="size_t" name="length" />
			<specific version="14" name="data__h"></specific>
			<specific version="15" name="data__h"></specific>
		</method>

		<method name="begin__triangles">
			<parameter type="COLLADASaxFWL::triangles__AttributeData" name="attrData" />
			<specific version="14" name="begin__triangles">
				<parameter type="const COLLADASaxFWL14::triangles__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::triangles__AttributeData attrData;</code_line>
				<code_line>attrData.present_attributes = 0;</code_line>
				<code_line>attrData.name = attributeData.name;</code_line>
	            <code_line>attrData.material = attributeData.material;</code_line>
	            <code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL14::triangles__AttributeData::ATTRIBUTE_COUNT_PRESENT) == COLLADASaxFWL14::triangles__AttributeData::ATTRIBUTE_COUNT_PRESENT ) {</code_line>
	            <code_line>    attrData.count = attributeData.count;</code_line>
	            <code_line>    attrData.present_attributes |= COLLADASaxFWL::triangles__AttributeData::ATTRIBUTE_COUNT_PRESENT;</code_line>
	            <code_line>}</code_line>
			</specific>
			<specific version="15" name="begin__triangles">
				<parameter type="const COLLADASaxFWL15::triangles__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::triangles__AttributeData attrData;</code_line>
				<code_line>attrData.present_attributes = 0;</code_line>
				<code_line>attrData.name = attributeData.name;</code_line>
	            <code_line>attrData.material = attributeData.material;</code_line>
	            <code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::triangles__AttributeData::ATTRIBUTE_COUNT_PRESENT) == COLLADASaxFWL15::triangles__AttributeData::ATTRIBUTE_COUNT_PRESENT ) {</code_line>
	            <code_line>    attrData.count = attributeData.count;</code_line>
	            <code_line>    attrData.present_attributes |= COLLADASaxFWL::triangles__AttributeData::ATTRIBUTE_COUNT_PRESENT;</code_line>
	            <code_line>}</code_line>
			</specific>
		</method>

		<method name="end__triangles">
			<specific version="14" name="end__triangles"></specific>
			<specific version="15" name="end__triangles"></specific>
		</method>

		<method name="begin__tristrips">
			<parameter type="COLLADASaxFWL::tristrips__AttributeData" name="attrData" />
			<specific version="14" name="begin__tristrips">
				<parameter type="const COLLADASaxFWL14::tristrips__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::tristrips__AttributeData attrData;</code_line>
				<code_line>attrData.present_attributes = 0;</code_line>
				<code_line>attrData.name = attributeData.name;</code_line>
	            <code_line>attrData.material = attributeData.material;</code_line>
	            <code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL14::tristrips__AttributeData::ATTRIBUTE_COUNT_PRESENT) == COLLADASaxFWL14::tristrips__AttributeData::ATTRIBUTE_COUNT_PRESENT ) {</code_line>
	            <code_line>    attrData.count = attributeData.count;</code_line>
	            <code_line>    attrData.present_attributes |= COLLADASaxFWL::tristrips__AttributeData::ATTRIBUTE_COUNT_PRESENT;</code_line>
	            <code_line>}</code_line>
			</specific>
			<specific version="15" name="begin__tristrips">
				<parameter type="const COLLADASaxFWL15::tristrips__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::tristrips__AttributeData attrData;</code_line>
				<code_line>attrData.present_attributes = 0;</code_line>
				<code_line>attrData.name = attributeData.name;</code_line>
	            <code_line>attrData.material = attributeData.material;</code_line>
	            <code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::tristrips__AttributeData::ATTRIBUTE_COUNT_PRESENT) == COLLADASaxFWL15::tristrips__AttributeData::ATTRIBUTE_COUNT_PRESENT ) {</code_line>
	            <code_line>    attrData.count = attributeData.count;</code_line>
	            <code_line>    attrData.present_attributes |= COLLADASaxFWL::tristrips__AttributeData::ATTRIBUTE_COUNT_PRESENT;</code_line>
	            <code_line>}</code_line>
			</specific>
		</method>

		<method name="end__tristrips">
			<specific version="14" name="end__tristrips"></specific>
			<specific version="15" name="end__tristrips"></specific>
		</method>

		<method name="begin__trifans">
			<parameter type="COLLADASaxFWL::trifans__AttributeData" name="attrData" />
			<specific version="14" name="begin__trifans">
				<parameter type="const COLLADASaxFWL14::trifans__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::trifans__AttributeData attrData;</code_line>
				<code_line>attrData.present_attributes = 0;</code_line>
				<code_line>attrData.name = attributeData.name;</code_line>
	            <code_line>attrData.material = attributeData.material;</code_line>
	            <code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL14::trifans__AttributeData::ATTRIBUTE_COUNT_PRESENT) == COLLADASaxFWL14::trifans__AttributeData::ATTRIBUTE_COUNT_PRESENT ) {</code_line>
	            <code_line>    attrData.count = attributeData.count;</code_line>
	            <code_line>    attrData.present_attributes |= COLLADASaxFWL::trifans__AttributeData::ATTRIBUTE_COUNT_PRESENT;</code_line>
	            <code_line>}</code_line>
			</specific>
			<specific version="15" name="begin__trifans">
				<parameter type="const COLLADASaxFWL15::trifans__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::trifans__AttributeData attrData;</code_line>
				<code_line>attrData.present_attributes = 0;</code_line>
				<code_line>attrData.name = attributeData.name;</code_line>
	            <code_line>attrData.material = attributeData.material;</code_line>
	            <code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::trifans__AttributeData::ATTRIBUTE_COUNT_PRESENT) == COLLADASaxFWL15::trifans__AttributeData::ATTRIBUTE_COUNT_PRESENT ) {</code_line>
	            <code_line>    attrData.count = attributeData.count;</code_line>
	            <code_line>    attrData.present_attributes |= COLLADASaxFWL::trifans__AttributeData::ATTRIBUTE_COUNT_PRESENT;</code_line>
	            <code_line>}</code_line>
			</specific>
		</method>

		<method name="end__trifans">
			<specific version="14" name="end__trifans"></specific>
			<specific version="15" name="end__trifans"></specific>
		</method>

		<method name="begin__polygons">
			<parameter type="COLLADASaxFWL::polygons__AttributeData" name="attrData" />
			<specific version="14" name="begin__polygons">
				<parameter type="const COLLADASaxFWL14::polygons__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::polygons__AttributeData attrData;</code_line>
				<code_line>attrData.present_attributes = 0;</code_line>
				<code_line>attrData.name = attributeData.name;</code_line>
	            <code_line>attrData.material = attributeData.material;</code_line>
	            <code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL14::polygons__AttributeData::ATTRIBUTE_COUNT_PRESENT) == COLLADASaxFWL14::polygons__AttributeData::ATTRIBUTE_COUNT_PRESENT ) {</code_line>
	            <code_line>    attrData.count = attributeData.count;</code_line>
	            <code_line>    attrData.present_attributes |= COLLADASaxFWL::polygons__AttributeData::ATTRIBUTE_COUNT_PRESENT;</code_line>
	            <code_line>}</code_line>
			</specific>
			<specific version="15" name="begin__polygons">
				<parameter type="const COLLADASaxFWL15::polygons__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::polygons__AttributeData attrData;</code_line>
				<code_line>attrData.present_attributes = 0;</code_line>
				<code_line>attrData.name = attributeData.name;</code_line>
	            <code_line>attrData.material = attributeData.material;</code_line>
	            <code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::polygons__AttributeData::ATTRIBUTE_COUNT_PRESENT) == COLLADASaxFWL15::polygons__AttributeData::ATTRIBUTE_COUNT_PRESENT ) {</code_line>
	            <code_line>    attrData.count = attributeData.count;</code_line>
	            <code_line>    attrData.present_attributes |= COLLADASaxFWL::polygons__AttributeData::ATTRIBUTE_COUNT_PRESENT;</code_line>
	            <code_line>}</code_line>
			</specific>
		</method>

		<method name="end__polygons">
			<specific version="14" name="end__polygons"></specific>
			<specific version="15" name="end__polygons"></specific>
		</method>

		<method name="begin__polylist">
			<parameter type="COLLADASaxFWL::polylist__AttributeData" name="attrData" />
			<specific version="14" name="begin__polylist">
				<parameter type="const COLLADASaxFWL14::polylist__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::polylist__AttributeData attrData;</code_line>
				<code_line>attrData.present_attributes = 0;</code_line>
				<code_line>attrData.name = attributeData.name;</code_line>
	            <code_line>attrData.material = attributeData.material;</code_line>
	            <code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL14::polylist__AttributeData::ATTRIBUTE_COUNT_PRESENT) == COLLADASaxFWL14::polylist__AttributeData::ATTRIBUTE_COUNT_PRESENT ) {</code_line>
	            <code_line>    attrData.count = attributeData.count;</code_line>
	            <code_line>    attrData.present_attributes |= COLLADASaxFWL::polylist__AttributeData::ATTRIBUTE_COUNT_PRESENT;</code_line>
	            <code_line>}</code_line>
			</specific>
			<specific version="15" name="begin__polylist">
				<parameter type="const COLLADASaxFWL15::polylist__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::polylist__AttributeData attrData;</code_line>
				<code_line>attrData.present_attributes = 0;</code_line>
				<code_line>attrData.name = attributeData.name;</code_line>
	            <code_line>attrData.material = attributeData.material;</code_line>
	            <code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::polylist__AttributeData::ATTRIBUTE_COUNT_PRESENT) == COLLADASaxFWL15::polylist__AttributeData::ATTRIBUTE_COUNT_PRESENT ) {</code_line>
	            <code_line>    attrData.count = attributeData.count;</code_line>
	            <code_line>    attrData.present_attributes |= COLLADASaxFWL::polylist__AttributeData::ATTRIBUTE_COUNT_PRESENT;</code_line>
	            <code_line>}</code_line>
			</specific>
		</method>

		<method name="end__polylist">
			<specific version="14" name="end__polylist"></specific>
			<specific version="15" name="end__polylist"></specific>
		</method>

		<method name="begin__lines">
			<parameter type="COLLADASaxFWL::lines__AttributeData" name="attrData" />
			<specific version="14" name="begin__lines">
				<parameter type="const COLLADASaxFWL14::lines__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::lines__AttributeData attrData;</code_line>
				<code_line>attrData.present_attributes = 0;</code_line>
				<code_line>attrData.name = attributeData.name;</code_line>
	            <code_line>attrData.material = attributeData.material;</code_line>
	            <code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL14::lines__AttributeData::ATTRIBUTE_COUNT_PRESENT) == COLLADASaxFWL14::lines__AttributeData::ATTRIBUTE_COUNT_PRESENT ) {</code_line>
	            <code_line>    attrData.count = attributeData.count;</code_line>
	            <code_line>    attrData.present_attributes |= COLLADASaxFWL::lines__AttributeData::ATTRIBUTE_COUNT_PRESENT;</code_line>
	            <code_line>}</code_line>
			</specific>
			<specific version="15" name="begin__lines">
				<parameter type="const COLLADASaxFWL15::lines__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::lines__AttributeData attrData;</code_line>
				<code_line>attrData.present_attributes = 0;</code_line>
				<code_line>attrData.name = attributeData.name;</code_line>
	            <code_line>attrData.material = attributeData.material;</code_line>
	            <code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::lines__AttributeData::ATTRIBUTE_COUNT_PRESENT) == COLLADASaxFWL15::lines__AttributeData::ATTRIBUTE_COUNT_PRESENT ) {</code_line>
	            <code_line>    attrData.count = attributeData.count;</code_line>
	            <code_line>    attrData.present_attributes |= COLLADASaxFWL::lines__AttributeData::ATTRIBUTE_COUNT_PRESENT;</code_line>
	            <code_line>}</code_line>
			</specific>
		</method>

		<method name="end__lines">
			<specific version="14" name="end__lines"></specific>
			<specific version="15" name="end__lines"></specific>
		</method>

		<method name="begin__linestrips">
			<parameter type="COLLADASaxFWL::linestrips__AttributeData" name="attrData" />
			<specific version="14" name="begin__linestrips">
				<parameter type="const COLLADASaxFWL14::linestrips__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::linestrips__AttributeData attrData;</code_line>
				<code_line>attrData.present_attributes = 0;</code_line>
				<code_line>attrData.name = attributeData.name;</code_line>
	            <code_line>attrData.material = attributeData.material;</code_line>
	            <code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL14::linestrips__AttributeData::ATTRIBUTE_COUNT_PRESENT) == COLLADASaxFWL14::linestrips__AttributeData::ATTRIBUTE_COUNT_PRESENT ) {</code_line>
	            <code_line>    attrData.count = attributeData.count;</code_line>
	            <code_line>    attrData.present_attributes |= COLLADASaxFWL::linestrips__AttributeData::ATTRIBUTE_COUNT_PRESENT;</code_line>
	            <code_line>}</code_line>
			</specific>
			<specific version="15" name="begin__linestrips">
				<parameter type="const COLLADASaxFWL15::linestrips__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::linestrips__AttributeData attrData;</code_line>
				<code_line>attrData.present_attributes = 0;</code_line>
				<code_line>attrData.name = attributeData.name;</code_line>
	            <code_line>attrData.material = attributeData.material;</code_line>
	            <code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::linestrips__AttributeData::ATTRIBUTE_COUNT_PRESENT) == COLLADASaxFWL15::linestrips__AttributeData::ATTRIBUTE_COUNT_PRESENT ) {</code_line>
	            <code_line>    attrData.count = attributeData.count;</code_line>
	            <code_line>    attrData.present_attributes |= COLLADASaxFWL::linestrips__AttributeData::ATTRIBUTE_COUNT_PRESENT;</code_line>
	            <code_line>}</code_line>
			</specific>
		</method>

		<method name="end__linestrips">
			<specific version="14" name="end__linestrips"></specific>
			<specific version="15" name="end__linestrips"></specific>
		</method>

		<method name="begin__technique">
			<parameter type="COLLADASaxFWL::technique__AttributeData" name="attrData" />
			<specific version="14" name="begin__technique">
				<parameter type="const COLLADASaxFWL14::technique__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::technique__AttributeData attrData;</code_line>
				<code_line>attrData.profile = attributeData.profile;</code_line>
			</specific>
			<specific version="15" name="begin__technique____technique_type">
				<parameter type="const COLLADASaxFWL15::technique____technique_type__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::technique__AttributeData attrData;</code_line>
				<code_line>attrData.profile = attributeData.profile;</code_line>
			</specific>
		</method>

		<method name="end__technique">
			<specific version="14" name="end__technique"></specific>
			<specific version="15" name="end__technique____technique_type"></specific>
		</method>

	</class>

	<class name="LibraryAnimationsLoader" include="COLLADASaxFWLLibraryAnimationsLoader.h" 
			baseClass="SourceArrayLoader" baseInclude="COLLADASaxFWLSourceArrayLoader.h">
		<member type="LibraryAnimationsLoader*" name="mLoader" />
		<ctor>
			<parameter type="LibraryAnimationsLoader*" name="loader" />
			<initlist name="SourceArrayLoader" value="loader" />
			<initlist name="mLoader" value="loader" />
		</ctor>

		<method name="end__library_animations">
			<specific version="14" name="end__library_animations"></specific>
			<specific version="15" name="end__library_animations"></specific>
		</method>

		<method name="begin__source">
			<parameter type="COLLADASaxFWL::source__AttributeData" name="attrData" />
			<specific version="14" name="begin__source">
				<parameter type="const COLLADASaxFWL14::source__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::source__AttributeData attrData;</code_line>
				<code_line>attrData.id = attributeData.id;</code_line>
	            <code_line>attrData.name = attributeData.name;</code_line>
			</specific>
			<specific version="15" name="begin__source">
				<parameter type="const COLLADASaxFWL15::source__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::source__AttributeData attrData;</code_line>
				<code_line>attrData.id = attributeData.id;</code_line>
	            <code_line>attrData.name = attributeData.name;</code_line>
			</specific>
		</method>

		<method name="end__source">
			<specific version="14" name="end__source"></specific>
			<specific version="15" name="end__source"></specific>
		</method>

		<method name="begin__animation">
			<parameter type="COLLADASaxFWL::animation__AttributeData" name="attrData" />
			<specific version="14" name="begin__animation">
				<parameter type="const COLLADASaxFWL14::animation__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::animation__AttributeData attrData;</code_line>
				<code_line>attrData.id = attributeData.id;</code_line>
	            <code_line>attrData.name = attributeData.name;</code_line>
			</specific>
			<specific version="15" name="begin__animation">
				<parameter type="const COLLADASaxFWL15::animation__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::animation__AttributeData attrData;</code_line>
				<code_line>attrData.id = attributeData.id;</code_line>
	            <code_line>attrData.name = attributeData.name;</code_line>
			</specific>
		</method>

		<method name="end__animation">
			<specific version="14" name="end__animation"></specific>
			<specific version="15" name="end__animation"></specific>
		</method>

		<method name="begin__sampler">
			<parameter type="COLLADASaxFWL::sampler__AttributeData" name="attrData" />
			<specific version="14" name="begin__sampler">
				<parameter type="const COLLADASaxFWL14::sampler__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::sampler__AttributeData attrData;</code_line>
				<code_line>attrData.id = attributeData.id;</code_line>
				<code_line>attrData.pre_behavior = COLLADASaxFWL::ENUM__sampler_behavior__NOT_PRESENT;</code_line>
				<code_line>attrData.post_behavior = COLLADASaxFWL::ENUM__sampler_behavior__NOT_PRESENT;</code_line>
			</specific>
			<specific version="15" name="begin__sampler">
				<parameter type="const COLLADASaxFWL15::sampler__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::sampler__AttributeData attrData;</code_line>
				<code_line>attrData.id = attributeData.id;</code_line>
				<code_line>switch (attributeData.pre_behavior) {</code_line>
				<code_line>case COLLADASaxFWL15::ENUM__sampler_behavior_enum__CONSTANT: attrData.pre_behavior=COLLADASaxFWL::ENUM__sampler_behavior__CONSTANT; break;</code_line>
				<code_line>case COLLADASaxFWL15::ENUM__sampler_behavior_enum__CYCLE: attrData.pre_behavior=COLLADASaxFWL::ENUM__sampler_behavior__CYCLE; break;</code_line>
				<code_line>case COLLADASaxFWL15::ENUM__sampler_behavior_enum__CYCLE_RELATIVE: attrData.pre_behavior=COLLADASaxFWL::ENUM__sampler_behavior__CYCLE_RELATIVE; break;</code_line>
				<code_line>case COLLADASaxFWL15::ENUM__sampler_behavior_enum__GRADIENT: attrData.pre_behavior=COLLADASaxFWL::ENUM__sampler_behavior__GRADIENT; break;</code_line>
				<code_line>case COLLADASaxFWL15::ENUM__sampler_behavior_enum__OSCILLATE: attrData.pre_behavior=COLLADASaxFWL::ENUM__sampler_behavior__OSCILLATE; break;</code_line>
				<code_line>case COLLADASaxFWL15::ENUM__sampler_behavior_enum__UNDEFINED: attrData.pre_behavior=COLLADASaxFWL::ENUM__sampler_behavior__UNDEFINED; break;</code_line>
				<code_line>case COLLADASaxFWL15::ENUM__sampler_behavior_enum__COUNT: attrData.pre_behavior=COLLADASaxFWL::ENUM__sampler_behavior__INVALID; break;</code_line>
				<code_line>case COLLADASaxFWL15::ENUM__sampler_behavior_enum__NOT_PRESENT: attrData.pre_behavior=COLLADASaxFWL::ENUM__sampler_behavior__NOT_PRESENT; break;</code_line>
	            <code_line>}</code_line>
				<code_line>switch (attributeData.post_behavior) {</code_line>
				<code_line>case COLLADASaxFWL15::ENUM__sampler_behavior_enum__CONSTANT: attrData.post_behavior=COLLADASaxFWL::ENUM__sampler_behavior__CONSTANT; break;</code_line>
				<code_line>case COLLADASaxFWL15::ENUM__sampler_behavior_enum__CYCLE: attrData.post_behavior=COLLADASaxFWL::ENUM__sampler_behavior__CYCLE; break;</code_line>
				<code_line>case COLLADASaxFWL15::ENUM__sampler_behavior_enum__CYCLE_RELATIVE: attrData.post_behavior=COLLADASaxFWL::ENUM__sampler_behavior__CYCLE_RELATIVE; break;</code_line>
				<code_line>case COLLADASaxFWL15::ENUM__sampler_behavior_enum__GRADIENT: attrData.post_behavior=COLLADASaxFWL::ENUM__sampler_behavior__GRADIENT; break;</code_line>
				<code_line>case COLLADASaxFWL15::ENUM__sampler_behavior_enum__OSCILLATE: attrData.post_behavior=COLLADASaxFWL::ENUM__sampler_behavior__OSCILLATE; break;</code_line>
				<code_line>case COLLADASaxFWL15::ENUM__sampler_behavior_enum__UNDEFINED: attrData.post_behavior=COLLADASaxFWL::ENUM__sampler_behavior__UNDEFINED; break;</code_line>
				<code_line>case COLLADASaxFWL15::ENUM__sampler_behavior_enum__COUNT: attrData.post_behavior=COLLADASaxFWL::ENUM__sampler_behavior__INVALID; break;</code_line>
				<code_line>case COLLADASaxFWL15::ENUM__sampler_behavior_enum__NOT_PRESENT: attrData.post_behavior=COLLADASaxFWL::ENUM__sampler_behavior__NOT_PRESENT; break;</code_line>
	            <code_line>}</code_line>
			</specific>
		</method>

		<method name="end__sampler">
			<specific version="14" name="end__sampler"></specific>
			<specific version="15" name="end__sampler"></specific>
		</method>

		<method name="begin__channel">
			<parameter type="COLLADASaxFWL::channel__AttributeData" name="attrData" />
			<specific version="14" name="begin__channel">
				<parameter type="const COLLADASaxFWL14::channel__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::channel__AttributeData attrData;</code_line>
				<code_line>attrData.source = attributeData.source;</code_line>
	            <code_line>attrData.target = attributeData.target;</code_line>
			</specific>
			<specific version="15" name="begin__channel">
				<parameter type="const COLLADASaxFWL15::channel__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::channel__AttributeData attrData;</code_line>
				<code_line>attrData.source = attributeData.source;</code_line>
	            <code_line>attrData.target = attributeData.target;</code_line>
			</specific>
		</method>

		<method name="end__channel">
			<specific version="14" name="end__channel"></specific>
			<specific version="15" name="end__channel"></specific>
		</method>

		<method name="begin__input____InputLocal">
			<parameter type="COLLADASaxFWL::input____InputLocal__AttributeData" name="attrData" />
			<specific version="14" name="begin__input____InputLocal">
				<parameter type="const COLLADASaxFWL14::input____InputLocal__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::input____InputLocal__AttributeData attrData;</code_line>
				<code_line>attrData.semantic = attributeData.semantic;</code_line>
	            <code_line>attrData.source = attributeData.source;</code_line>
			</specific>
			<specific version="15" name="begin__input____input_local_type">
				<parameter type="const COLLADASaxFWL15::input____input_local_type__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::input____InputLocal__AttributeData attrData;</code_line>
				<code_line>attrData.semantic = attributeData.semantic;</code_line>
	            <code_line>attrData.source = attributeData.source;</code_line>
			</specific>
		</method>

		<method name="end__input____InputLocal">
			<specific version="14" name="end__input____InputLocal"></specific>
			<specific version="15" name="end__input____input_local_type"></specific>
		</method>

		<method name="begin__Name_array">
			<parameter type="COLLADASaxFWL::Name_array__AttributeData" name="attrData" />
			<specific version="14" name="begin__Name_array">
				<parameter type="const COLLADASaxFWL14::Name_array__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::Name_array__AttributeData attrData;</code_line>
				<code_line>attrData.present_attributes = 0;</code_line>
				<code_line>attrData.id = attributeData.id;</code_line>
	            <code_line>attrData.name = attributeData.name;</code_line>
	            <code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL14::Name_array__AttributeData::ATTRIBUTE_COUNT_PRESENT) == COLLADASaxFWL14::Name_array__AttributeData::ATTRIBUTE_COUNT_PRESENT ) {</code_line>
	            <code_line>    attrData.count = attributeData.count;</code_line>
	            <code_line>    attrData.present_attributes |= COLLADASaxFWL::Name_array__AttributeData::ATTRIBUTE_COUNT_PRESENT;</code_line>
	            <code_line>}</code_line>
			</specific>
			<specific version="15" name="begin__Name_array">
				<parameter type="const COLLADASaxFWL15::Name_array__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::Name_array__AttributeData attrData;</code_line>
				<code_line>attrData.present_attributes = 0;</code_line>
				<code_line>attrData.id = attributeData.id;</code_line>
	            <code_line>attrData.name = attributeData.name;</code_line>
	            <code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::Name_array__AttributeData::ATTRIBUTE_COUNT_PRESENT) == COLLADASaxFWL15::Name_array__AttributeData::ATTRIBUTE_COUNT_PRESENT ) {</code_line>
	            <code_line>    attrData.count = attributeData.count;</code_line>
	            <code_line>    attrData.present_attributes |= COLLADASaxFWL::Name_array__AttributeData::ATTRIBUTE_COUNT_PRESENT;</code_line>
	            <code_line>}</code_line>
			</specific>
		</method>

		<method name="end__Name_array">
			<specific version="14" name="end__Name_array"></specific>
			<specific version="15" name="end__Name_array"></specific>
		</method>

		<method name="data__Name_array">
			<parameter type="const ParserString*" name="data" />
			<parameter type="size_t" name="length" />
			<specific version="14" name="data__Name_array"></specific>
			<specific version="15" name="data__Name_array"></specific>
		</method>

		<method name="begin__technique">
			<parameter type="COLLADASaxFWL::technique__AttributeData" name="attrData" />
			<specific version="14" name="begin__technique">
				<parameter type="const COLLADASaxFWL14::technique__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::technique__AttributeData attrData;</code_line>
				<code_line>attrData.profile = attributeData.profile;</code_line>
			</specific>
			<specific version="15" name="begin__technique____technique_type">
				<parameter type="const COLLADASaxFWL15::technique____technique_type__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::technique__AttributeData attrData;</code_line>
				<code_line>attrData.profile = attributeData.profile;</code_line>
			</specific>
		</method>

		<method name="end__technique">
			<specific version="14" name="end__technique"></specific>
			<specific version="15" name="end__technique____technique_type"></specific>
		</method>

	</class>

	<class name="LibraryControllersLoader" include="COLLADASaxFWLLibraryControllersLoader.h" 
			baseClass="SourceArrayLoader" baseInclude="COLLADASaxFWLSourceArrayLoader.h">
		<member type="LibraryControllersLoader*" name="mLoader" />
		<ctor>
			<parameter type="LibraryControllersLoader*" name="loader" />
			<initlist name="SourceArrayLoader" value="loader" />
			<initlist name="mLoader" value="loader" />
		</ctor>

		<method name="end__library_controllers">
			<specific version="14" name="end__library_controllers"></specific>
			<specific version="15" name="end__library_controllers"></specific>
		</method>

		<method name="begin__controller">
			<parameter type="COLLADASaxFWL::controller__AttributeData" name="attrData" />
			<specific version="14" name="begin__controller">
				<parameter type="const COLLADASaxFWL14::controller__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::controller__AttributeData attrData;</code_line>
				<code_line>attrData.id = attributeData.id;</code_line>
	            <code_line>attrData.name = attributeData.name;</code_line>
			</specific>
			<specific version="15" name="begin__controller">
				<parameter type="const COLLADASaxFWL15::controller__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::controller__AttributeData attrData;</code_line>
				<code_line>attrData.id = attributeData.id;</code_line>
	            <code_line>attrData.name = attributeData.name;</code_line>
			</specific>
		</method>

		<method name="end__controller">
			<specific version="14" name="end__controller"></specific>
			<specific version="15" name="end__controller"></specific>
		</method>

		<method name="begin__skin">
			<parameter type="COLLADASaxFWL::skin__AttributeData" name="attrData" />
			<specific version="14" name="begin__skin">
				<parameter type="const COLLADASaxFWL14::skin__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::skin__AttributeData attrData;</code_line>
				<code_line>attrData.present_attributes = 0;</code_line>
	            <code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL14::skin__AttributeData::ATTRIBUTE_SOURCE_PRESENT) == COLLADASaxFWL14::skin__AttributeData::ATTRIBUTE_SOURCE_PRESENT ) {</code_line>
	            <code_line>    attrData.source = attributeData.source;</code_line>
	            <code_line>    attrData.present_attributes |= COLLADASaxFWL::skin__AttributeData::ATTRIBUTE_SOURCE_PRESENT;</code_line>
	            <code_line>}</code_line>
			</specific>
			<specific version="15" name="begin__skin">
				<parameter type="const COLLADASaxFWL15::skin__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::skin__AttributeData attrData;</code_line>
				<code_line>attrData.present_attributes = 0;</code_line>
	            <code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::skin__AttributeData::ATTRIBUTE_SOURCE_PRESENT) == COLLADASaxFWL15::skin__AttributeData::ATTRIBUTE_SOURCE_PRESENT ) {</code_line>
	            <code_line>    attrData.source = attributeData.source;</code_line>
	            <code_line>    attrData.present_attributes |= COLLADASaxFWL::skin__AttributeData::ATTRIBUTE_SOURCE_PRESENT;</code_line>
	            <code_line>}</code_line>
			</specific>
		</method>

		<method name="end__skin">
			<specific version="14" name="end__skin"></specific>
			<specific version="15" name="end__skin"></specific>
		</method>

		<method name="begin__morph">
			<parameter type="COLLADASaxFWL::morph__AttributeData" name="attrData" />
			<specific version="14" name="begin__morph">
				<parameter type="const COLLADASaxFWL14::morph__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::morph__AttributeData attrData;</code_line>
				<code_line>attrData.present_attributes = 0;</code_line>
	            <code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL14::morph__AttributeData::ATTRIBUTE_SOURCE_PRESENT) == COLLADASaxFWL14::morph__AttributeData::ATTRIBUTE_SOURCE_PRESENT ) {</code_line>
	            <code_line>    attrData.source = attributeData.source;</code_line>
	            <code_line>    attrData.present_attributes |= COLLADASaxFWL::morph__AttributeData::ATTRIBUTE_SOURCE_PRESENT;</code_line>
	            <code_line>}</code_line>
				<code_line>switch (attributeData.method) {</code_line>
				<code_line>case COLLADASaxFWL14::ENUM__MorphMethodType__NORMALIZED: attrData.method=COLLADASaxFWL::ENUM__MorphMethodType__NORMALIZED; break;</code_line>
				<code_line>case COLLADASaxFWL14::ENUM__MorphMethodType__RELATIVE: attrData.method=COLLADASaxFWL::ENUM__MorphMethodType__RELATIVE; break;</code_line>
				<code_line>case COLLADASaxFWL14::ENUM__MorphMethodType__COUNT: attrData.method=COLLADASaxFWL::ENUM__MorphMethodType__INVLAID; break;</code_line>
				<code_line>case COLLADASaxFWL14::ENUM__MorphMethodType__NOT_PRESENT: attrData.method=COLLADASaxFWL::ENUM__MorphMethodType__NOT_PRESENT; break;</code_line>
	            <code_line>}</code_line>
			</specific>
			<specific version="15" name="begin__morph">
				<parameter type="const COLLADASaxFWL15::morph__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::morph__AttributeData attrData;</code_line>
				<code_line>attrData.present_attributes = 0;</code_line>
	            <code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::morph__AttributeData::ATTRIBUTE_SOURCE_PRESENT) == COLLADASaxFWL15::morph__AttributeData::ATTRIBUTE_SOURCE_PRESENT ) {</code_line>
	            <code_line>    attrData.source = attributeData.source;</code_line>
	            <code_line>    attrData.present_attributes |= COLLADASaxFWL::morph__AttributeData::ATTRIBUTE_SOURCE_PRESENT;</code_line>
	            <code_line>}</code_line>
				<code_line>switch (attributeData.method) {</code_line>
				<code_line>case COLLADASaxFWL15::ENUM__morph_method_enum__NORMALIZED: attrData.method=COLLADASaxFWL::ENUM__MorphMethodType__NORMALIZED; break;</code_line>
				<code_line>case COLLADASaxFWL15::ENUM__morph_method_enum__RELATIVE: attrData.method=COLLADASaxFWL::ENUM__MorphMethodType__RELATIVE; break;</code_line>
				<code_line>case COLLADASaxFWL15::ENUM__morph_method_enum__COUNT: attrData.method=COLLADASaxFWL::ENUM__MorphMethodType__INVLAID; break;</code_line>
				<code_line>case COLLADASaxFWL15::ENUM__morph_method_enum__NOT_PRESENT: attrData.method=COLLADASaxFWL::ENUM__MorphMethodType__NOT_PRESENT; break;</code_line>
	            <code_line>}</code_line>
			</specific>
		</method>

		<method name="end__morph">
			<specific version="14" name="end__morph"></specific>
			<specific version="15" name="end__morph"></specific>
		</method>

		<method name="begin__source">
			<parameter type="COLLADASaxFWL::source__AttributeData" name="attrData" />
			<specific version="14" name="begin__source">
				<parameter type="const COLLADASaxFWL14::source__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::source__AttributeData attrData;</code_line>
				<code_line>attrData.id = attributeData.id;</code_line>
	            <code_line>attrData.name = attributeData.name;</code_line>
			</specific>
			<specific version="15" name="begin__source">
				<parameter type="const COLLADASaxFWL15::source__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::source__AttributeData attrData;</code_line>
				<code_line>attrData.id = attributeData.id;</code_line>
	            <code_line>attrData.name = attributeData.name;</code_line>
			</specific>
		</method>

		<method name="end__source">
			<specific version="14" name="end__source"></specific>
			<specific version="15" name="end__source"></specific>
		</method>

		<method name="begin__joints">
			<specific version="14" name="begin__joints"></specific>
			<specific version="15" name="begin__joints"></specific>
		</method>

		<method name="end__joints">
			<specific version="14" name="end__joints"></specific>
			<specific version="15" name="end__joints"></specific>
		</method>

		<method name="begin__input____InputLocal">
			<parameter type="COLLADASaxFWL::input____InputLocal__AttributeData" name="attrData" />
			<specific version="14" name="begin__input____InputLocal">
				<parameter type="const COLLADASaxFWL14::input____InputLocal__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::input____InputLocal__AttributeData attrData;</code_line>
				<code_line>attrData.semantic = attributeData.semantic;</code_line>
	            <code_line>attrData.source = attributeData.source;</code_line>
			</specific>
			<specific version="15" name="begin__input____input_local_type">
				<parameter type="const COLLADASaxFWL15::input____input_local_type__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::input____InputLocal__AttributeData attrData;</code_line>
				<code_line>attrData.semantic = attributeData.semantic;</code_line>
	            <code_line>attrData.source = attributeData.source;</code_line>
			</specific>
		</method>

		<method name="end__input____InputLocal">
			<specific version="14" name="end__input____InputLocal"></specific>
			<specific version="15" name="end__input____input_local_type"></specific>
		</method>

		<method name="begin__input____InputLocalOffset">
			<parameter type="COLLADASaxFWL::input____InputLocalOffset__AttributeData" name="attrData" />
			<specific version="14" name="begin__input____InputLocalOffset">
				<parameter type="const COLLADASaxFWL14::input____InputLocalOffset__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::input____InputLocalOffset__AttributeData attrData;</code_line>
				<code_line>attrData.present_attributes = 0;</code_line>
				<code_line>attrData.semantic = attributeData.semantic;</code_line>
	            <code_line>attrData.source = attributeData.source;</code_line>
	            <code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL14::input____InputLocalOffset__AttributeData::ATTRIBUTE_OFFSET_PRESENT) == COLLADASaxFWL14::input____InputLocalOffset__AttributeData::ATTRIBUTE_OFFSET_PRESENT ) {</code_line>
	            <code_line>    attrData.offset = attributeData.offset;</code_line>
	            <code_line>    attrData.present_attributes |= COLLADASaxFWL::input____InputLocalOffset__AttributeData::ATTRIBUTE_OFFSET_PRESENT;</code_line>
	            <code_line>}</code_line>
	            <code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL14::input____InputLocalOffset__AttributeData::ATTRIBUTE_SET_PRESENT) == COLLADASaxFWL14::input____InputLocalOffset__AttributeData::ATTRIBUTE_SET_PRESENT ) {</code_line>
	            <code_line>    attrData.set = attributeData.set;</code_line>
	            <code_line>    attrData.present_attributes |= COLLADASaxFWL::input____InputLocalOffset__AttributeData::ATTRIBUTE_SET_PRESENT;</code_line>
	            <code_line>}</code_line>
			</specific>
			<specific version="15" name="begin__input____input_local_offset_type">
				<parameter type="const COLLADASaxFWL15::input____input_local_offset_type__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::input____InputLocalOffset__AttributeData attrData;</code_line>
				<code_line>attrData.present_attributes = 0;</code_line>
				<code_line>attrData.semantic = attributeData.semantic;</code_line>
	            <code_line>attrData.source = attributeData.source;</code_line>
	            <code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::input____input_local_offset_type__AttributeData::ATTRIBUTE_OFFSET_PRESENT) == COLLADASaxFWL15::input____input_local_offset_type__AttributeData::ATTRIBUTE_OFFSET_PRESENT ) {</code_line>
	            <code_line>    attrData.offset = attributeData.offset;</code_line>
	            <code_line>    attrData.present_attributes |= COLLADASaxFWL::input____InputLocalOffset__AttributeData::ATTRIBUTE_OFFSET_PRESENT;</code_line>
	            <code_line>}</code_line>
	            <code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::input____input_local_offset_type__AttributeData::ATTRIBUTE_SET_PRESENT) == COLLADASaxFWL15::input____input_local_offset_type__AttributeData::ATTRIBUTE_SET_PRESENT ) {</code_line>
	            <code_line>    attrData.set = attributeData.set;</code_line>
	            <code_line>    attrData.present_attributes |= COLLADASaxFWL::input____InputLocalOffset__AttributeData::ATTRIBUTE_SET_PRESENT;</code_line>
	            <code_line>}</code_line>
			</specific>
		</method>

		<method name="end__input____InputLocalOffset">
			<specific version="14" name="end__input____InputLocalOffset"></specific>
			<specific version="15" name="end__input____input_local_offset_type"></specific>
		</method>

		<method name="begin__vertex_weights">
			<parameter type="COLLADASaxFWL::vertex_weights__AttributeData" name="attrData" />
			<specific version="14" name="begin__vertex_weights">
				<parameter type="const COLLADASaxFWL14::vertex_weights__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::vertex_weights__AttributeData attrData;</code_line>
				<code_line>attrData.present_attributes = 0;</code_line>
	            <code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL14::vertex_weights__AttributeData::ATTRIBUTE_COUNT_PRESENT) == COLLADASaxFWL14::vertex_weights__AttributeData::ATTRIBUTE_COUNT_PRESENT ) {</code_line>
	            <code_line>    attrData.count = attributeData.count;</code_line>
	            <code_line>    attrData.present_attributes |= COLLADASaxFWL::vertex_weights__AttributeData::ATTRIBUTE_COUNT_PRESENT;</code_line>
	            <code_line>}</code_line>
			</specific>
			<specific version="15" name="begin__vertex_weights">
				<parameter type="const COLLADASaxFWL15::vertex_weights__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::vertex_weights__AttributeData attrData;</code_line>
				<code_line>attrData.present_attributes = 0;</code_line>
	            <code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::vertex_weights__AttributeData::ATTRIBUTE_COUNT_PRESENT) == COLLADASaxFWL15::vertex_weights__AttributeData::ATTRIBUTE_COUNT_PRESENT ) {</code_line>
	            <code_line>    attrData.count = attributeData.count;</code_line>
	            <code_line>    attrData.present_attributes |= COLLADASaxFWL::vertex_weights__AttributeData::ATTRIBUTE_COUNT_PRESENT;</code_line>
	            <code_line>}</code_line>
			</specific>
		</method>

		<method name="end__vertex_weights">
			<specific version="14" name="end__vertex_weights"></specific>
			<specific version="15" name="end__vertex_weights"></specific>
		</method>

		<method name="begin__vcount">
			<specific version="14" name="begin__vcount"></specific>
			<specific version="15" name="begin__vcount"></specific>
		</method>

		<method name="end__vcount">
			<specific version="14" name="end__vcount"></specific>
			<specific version="15" name="end__vcount"></specific>
		</method>

		<method name="data__vcount">
			<parameter type="const uint64*" name="data" />
			<parameter type="size_t" name="length" />
			<specific version="14" name="data__vcount"></specific>
			<specific version="15" name="data__vcount"></specific>
		</method>

		<method name="begin__v">
			<specific version="14" name="begin__v"></specific>
			<specific version="15" name="begin__v"></specific>
		</method>

		<method name="end__v">
			<specific version="14" name="end__v"></specific>
			<specific version="15" name="end__v"></specific>
		</method>

		<method name="data__v">
			<parameter type="const sint64*" name="data" />
			<parameter type="size_t" name="length" />
			<specific version="14" name="data__v"></specific>
			<specific version="15" name="data__v"></specific>
		</method>

		<method name="begin__Name_array">
			<parameter type="COLLADASaxFWL::Name_array__AttributeData" name="attrData" />
			<specific version="14" name="begin__Name_array">
				<parameter type="const COLLADASaxFWL14::Name_array__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::Name_array__AttributeData attrData;</code_line>
				<code_line>attrData.present_attributes = 0;</code_line>
				<code_line>attrData.id = attributeData.id;</code_line>
	            <code_line>attrData.name = attributeData.name;</code_line>
	            <code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL14::Name_array__AttributeData::ATTRIBUTE_COUNT_PRESENT) == COLLADASaxFWL14::Name_array__AttributeData::ATTRIBUTE_COUNT_PRESENT ) {</code_line>
	            <code_line>    attrData.count = attributeData.count;</code_line>
	            <code_line>    attrData.present_attributes |= COLLADASaxFWL::Name_array__AttributeData::ATTRIBUTE_COUNT_PRESENT;</code_line>
	            <code_line>}</code_line>
			</specific>
			<specific version="15" name="begin__Name_array">
				<parameter type="const COLLADASaxFWL15::Name_array__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::Name_array__AttributeData attrData;</code_line>
				<code_line>attrData.present_attributes = 0;</code_line>
				<code_line>attrData.id = attributeData.id;</code_line>
	            <code_line>attrData.name = attributeData.name;</code_line>
	            <code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::Name_array__AttributeData::ATTRIBUTE_COUNT_PRESENT) == COLLADASaxFWL15::Name_array__AttributeData::ATTRIBUTE_COUNT_PRESENT ) {</code_line>
	            <code_line>    attrData.count = attributeData.count;</code_line>
	            <code_line>    attrData.present_attributes |= COLLADASaxFWL::Name_array__AttributeData::ATTRIBUTE_COUNT_PRESENT;</code_line>
	            <code_line>}</code_line>
			</specific>
		</method>

		<method name="end__Name_array">
			<specific version="14" name="end__Name_array"></specific>
			<specific version="15" name="end__Name_array"></specific>
		</method>

		<method name="data__Name_array">
			<parameter type="const ParserString*" name="data" />
			<parameter type="size_t" name="length" />
			<specific version="14" name="data__Name_array"></specific>
			<specific version="15" name="data__Name_array"></specific>
		</method>

		<method name="begin__IDREF_array">
			<parameter type="COLLADASaxFWL::IDREF_array__AttributeData" name="attrData" />
			<specific version="14" name="begin__IDREF_array">
				<parameter type="const COLLADASaxFWL14::IDREF_array__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::IDREF_array__AttributeData attrData;</code_line>
				<code_line>attrData.present_attributes = 0;</code_line>
				<code_line>attrData.id = attributeData.id;</code_line>
	            <code_line>attrData.name = attributeData.name;</code_line>
	            <code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL14::IDREF_array__AttributeData::ATTRIBUTE_COUNT_PRESENT) == COLLADASaxFWL14::IDREF_array__AttributeData::ATTRIBUTE_COUNT_PRESENT ) {</code_line>
	            <code_line>    attrData.count = attributeData.count;</code_line>
	            <code_line>    attrData.present_attributes |= COLLADASaxFWL::IDREF_array__AttributeData::ATTRIBUTE_COUNT_PRESENT;</code_line>
	            <code_line>}</code_line>
			</specific>
			<specific version="15" name="begin__IDREF_array">
				<parameter type="const COLLADASaxFWL15::IDREF_array__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::IDREF_array__AttributeData attrData;</code_line>
				<code_line>attrData.present_attributes = 0;</code_line>
				<code_line>attrData.id = attributeData.id;</code_line>
	            <code_line>attrData.name = attributeData.name;</code_line>
	            <code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::IDREF_array__AttributeData::ATTRIBUTE_COUNT_PRESENT) == COLLADASaxFWL15::IDREF_array__AttributeData::ATTRIBUTE_COUNT_PRESENT ) {</code_line>
	            <code_line>    attrData.count = attributeData.count;</code_line>
	            <code_line>    attrData.present_attributes |= COLLADASaxFWL::IDREF_array__AttributeData::ATTRIBUTE_COUNT_PRESENT;</code_line>
	            <code_line>}</code_line>
			</specific>
		</method>

		<method name="end__IDREF_array">
			<specific version="14" name="end__IDREF_array"></specific>
			<specific version="15" name="end__IDREF_array"></specific>
		</method>

		<method name="data__IDREF_array">
			<parameter type="const ParserString*" name="data" />
			<parameter type="size_t" name="length" />
			<specific version="14" name="data__IDREF_array"></specific>
			<specific version="15" name="data__IDREF_array"></specific>
		</method>

		<method name="begin__bind_shape_matrix">
			<specific version="14" name="begin__bind_shape_matrix"></specific>
			<specific version="15" name="begin__bind_shape_matrix"></specific>
		</method>

		<method name="end__bind_shape_matrix">
			<specific version="14" name="end__bind_shape_matrix"></specific>
			<specific version="15" name="end__bind_shape_matrix"></specific>
		</method>

		<method name="data__bind_shape_matrix">
			<parameter type="const float*" name="data" />
			<parameter type="size_t" name="length" />
			<specific version="14" name="data__bind_shape_matrix"></specific>
			<specific version="15" name="data__bind_shape_matrix"></specific>
		</method>

		<method name="begin__technique">
			<parameter type="COLLADASaxFWL::technique__AttributeData" name="attrData" />
			<specific version="14" name="begin__technique">
				<parameter type="const COLLADASaxFWL14::technique__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::technique__AttributeData attrData;</code_line>
				<code_line>attrData.profile = attributeData.profile;</code_line>
			</specific>
			<specific version="15" name="begin__technique____technique_type">
				<parameter type="const COLLADASaxFWL15::technique____technique_type__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::technique__AttributeData attrData;</code_line>
				<code_line>attrData.profile = attributeData.profile;</code_line>
			</specific>
		</method>

		<method name="end__technique">
			<specific version="14" name="end__technique"></specific>
			<specific version="15" name="end__technique____technique_type"></specific>
		</method>

	</class>

	<class name="GeometryLoader" include="COLLADASaxFWLGeometryLoader.h">
		<member type="GeometryLoader*" name="mLoader" />
		<ctor>
			<parameter type="GeometryLoader*" name="loader" />
			<initlist name="mLoader" value="loader" />
		</ctor>

		<method name="begin__mesh">
			<specific version="14" name="begin__mesh"></specific>
			<specific version="15" name="begin__mesh"></specific>
		</method>

		<method name="end__geometry">
			<specific version="14" name="end__geometry"></specific>
			<specific version="15" name="end__geometry"></specific>
		</method>

		<method name="begin__technique">
			<parameter type="COLLADASaxFWL::technique__AttributeData" name="attrData" />
			<specific version="14" name="begin__technique">
				<parameter type="const COLLADASaxFWL14::technique__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::technique__AttributeData attrData;</code_line>
				<code_line>attrData.profile = attributeData.profile;</code_line>
			</specific>
			<specific version="15" name="begin__technique____technique_type">
				<parameter type="const COLLADASaxFWL15::technique____technique_type__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::technique__AttributeData attrData;</code_line>
				<code_line>attrData.profile = attributeData.profile;</code_line>
			</specific>
		</method>

		<method name="end__technique">
			<specific version="14" name="end__technique"></specific>
			<specific version="15" name="end__technique____technique_type"></specific>
		</method>

	</class>

	<class name="LibraryCamerasLoader" include="COLLADASaxFWLLibraryCamerasLoader.h">
		<member type="LibraryCamerasLoader*" name="mLoader" />
		<ctor>
			<parameter type="LibraryCamerasLoader*" name="loader" />
			<initlist name="mLoader" value="loader" />
		</ctor>

		<method name="end__library_cameras">
			<specific version="14" name="end__library_cameras"></specific>
			<specific version="15" name="end__library_cameras"></specific>
		</method>

		<method name="begin__camera">
			<parameter type="COLLADASaxFWL::camera__AttributeData" name="attrData" />
			<specific version="14" name="begin__camera">
				<parameter type="const COLLADASaxFWL14::camera__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::camera__AttributeData attrData;</code_line>
				<code_line>attrData.id = attributeData.id;</code_line>
	            <code_line>attrData.name = attributeData.name;</code_line>
			</specific>
			<specific version="15" name="begin__camera">
				<parameter type="const COLLADASaxFWL15::camera__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::camera__AttributeData attrData;</code_line>
				<code_line>attrData.id = attributeData.id;</code_line>
	            <code_line>attrData.name = attributeData.name;</code_line>
			</specific>
		</method>

		<method name="end__camera">
			<specific version="14" name="end__camera"></specific>
			<specific version="15" name="end__camera"></specific>
		</method>

		<method name="begin__optics">
			<specific version="14" name="begin__optics"></specific>
			<specific version="15" name="begin__optics"></specific>
		</method>

		<method name="end__optics">
			<specific version="14" name="end__optics"></specific>
			<specific version="15" name="end__optics"></specific>
		</method>

		<method name="begin__optics__technique_common">
			<specific version="14" name="begin__optics__technique_common"></specific>
			<specific version="15" name="begin__optics__technique_common"></specific>
		</method>

		<method name="end__optics__technique_common">
			<specific version="14" name="end__optics__technique_common"></specific>
			<specific version="15" name="end__optics__technique_common"></specific>
		</method>

		<method name="begin__perspective">
			<specific version="14" name="begin__perspective"></specific>
			<specific version="15" name="begin__perspective"></specific>
		</method>

		<method name="end__perspective">
			<specific version="14" name="end__perspective"></specific>
			<specific version="15" name="end__perspective"></specific>
		</method>

		<method name="begin__orthographic">
			<specific version="14" name="begin__orthographic"></specific>
			<specific version="15" name="begin__orthographic"></specific>
		</method>

		<method name="end__orthographic">
			<specific version="14" name="end__orthographic"></specific>
			<specific version="15" name="end__orthographic"></specific>
		</method>

		<method name="begin__xfov">
			<parameter type="COLLADASaxFWL::xfov__AttributeData" name="attrData" />
			<specific version="14" name="begin__xfov">
				<parameter type="const COLLADASaxFWL14::xfov__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::xfov__AttributeData attrData;</code_line>
				<code_line>attrData.sid = attributeData.sid;</code_line>
			</specific>
			<specific version="15" name="begin__xfov">
				<parameter type="const COLLADASaxFWL15::xfov__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::xfov__AttributeData attrData;</code_line>
				<code_line>attrData.sid = attributeData.sid;</code_line>
			</specific>
		</method>

		<method name="end__xfov">
			<specific version="14" name="end__xfov"></specific>
			<specific version="15" name="end__xfov"></specific>
		</method>

		<method name="data__xfov">
			<parameter type="float" name="value" />
			<specific version="14" name="data__xfov"></specific>
			<specific version="15" name="data__xfov"></specific>
		</method>

		<method name="begin__yfov">
			<parameter type="COLLADASaxFWL::yfov__AttributeData" name="attrData" />
			<specific version="14" name="begin__yfov">
				<parameter type="const COLLADASaxFWL14::yfov__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::yfov__AttributeData attrData;</code_line>
				<code_line>attrData.sid = attributeData.sid;</code_line>
			</specific>
			<specific version="15" name="begin__yfov">
				<parameter type="const COLLADASaxFWL15::yfov__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::yfov__AttributeData attrData;</code_line>
				<code_line>attrData.sid = attributeData.sid;</code_line>
			</specific>
		</method>

		<method name="end__yfov">
			<specific version="14" name="end__yfov"></specific>
			<specific version="15" name="end__yfov"></specific>
		</method>

		<method name="data__yfov">
			<parameter type="float" name="value" />
			<specific version="14" name="data__yfov"></specific>
			<specific version="15" name="data__yfov"></specific>
		</method>

		<method name="begin__xmag">
			<parameter type="COLLADASaxFWL::xmag__AttributeData" name="attrData" />
			<specific version="14" name="begin__xmag">
				<parameter type="const COLLADASaxFWL14::xmag__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::xmag__AttributeData attrData;</code_line>
				<code_line>attrData.sid = attributeData.sid;</code_line>
			</specific>
			<specific version="15" name="begin__xmag">
				<parameter type="const COLLADASaxFWL15::xmag__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::xmag__AttributeData attrData;</code_line>
				<code_line>attrData.sid = attributeData.sid;</code_line>
			</specific>
		</method>

		<method name="end__xmag">
			<specific version="14" name="end__xmag"></specific>
			<specific version="15" name="end__xmag"></specific>
		</method>

		<method name="data__xmag">
			<parameter type="float" name="value" />
			<specific version="14" name="data__xmag"></specific>
			<specific version="15" name="data__xmag"></specific>
		</method>

		<method name="begin__ymag">
			<parameter type="COLLADASaxFWL::ymag__AttributeData" name="attrData" />
			<specific version="14" name="begin__ymag">
				<parameter type="const COLLADASaxFWL14::ymag__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::ymag__AttributeData attrData;</code_line>
				<code_line>attrData.sid = attributeData.sid;</code_line>
			</specific>
			<specific version="15" name="begin__ymag">
				<parameter type="const COLLADASaxFWL15::ymag__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::ymag__AttributeData attrData;</code_line>
				<code_line>attrData.sid = attributeData.sid;</code_line>
			</specific>
		</method>

		<method name="end__ymag">
			<specific version="14" name="end__ymag"></specific>
			<specific version="15" name="end__ymag"></specific>
		</method>

		<method name="data__ymag">
			<parameter type="float" name="value" />
			<specific version="14" name="data__ymag"></specific>
			<specific version="15" name="data__ymag"></specific>
		</method>

		<method name="begin__aspect_ratio">
			<parameter type="COLLADASaxFWL::aspect_ratio__AttributeData" name="attrData" />
			<specific version="14" name="begin__aspect_ratio">
				<parameter type="const COLLADASaxFWL14::aspect_ratio__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::aspect_ratio__AttributeData attrData;</code_line>
				<code_line>attrData.sid = attributeData.sid;</code_line>
			</specific>
			<specific version="15" name="begin__aspect_ratio">
				<parameter type="const COLLADASaxFWL15::aspect_ratio__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::aspect_ratio__AttributeData attrData;</code_line>
				<code_line>attrData.sid = attributeData.sid;</code_line>
			</specific>
		</method>

		<method name="end__aspect_ratio">
			<specific version="14" name="end__aspect_ratio"></specific>
			<specific version="15" name="end__aspect_ratio"></specific>
		</method>

		<method name="data__aspect_ratio">
			<parameter type="float" name="value" />
			<specific version="14" name="data__aspect_ratio"></specific>
			<specific version="15" name="data__aspect_ratio"></specific>
		</method>

		<method name="begin__znear">
			<parameter type="COLLADASaxFWL::znear__AttributeData" name="attrData" />
			<specific version="14" name="begin__znear">
				<parameter type="const COLLADASaxFWL14::znear__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::znear__AttributeData attrData;</code_line>
				<code_line>attrData.sid = attributeData.sid;</code_line>
			</specific>
			<specific version="15" name="begin__znear">
				<parameter type="const COLLADASaxFWL15::znear__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::znear__AttributeData attrData;</code_line>
				<code_line>attrData.sid = attributeData.sid;</code_line>
			</specific>
		</method>

		<method name="end__znear">
			<specific version="14" name="end__znear"></specific>
			<specific version="15" name="end__znear"></specific>
		</method>

		<method name="data__znear">
			<parameter type="float" name="value" />
			<specific version="14" name="data__znear"></specific>
			<specific version="15" name="data__znear"></specific>
		</method>

		<method name="begin__zfar">
			<parameter type="COLLADASaxFWL::zfar__AttributeData" name="attrData" />
			<specific version="14" name="begin__zfar">
				<parameter type="const COLLADASaxFWL14::zfar__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::zfar__AttributeData attrData;</code_line>
				<code_line>attrData.sid = attributeData.sid;</code_line>
			</specific>
			<specific version="15" name="begin__zfar">
				<parameter type="const COLLADASaxFWL15::zfar__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::zfar__AttributeData attrData;</code_line>
				<code_line>attrData.sid = attributeData.sid;</code_line>
			</specific>
		</method>

		<method name="end__zfar">
			<specific version="14" name="end__zfar"></specific>
			<specific version="15" name="end__zfar"></specific>
		</method>

		<method name="data__zfar">
			<parameter type="float" name="value" />
			<specific version="14" name="data__zfar"></specific>
			<specific version="15" name="data__zfar"></specific>
		</method>

		<method name="begin__imager">
			<specific version="14" name="begin__imager"></specific>
			<specific version="15" name="begin__imager"></specific>
		</method>

		<method name="end__imager">
			<specific version="14" name="end__imager"></specific>
			<specific version="15" name="end__imager"></specific>
		</method>

		<method name="begin__technique">
			<parameter type="COLLADASaxFWL::technique__AttributeData" name="attrData" />
			<specific version="14" name="begin__technique">
				<parameter type="const COLLADASaxFWL14::technique__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::technique__AttributeData attrData;</code_line>
				<code_line>attrData.profile = attributeData.profile;</code_line>
			</specific>
			<specific version="15" name="begin__technique____technique_type">
				<parameter type="const COLLADASaxFWL15::technique____technique_type__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::technique__AttributeData attrData;</code_line>
				<code_line>attrData.profile = attributeData.profile;</code_line>
			</specific>
		</method>

		<method name="end__technique">
			<specific version="14" name="end__technique"></specific>
			<specific version="15" name="end__technique____technique_type"></specific>
		</method>

	</class>

	<class name="LibraryLightsLoader" include="COLLADASaxFWLLibraryLightsLoader.h">
		<member type="LibraryLightsLoader*" name="mLoader" />
		<ctor>
			<parameter type="LibraryLightsLoader*" name="loader" />
			<initlist name="mLoader" value="loader" />
		</ctor>

		<method name="end__library_lights">
			<specific version="14" name="end__library_lights"></specific>
			<specific version="15" name="end__library_lights"></specific>
		</method>

		<method name="begin__light">
			<parameter type="COLLADASaxFWL::light__AttributeData" name="attrData" />
			<specific version="14" name="begin__light">
				<parameter type="const COLLADASaxFWL14::light__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::light__AttributeData attrData;</code_line>
				<code_line>attrData.id = attributeData.id;</code_line>
	            <code_line>attrData.name = attributeData.name;</code_line>
			</specific>
			<specific version="15" name="begin__light">
				<parameter type="const COLLADASaxFWL15::light__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::light__AttributeData attrData;</code_line>
				<code_line>attrData.id = attributeData.id;</code_line>
	            <code_line>attrData.name = attributeData.name;</code_line>
			</specific>
		</method>

		<method name="end__light">
			<specific version="14" name="end__light"></specific>
			<specific version="15" name="end__light"></specific>
		</method>

		<method name="begin__light__technique_common">
			<specific version="14" name="begin__light__technique_common"></specific>
			<specific version="15" name="begin__light_type____technique_common"></specific>
		</method>

		<method name="end__light__technique_common">
			<specific version="14" name="end__light__technique_common"></specific>
			<specific version="15" name="end__light_type____technique_common"></specific>
		</method>

		<method name="begin__light__technique_common__ambient">
			<specific version="14" name="begin__light__technique_common__ambient"></specific>
			<specific version="15" name="begin__light__technique_common__ambient"></specific>
		</method>

		<method name="end__light__technique_common__ambient">
			<specific version="14" name="end__light__technique_common__ambient"></specific>
			<specific version="15" name="end__light__technique_common__ambient"></specific>
		</method>

		<method name="begin__color____TargetableFloat3">
			<parameter type="COLLADASaxFWL::color____TargetableFloat3__AttributeData" name="attrData" />
			<specific version="14" name="begin__color____TargetableFloat3">
				<parameter type="const COLLADASaxFWL14::color____TargetableFloat3__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::color____TargetableFloat3__AttributeData attrData;</code_line>
				<code_line>attrData.sid = attributeData.sid;</code_line>
			</specific>
			<specific version="15" name="begin__color____targetable_float3_type">
				<parameter type="const COLLADASaxFWL15::color____targetable_float3_type__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::color____TargetableFloat3__AttributeData attrData;</code_line>
				<code_line>attrData.sid = attributeData.sid;</code_line>
			</specific>
		</method>

		<method name="end__color____TargetableFloat3">
			<specific version="14" name="end__color____TargetableFloat3"></specific>
			<specific version="15" name="end__color____targetable_float3_type"></specific>
		</method>

		<method name="data__color____TargetableFloat3">
			<parameter type="const float*" name="data" />
			<parameter type="size_t" name="length" />
			<specific version="14" name="data__color____TargetableFloat3"></specific>
			<specific version="15" name="data__color____targetable_float3_type"></specific>
		</method>

		<method name="begin__directional">
			<specific version="14" name="begin__directional"></specific>
			<specific version="15" name="begin__directional"></specific>
		</method>

		<method name="end__directional">
			<specific version="14" name="end__directional"></specific>
			<specific version="15" name="end__directional"></specific>
		</method>

		<method name="begin__point">
			<specific version="14" name="begin__point"></specific>
			<specific version="15" name="begin__point"></specific>
		</method>

		<method name="end__point">
			<specific version="14" name="end__point"></specific>
			<specific version="15" name="end__point"></specific>
		</method>

		<method name="begin__constant_attenuation">
			<parameter type="COLLADASaxFWL::constant_attenuation__AttributeData" name="attrData" />
			<specific version="14" name="begin__constant_attenuation">
				<parameter type="const COLLADASaxFWL14::constant_attenuation__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::constant_attenuation__AttributeData attrData;</code_line>
				<code_line>attrData.sid = attributeData.sid;</code_line>
			</specific>
			<specific version="15" name="begin__constant_attenuation">
				<parameter type="const COLLADASaxFWL15::constant_attenuation__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::constant_attenuation__AttributeData attrData;</code_line>
				<code_line>attrData.sid = attributeData.sid;</code_line>
			</specific>
		</method>

		<method name="end__constant_attenuation">
			<specific version="14" name="end__constant_attenuation"></specific>
			<specific version="15" name="end__constant_attenuation"></specific>
		</method>

		<method name="data__constant_attenuation">
			<parameter type="float" name="value" />
			<specific version="14" name="data__constant_attenuation"></specific>
			<specific version="15" name="data__constant_attenuation"></specific>
		</method>

		<method name="begin__linear_attenuation">
			<parameter type="COLLADASaxFWL::linear_attenuation__AttributeData" name="attrData" />
			<specific version="14" name="begin__linear_attenuation">
				<parameter type="const COLLADASaxFWL14::linear_attenuation__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::linear_attenuation__AttributeData attrData;</code_line>
				<code_line>attrData.sid = attributeData.sid;</code_line>
			</specific>
			<specific version="15" name="begin__linear_attenuation">
				<parameter type="const COLLADASaxFWL15::linear_attenuation__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::linear_attenuation__AttributeData attrData;</code_line>
				<code_line>attrData.sid = attributeData.sid;</code_line>
			</specific>
		</method>

		<method name="end__linear_attenuation">
			<specific version="14" name="end__linear_attenuation"></specific>
			<specific version="15" name="end__linear_attenuation"></specific>
		</method>

		<method name="data__linear_attenuation">
			<parameter type="float" name="value" />
			<specific version="14" name="data__linear_attenuation"></specific>
			<specific version="15" name="data__linear_attenuation"></specific>
		</method>

		<method name="begin__quadratic_attenuation">
			<parameter type="COLLADASaxFWL::quadratic_attenuation__AttributeData" name="attrData" />
			<specific version="14" name="begin__quadratic_attenuation">
				<parameter type="const COLLADASaxFWL14::quadratic_attenuation__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::quadratic_attenuation__AttributeData attrData;</code_line>
				<code_line>attrData.sid = attributeData.sid;</code_line>
			</specific>
			<specific version="15" name="begin__quadratic_attenuation">
				<parameter type="const COLLADASaxFWL15::quadratic_attenuation__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::quadratic_attenuation__AttributeData attrData;</code_line>
				<code_line>attrData.sid = attributeData.sid;</code_line>
			</specific>
		</method>

		<method name="end__quadratic_attenuation">
			<specific version="14" name="end__quadratic_attenuation"></specific>
			<specific version="15" name="end__quadratic_attenuation"></specific>
		</method>

		<method name="data__quadratic_attenuation">
			<parameter type="float" name="value" />
			<specific version="14" name="data__quadratic_attenuation"></specific>
			<specific version="15" name="data__quadratic_attenuation"></specific>
		</method>

		<method name="begin__falloff_angle">
			<parameter type="COLLADASaxFWL::falloff_angle__AttributeData" name="attrData" />
			<specific version="14" name="begin__falloff_angle">
				<parameter type="const COLLADASaxFWL14::falloff_angle__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::falloff_angle__AttributeData attrData;</code_line>
				<code_line>attrData.sid = attributeData.sid;</code_line>
			</specific>
			<specific version="15" name="begin__falloff_angle">
				<parameter type="const COLLADASaxFWL15::falloff_angle__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::falloff_angle__AttributeData attrData;</code_line>
				<code_line>attrData.sid = attributeData.sid;</code_line>
			</specific>
		</method>

		<method name="end__falloff_angle">
			<specific version="14" name="end__falloff_angle"></specific>
			<specific version="15" name="end__falloff_angle"></specific>
		</method>

		<method name="data__falloff_angle">
			<parameter type="float" name="value" />
			<specific version="14" name="data__falloff_angle"></specific>
			<specific version="15" name="data__falloff_angle"></specific>
		</method>

		<method name="begin__falloff_exponent">
			<parameter type="COLLADASaxFWL::falloff_exponent__AttributeData" name="attrData" />
			<specific version="14" name="begin__falloff_exponent">
				<parameter type="const COLLADASaxFWL14::falloff_exponent__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::falloff_exponent__AttributeData attrData;</code_line>
				<code_line>attrData.sid = attributeData.sid;</code_line>
			</specific>
			<specific version="15" name="begin__falloff_exponent">
				<parameter type="const COLLADASaxFWL15::falloff_exponent__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::falloff_exponent__AttributeData attrData;</code_line>
				<code_line>attrData.sid = attributeData.sid;</code_line>
			</specific>
		</method>

		<method name="end__falloff_exponent">
			<specific version="14" name="end__falloff_exponent"></specific>
			<specific version="15" name="end__falloff_exponent"></specific>
		</method>

		<method name="data__falloff_exponent">
			<parameter type="float" name="value" />
			<specific version="14" name="data__falloff_exponent"></specific>
			<specific version="15" name="data__falloff_exponent"></specific>
		</method>

		<method name="begin__spot">
			<specific version="14" name="begin__spot"></specific>
			<specific version="15" name="begin__spot"></specific>
		</method>

		<method name="end__spot">
			<specific version="14" name="end__spot"></specific>
			<specific version="15" name="end__spot"></specific>
		</method>

		<method name="begin__technique">
			<parameter type="COLLADASaxFWL::technique__AttributeData" name="attrData" />
			<specific version="14" name="begin__technique">
				<parameter type="const COLLADASaxFWL14::technique__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::technique__AttributeData attrData;</code_line>
				<code_line>attrData.profile = attributeData.profile;</code_line>
			</specific>
			<specific version="15" name="begin__technique____technique_type">
				<parameter type="const COLLADASaxFWL15::technique____technique_type__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::technique__AttributeData attrData;</code_line>
				<code_line>attrData.profile = attributeData.profile;</code_line>
			</specific>
		</method>

		<method name="end__technique">
			<specific version="14" name="end__technique"></specific>
			<specific version="15" name="end__technique____technique_type"></specific>
		</method>

	</class>

	<class name="LibraryMaterialsLoader" include="COLLADASaxFWLLibraryMaterialsLoader.h">
		<member type="LibraryMaterialsLoader*" name="mLoader" />
		<ctor>
			<parameter type="LibraryMaterialsLoader*" name="loader" />
			<initlist name="mLoader" value="loader" />
		</ctor>

		<method name="end__library_materials">
			<specific version="14" name="end__library_materials"></specific>
			<specific version="15" name="end__library_materials"></specific>
		</method>

		<method name="begin__material">
			<parameter type="COLLADASaxFWL::material__AttributeData" name="attrData" />
			<specific version="14" name="begin__material">
				<parameter type="const COLLADASaxFWL14::material__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::material__AttributeData attrData;</code_line>
				<code_line>attrData.id = attributeData.id;</code_line>
				<code_line>attrData.name = attributeData.name;</code_line>
			</specific>
			<specific version="15" name="begin__material">
				<parameter type="const COLLADASaxFWL15::material__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::material__AttributeData attrData;</code_line>
				<code_line>attrData.id = attributeData.id;</code_line>
				<code_line>attrData.name = attributeData.name;</code_line>
			</specific>
		</method>

		<method name="end__material">
			<specific version="14" name="end__material"></specific>
			<specific version="15" name="end__material"></specific>
		</method>

		<method name="begin__instance_effect">
			<parameter type="COLLADASaxFWL::instance_effect__AttributeData" name="attrData" />
			<specific version="14" name="begin__instance_effect">
				<parameter type="const COLLADASaxFWL14::instance_effect__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::instance_effect__AttributeData attrData;</code_line>
				<code_line>attrData.sid = attributeData.sid;</code_line>
				<code_line>attrData.name = attributeData.name;</code_line>
	            <code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL14::instance_effect__AttributeData::ATTRIBUTE_URL_PRESENT) == COLLADASaxFWL14::instance_effect__AttributeData::ATTRIBUTE_URL_PRESENT ) {</code_line>
	            <code_line>    attrData.url = attributeData.url;</code_line>
	            <code_line>    attrData.present_attributes |= COLLADASaxFWL::instance_effect__AttributeData::ATTRIBUTE_URL_PRESENT;</code_line>
	            <code_line>}</code_line>
			</specific>
			<specific version="15" name="begin__instance_effect">
				<parameter type="const COLLADASaxFWL15::instance_effect__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::instance_effect__AttributeData attrData;</code_line>
				<code_line>attrData.sid = attributeData.sid;</code_line>
				<code_line>attrData.name = attributeData.name;</code_line>
	            <code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::instance_effect__AttributeData::ATTRIBUTE_URL_PRESENT) == COLLADASaxFWL15::instance_effect__AttributeData::ATTRIBUTE_URL_PRESENT ) {</code_line>
	            <code_line>    attrData.url = attributeData.url;</code_line>
	            <code_line>    attrData.present_attributes |= COLLADASaxFWL::instance_effect__AttributeData::ATTRIBUTE_URL_PRESENT;</code_line>
	            <code_line>}</code_line>
			</specific>
		</method>

		<method name="end__instance_effect">
			<specific version="14" name="end__instance_effect"></specific>
			<specific version="15" name="end__instance_effect"></specific>
		</method>

		<method name="begin__technique">
			<parameter type="COLLADASaxFWL::technique__AttributeData" name="attrData" />
			<specific version="14" name="begin__technique">
				<parameter type="const COLLADASaxFWL14::technique__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::technique__AttributeData attrData;</code_line>
				<code_line>attrData.profile = attributeData.profile;</code_line>
			</specific>
			<specific version="15" name="begin__technique____technique_type">
				<parameter type="const COLLADASaxFWL15::technique____technique_type__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::technique__AttributeData attrData;</code_line>
				<code_line>attrData.profile = attributeData.profile;</code_line>
			</specific>
		</method>

		<method name="end__technique">
			<specific version="14" name="end__technique"></specific>
			<specific version="15" name="end__technique____technique_type"></specific>
		</method>

	</class>

	<class name="LibraryImagesLoader" include="COLLADASaxFWLLibraryImagesLoader.h">
		<member type="LibraryImagesLoader*" name="mLoader" />
		<ctor>
			<parameter type="LibraryImagesLoader*" name="loader" />
			<initlist name="mLoader" value="loader" />
		</ctor>

		<method name="end__library_images">
			<specific version="14" name="end__library_images"></specific>
			<specific version="15" name="end__library_images"></specific>
		</method>

		<method name="begin__image">
			<parameter type="COLLADASaxFWL::image__AttributeData" name="attrData" />
			<specific version="14" name="begin__image">
				<parameter type="const COLLADASaxFWL14::image__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::image__AttributeData attrData;</code_line>
				<code_line>attrData.present_attributes = 0;</code_line>
				<code_line>attrData.id = attributeData.id;</code_line>
				<code_line>attrData.name = attributeData.name;</code_line>
				<code_line>attrData.sid = 0;</code_line>
				<code_line>attrData.format = attributeData.format;</code_line>
				<code_line>attrData.depth = attributeData.depth;</code_line>
	            <code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL14::image__AttributeData::ATTRIBUTE_HEIGHT_PRESENT) == COLLADASaxFWL14::image__AttributeData::ATTRIBUTE_HEIGHT_PRESENT ) {</code_line>
	            <code_line>    attrData.height = attributeData.height;</code_line>
	            <code_line>    attrData.present_attributes |= COLLADASaxFWL::image__AttributeData::ATTRIBUTE_HEIGHT_PRESENT;</code_line>
	            <code_line>}</code_line>
	            <code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL14::image__AttributeData::ATTRIBUTE_WIDTH_PRESENT) == COLLADASaxFWL14::image__AttributeData::ATTRIBUTE_WIDTH_PRESENT ) {</code_line>
	            <code_line>    attrData.width = attributeData.width;</code_line>
	            <code_line>    attrData.present_attributes |= COLLADASaxFWL::image__AttributeData::ATTRIBUTE_WIDTH_PRESENT;</code_line>
	            <code_line>}</code_line>
			</specific>
			<specific version="15" name="begin__image____image_type">
				<parameter type="const COLLADASaxFWL15::image____image_type__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::image__AttributeData attrData;</code_line>
				<code_line>attrData.present_attributes = 0;</code_line>
				<code_line>attrData.id = attributeData.id;</code_line>
				<code_line>attrData.name = attributeData.name;</code_line>
				<code_line>attrData.sid = attributeData.sid;</code_line>
				<code_line>attrData.format = 0;</code_line>
				<code_line>attrData.depth = 0;</code_line>
				<code_line>attrData.width = 0;</code_line>
				<code_line>attrData.height = 0;</code_line>
			</specific>
		</method>

		<method name="end__image">
			<specific version="14" name="end__image"></specific>
			<specific version="15" name="end__image____image_type"></specific>
		</method>

		<method name="begin__init_from____anyURI">
			<specific version="14" name="begin__init_from____anyURI"></specific>
			<specific version="15" name="begin__ref____anyURI"></specific>
		</method>

		<method name="end__init_from____anyURI">
			<specific version="14" name="end__init_from____anyURI"></specific>
			<specific version="15" name="end__ref____anyURI"></specific>
		</method>

		<method name="data__init_from____anyURI">
			<parameter type="COLLADABU::URI" name="value" />
			<specific version="14" name="data__init_from____anyURI"></specific>
			<specific version="15" name="data__ref____anyURI"></specific>
		</method>

		<method name="begin__data">
			<specific version="14" name="begin__data"></specific>
			<specific version="15" name="begin__binary__hex">
				<parameter type="const COLLADASaxFWL15::binary__hex__AttributeData&amp;" name="attributeData" />
			</specific>
		</method>

		<method name="end__data">
			<specific version="14" name="end__data"></specific>
			<specific version="15" name="end__binary__hex"></specific>
		</method>

		<method name="data__data">
			<parameter type="const uint8*" name="data" />
			<parameter type="size_t" name="length" />
			<specific version="14" name="data__data"></specific>
			<specific version="15" name="data__binary__hex"></specific>
		</method>

		<method name="begin__technique">
			<parameter type="COLLADASaxFWL::technique__AttributeData" name="attrData" />
			<specific version="14" name="begin__technique">
				<parameter type="const COLLADASaxFWL14::technique__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::technique__AttributeData attrData;</code_line>
				<code_line>attrData.profile = attributeData.profile;</code_line>
			</specific>
			<specific version="15" name="begin__technique____technique_type">
				<parameter type="const COLLADASaxFWL15::technique____technique_type__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::technique__AttributeData attrData;</code_line>
				<code_line>attrData.profile = attributeData.profile;</code_line>
			</specific>
		</method>

		<method name="end__technique">
			<specific version="14" name="end__technique"></specific>
			<specific version="15" name="end__technique____technique_type"></specific>
		</method>

	</class>

	<class name="LibraryEffectsLoader" include="COLLADASaxFWLLibraryEffectsLoader.h">
		<member type="LibraryEffectsLoader*" name="mLoader" />
		<ctor>
			<parameter type="LibraryEffectsLoader*" name="loader" />
			<initlist name="mLoader" value="loader" />
		</ctor>

		<method name="end__library_effects">
			<specific version="14" name="end__library_effects"></specific>
			<specific version="15" name="end__library_effects"></specific>
		</method>

		<method name="begin__effect">
			<parameter type="COLLADASaxFWL::effect__AttributeData" name="attrData" />
			<specific version="14" name="begin__effect">
				<parameter type="const COLLADASaxFWL14::effect__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::effect__AttributeData attrData;</code_line>
				<code_line>attrData.id = attributeData.id;</code_line>
				<code_line>attrData.name = attributeData.name;</code_line>
			</specific>
			<specific version="15" name="begin__effect">
				<parameter type="const COLLADASaxFWL15::effect__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::effect__AttributeData attrData;</code_line>
				<code_line>attrData.id = attributeData.id;</code_line>
				<code_line>attrData.name = attributeData.name;</code_line>
			</specific>
		</method>

		<method name="end__effect">
			<specific version="14" name="end__effect"></specific>
			<specific version="15" name="end__effect"></specific>
		</method>

		<method name="begin__profile_COMMON">
			<parameter type="COLLADASaxFWL::profile_COMMON__AttributeData" name="attrData" />
			<specific version="14" name="begin__profile_COMMON">
				<parameter type="const COLLADASaxFWL14::profile_COMMON__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::profile_COMMON__AttributeData attrData;</code_line>
				<code_line>attrData.id = attributeData.id;</code_line>
			</specific>
			<specific version="15" name="begin__profile_COMMON">
				<parameter type="const COLLADASaxFWL15::profile_COMMON__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::profile_COMMON__AttributeData attrData;</code_line>
				<code_line>attrData.id = attributeData.id;</code_line>
			</specific>
		</method>

		<method name="end__profile_COMMON">
			<specific version="14" name="end__profile_COMMON"></specific>
			<specific version="15" name="end__profile_COMMON"></specific>
		</method>

		<method name="begin__newparam____fx_newparam_common">
			<parameter type="COLLADASaxFWL::newparam____fx_newparam_common__AttributeData" name="attrData" />
			<specific version="14" name="begin__newparam____fx_newparam_common">
				<parameter type="const COLLADASaxFWL14::newparam____fx_newparam_common__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::newparam____fx_newparam_common__AttributeData attrData;</code_line>
				<code_line>attrData.sid = attributeData.sid;</code_line>
			</specific>
			<specific version="15" name="begin__newparam____fx_newparam_type">
				<parameter type="const COLLADASaxFWL15::newparam____fx_newparam_type__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::newparam____fx_newparam_common__AttributeData attrData;</code_line>
				<code_line>attrData.sid = attributeData.sid;</code_line>
			</specific>
		</method>

		<method name="begin__newparam____common_newparam_type">
			<parameter type="COLLADASaxFWL::newparam____common_newparam_type__AttributeData" name="attrData" />
			<specific version="14" name="begin__newparam____common_newparam_type">
				<parameter type="const COLLADASaxFWL14::newparam____common_newparam_type__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::newparam____common_newparam_type__AttributeData attrData;</code_line>
				<code_line>attrData.sid = attributeData.sid;</code_line>
			</specific>
			<specific version="15" name="begin__newparam____fx_common_newparam_type">
				<parameter type="const COLLADASaxFWL15::newparam____fx_common_newparam_type__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::newparam____common_newparam_type__AttributeData attrData;</code_line>
				<code_line>attrData.sid = attributeData.sid;</code_line>
			</specific>
		</method>

		<method name="end__newparam____common_newparam_type">
			<specific version="14" name="end__newparam____common_newparam_type"></specific>
			<specific version="15" name="end__newparam____fx_common_newparam_type"></specific>
		</method>

		<method name="begin__surface____fx_surface_common">
			<parameter type="COLLADASaxFWL::surface____fx_surface_common__AttributeData" name="attrData" />
			<specific version="14" name="begin__surface____fx_surface_common">
				<parameter type="const COLLADASaxFWL14::surface____fx_surface_common__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::surface____fx_surface_common__AttributeData attrData;</code_line>
				<code_line>switch (attributeData.type) {</code_line>
				<code_line>case COLLADASaxFWL14::ENUM__fx_surface_type_enum__UNTYPED: attrData.type=COLLADASaxFWL::ENUM__fx_surface_type__UNTYPED; break;</code_line>
				<code_line>case COLLADASaxFWL14::ENUM__fx_surface_type_enum__1D: attrData.type=COLLADASaxFWL::ENUM__fx_surface_type__1D; break;</code_line>
				<code_line>case COLLADASaxFWL14::ENUM__fx_surface_type_enum__2D: attrData.type=COLLADASaxFWL::ENUM__fx_surface_type__2D; break;</code_line>
				<code_line>case COLLADASaxFWL14::ENUM__fx_surface_type_enum__3D: attrData.type=COLLADASaxFWL::ENUM__fx_surface_type__3D; break;</code_line>
				<code_line>case COLLADASaxFWL14::ENUM__fx_surface_type_enum__RECT: attrData.type=COLLADASaxFWL::ENUM__fx_surface_type__RECT; break;</code_line>
				<code_line>case COLLADASaxFWL14::ENUM__fx_surface_type_enum__CUBE: attrData.type=COLLADASaxFWL::ENUM__fx_surface_type__CUBE; break;</code_line>
				<code_line>case COLLADASaxFWL14::ENUM__fx_surface_type_enum__DEPTH: attrData.type=COLLADASaxFWL::ENUM__fx_surface_type__DEPTH; break;</code_line>
				<code_line>case COLLADASaxFWL14::ENUM__fx_surface_type_enum__COUNT: attrData.type=COLLADASaxFWL::ENUM__fx_surface_type__INVALID; break;</code_line>
				<code_line>case COLLADASaxFWL14::ENUM__fx_surface_type_enum__NOT_PRESENT: attrData.type=COLLADASaxFWL::ENUM__fx_surface_type__NOT_PRESENT; break;</code_line>
	            <code_line>}</code_line>
			</specific>
		</method>

		<method name="end__surface____fx_surface_common">
			<specific version="14" name="end__surface____fx_surface_common"></specific>
		</method>

		<method name="begin__init_from____fx_surface_init_from_common">
			<parameter type="COLLADASaxFWL::init_from____fx_surface_init_from_common__AttributeData" name="attrData" />
			<specific version="14" name="begin__init_from____fx_surface_init_from_common">
				<parameter type="const COLLADASaxFWL14::init_from____fx_surface_init_from_common__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::init_from____fx_surface_init_from_common__AttributeData attrData;</code_line>
				<code_line>attrData.mip = attributeData.mip;</code_line>
				<code_line>attrData.slice = attributeData.slice;</code_line>
				<code_line>switch (attributeData.face) {</code_line>
				<code_line>case COLLADASaxFWL14::ENUM__fx_surface_face_enum__POSITIVE_X: attrData.face=COLLADASaxFWL::ENUM__fx_surface_face__POSITIVE_X; break;</code_line>
				<code_line>case COLLADASaxFWL14::ENUM__fx_surface_face_enum__NEGATIVE_X: attrData.face=COLLADASaxFWL::ENUM__fx_surface_face__NEGATIVE_X; break;</code_line>
				<code_line>case COLLADASaxFWL14::ENUM__fx_surface_face_enum__POSITIVE_Y: attrData.face=COLLADASaxFWL::ENUM__fx_surface_face__POSITIVE_Y; break;</code_line>
				<code_line>case COLLADASaxFWL14::ENUM__fx_surface_face_enum__NEGATIVE_Y: attrData.face=COLLADASaxFWL::ENUM__fx_surface_face__NEGATIVE_Y; break;</code_line>
				<code_line>case COLLADASaxFWL14::ENUM__fx_surface_face_enum__POSITIVE_Z: attrData.face=COLLADASaxFWL::ENUM__fx_surface_face__POSITIVE_Z; break;</code_line>
				<code_line>case COLLADASaxFWL14::ENUM__fx_surface_face_enum__NEGATIVE_Z: attrData.face=COLLADASaxFWL::ENUM__fx_surface_face__NEGATIVE_Z; break;</code_line>
				<code_line>case COLLADASaxFWL14::ENUM__fx_surface_face_enum__COUNT: attrData.face=COLLADASaxFWL::ENUM__fx_surface_face__INVALID; break;</code_line>
				<code_line>case COLLADASaxFWL14::ENUM__fx_surface_face_enum__NOT_PRESENT: attrData.face=COLLADASaxFWL::ENUM__fx_surface_face__NOT_PRESENT; break;</code_line>
	            <code_line>}</code_line>
			</specific>
		</method>

		<method name="end__init_from____fx_surface_init_from_common">
			<specific version="14" name="end__init_from____fx_surface_init_from_common"></specific>
		</method>

		<method name="data__init_from____fx_surface_init_from_common">
			<parameter type="const ParserChar*" name="data" />
			<parameter type="size_t" name="length" />
			<specific version="14" name="data__init_from____fx_surface_init_from_common"></specific>
		</method>

		<method name="begin__instance_image">
			<parameter type="COLLADASaxFWL::instance_image__AttributeData" name="attrData" />
			<specific version="15" name="begin__instance_image">
				<parameter type="const COLLADASaxFWL15::instance_image__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::instance_image__AttributeData attrData;</code_line>
				<code_line>attrData.present_attributes = 0;</code_line>
				<code_line>attrData.sid = attributeData.sid;</code_line>
				<code_line>attrData.name = attributeData.name;</code_line>
	            <code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::instance_image__AttributeData::ATTRIBUTE_URL_PRESENT) == COLLADASaxFWL15::instance_image__AttributeData::ATTRIBUTE_URL_PRESENT ) {</code_line>
	            <code_line>    attrData.url = attributeData.url;</code_line>
	            <code_line>    attrData.present_attributes |= COLLADASaxFWL::instance_image__AttributeData::ATTRIBUTE_URL_PRESENT;</code_line>
	            <code_line>}</code_line>
			</specific>
		</method>

		<method name="end__instance_image">
			<specific version="15" name="end__instance_image"></specific>
		</method>

		<method name="begin__sampler2D____fx_sampler2D_common">
			<specific version="14" name="begin__sampler2D____fx_sampler2D_common"></specific>
			<specific version="15" name="begin__sampler2D____fx_sampler2D_type"></specific>
		</method>

		<method name="end__sampler2D____fx_sampler2D_common">
			<specific version="14" name="end__sampler2D____fx_sampler2D_common"></specific>
			<specific version="15" name="end__sampler2D____fx_sampler2D_type"></specific>
		</method>

		<method name="begin__source____NCName">
			<specific version="14" name="begin__source____NCName"></specific>
			<specific version="15" name="begin__param____NCName"></specific>
		</method>

		<method name="end__source____NCName">
			<specific version="14" name="end__source____NCName"></specific>
			<specific version="15" name="end__param____NCName"></specific>
		</method>

		<method name="data__source____NCName">
			<parameter type="const ParserChar*" name="data" />
			<parameter type="size_t" name="length" />
			<specific version="14" name="data__source____NCName"></specific>
			<specific version="15" name="data__param____NCName"></specific>
		</method>

		<method name="begin__wrap_s____fx_sampler_wrap_common">
			<specific version="14" name="begin__wrap_s____fx_sampler_wrap_common"></specific>
			<specific version="15" name="begin__wrap_s____fx_sampler_wrap_enum"></specific>
		</method>

		<method name="end__wrap_s____fx_sampler_wrap_common">
			<specific version="14" name="end__wrap_s____fx_sampler_wrap_common"></specific>
			<specific version="15" name="end__wrap_s____fx_sampler_wrap_enum"></specific>
		</method>

		<method name="data__wrap_s____fx_sampler_wrap_common">
			<parameter type="COLLADASaxFWL::ENUM__fx_sampler_wrap_common" name="newValue" />
			<specific version="14" name="data__wrap_s____fx_sampler_wrap_common">
				<parameter type="const COLLADASaxFWL14::ENUM__fx_sampler_wrap_common" name="value" />
				<code_line>COLLADASaxFWL::ENUM__fx_sampler_wrap_common newValue;</code_line>
				<code_line>switch (value) {</code_line>
				<code_line>case COLLADASaxFWL14::ENUM__fx_sampler_wrap_common__NONE: newValue=COLLADASaxFWL::ENUM__fx_sampler_wrap_common__NONE; break;</code_line>
				<code_line>case COLLADASaxFWL14::ENUM__fx_sampler_wrap_common__WRAP: newValue=COLLADASaxFWL::ENUM__fx_sampler_wrap_common__WRAP; break;</code_line>
				<code_line>case COLLADASaxFWL14::ENUM__fx_sampler_wrap_common__MIRROR: newValue=COLLADASaxFWL::ENUM__fx_sampler_wrap_common__MIRROR; break;</code_line>
				<code_line>case COLLADASaxFWL14::ENUM__fx_sampler_wrap_common__CLAMP: newValue=COLLADASaxFWL::ENUM__fx_sampler_wrap_common__CLAMP; break;</code_line>
				<code_line>case COLLADASaxFWL14::ENUM__fx_sampler_wrap_common__BORDER: newValue=COLLADASaxFWL::ENUM__fx_sampler_wrap_common__BORDER; break;</code_line>
				<code_line>case COLLADASaxFWL14::ENUM__fx_sampler_wrap_common__COUNT: newValue=COLLADASaxFWL::ENUM__fx_sampler_wrap_common__COUNT; break;</code_line>
				<code_line>case COLLADASaxFWL14::ENUM__fx_sampler_wrap_common__NOT_PRESENT: newValue=COLLADASaxFWL::ENUM__fx_sampler_wrap_common__NOT_PRESENT; break;</code_line>
	            <code_line>}</code_line>
			</specific>
			<specific version="15" name="data__wrap_s____fx_sampler_wrap_enum">
				<parameter type="const COLLADASaxFWL15::ENUM__fx_sampler_wrap_enum" name="value" />
				<code_line>COLLADASaxFWL::ENUM__fx_sampler_wrap_common newValue;</code_line>
				<code_line>switch (value) {</code_line>
				<code_line>case COLLADASaxFWL15::ENUM__fx_sampler_wrap_enum__WRAP: newValue=COLLADASaxFWL::ENUM__fx_sampler_wrap_common__WRAP; break;</code_line>
				<code_line>case COLLADASaxFWL15::ENUM__fx_sampler_wrap_enum__CLAMP: newValue=COLLADASaxFWL::ENUM__fx_sampler_wrap_common__CLAMP; break;</code_line>
				<code_line>case COLLADASaxFWL15::ENUM__fx_sampler_wrap_enum__BORDER: newValue=COLLADASaxFWL::ENUM__fx_sampler_wrap_common__BORDER; break;</code_line>
				<code_line>case COLLADASaxFWL15::ENUM__fx_sampler_wrap_enum__MIRROR: newValue=COLLADASaxFWL::ENUM__fx_sampler_wrap_common__MIRROR; break;</code_line>
				<code_line>case COLLADASaxFWL15::ENUM__fx_sampler_wrap_enum__MIRROR_ONCE: newValue=COLLADASaxFWL::ENUM__fx_sampler_wrap_common__MIRROR_ONCE; break;</code_line>
				<code_line>case COLLADASaxFWL15::ENUM__fx_sampler_wrap_enum__COUNT: newValue=COLLADASaxFWL::ENUM__fx_sampler_wrap_common__COUNT; break;</code_line>
				<code_line>case COLLADASaxFWL15::ENUM__fx_sampler_wrap_enum__NOT_PRESENT: newValue=COLLADASaxFWL::ENUM__fx_sampler_wrap_common__NOT_PRESENT; break;</code_line>
	            <code_line>}</code_line>
			</specific>
		</method>

		<method name="begin__wrap_t____fx_sampler_wrap_common">
			<specific version="14" name="begin__wrap_t____fx_sampler_wrap_common"></specific>
			<specific version="15" name="begin__wrap_t____fx_sampler_wrap_enum"></specific>
		</method>

		<method name="end__wrap_t____fx_sampler_wrap_common">
			<specific version="14" name="end__wrap_t____fx_sampler_wrap_common"></specific>
			<specific version="15" name="end__wrap_t____fx_sampler_wrap_enum"></specific>
		</method>

		<method name="data__wrap_t____fx_sampler_wrap_common">
			<parameter type="COLLADASaxFWL::ENUM__fx_sampler_wrap_common" name="newValue" />
			<specific version="14" name="data__wrap_t____fx_sampler_wrap_common">
				<parameter type="const COLLADASaxFWL14::ENUM__fx_sampler_wrap_common" name="value" />
				<code_line>COLLADASaxFWL::ENUM__fx_sampler_wrap_common newValue;</code_line>
				<code_line>switch (value) {</code_line>
				<code_line>case COLLADASaxFWL14::ENUM__fx_sampler_wrap_common__NONE: newValue=COLLADASaxFWL::ENUM__fx_sampler_wrap_common__NONE; break;</code_line>
				<code_line>case COLLADASaxFWL14::ENUM__fx_sampler_wrap_common__WRAP: newValue=COLLADASaxFWL::ENUM__fx_sampler_wrap_common__WRAP; break;</code_line>
				<code_line>case COLLADASaxFWL14::ENUM__fx_sampler_wrap_common__MIRROR: newValue=COLLADASaxFWL::ENUM__fx_sampler_wrap_common__MIRROR; break;</code_line>
				<code_line>case COLLADASaxFWL14::ENUM__fx_sampler_wrap_common__CLAMP: newValue=COLLADASaxFWL::ENUM__fx_sampler_wrap_common__CLAMP; break;</code_line>
				<code_line>case COLLADASaxFWL14::ENUM__fx_sampler_wrap_common__BORDER: newValue=COLLADASaxFWL::ENUM__fx_sampler_wrap_common__BORDER; break;</code_line>
				<code_line>case COLLADASaxFWL14::ENUM__fx_sampler_wrap_common__COUNT: newValue=COLLADASaxFWL::ENUM__fx_sampler_wrap_common__COUNT; break;</code_line>
				<code_line>case COLLADASaxFWL14::ENUM__fx_sampler_wrap_common__NOT_PRESENT: newValue=COLLADASaxFWL::ENUM__fx_sampler_wrap_common__NOT_PRESENT; break;</code_line>
	            <code_line>}</code_line>
			</specific>
			<specific version="15" name="data__wrap_t____fx_sampler_wrap_enum">
				<parameter type="const COLLADASaxFWL15::ENUM__fx_sampler_wrap_enum" name="value" />
				<code_line>COLLADASaxFWL::ENUM__fx_sampler_wrap_common newValue;</code_line>
				<code_line>switch (value) {</code_line>
				<code_line>case COLLADASaxFWL15::ENUM__fx_sampler_wrap_enum__WRAP: newValue=COLLADASaxFWL::ENUM__fx_sampler_wrap_common__WRAP; break;</code_line>
				<code_line>case COLLADASaxFWL15::ENUM__fx_sampler_wrap_enum__CLAMP: newValue=COLLADASaxFWL::ENUM__fx_sampler_wrap_common__CLAMP; break;</code_line>
				<code_line>case COLLADASaxFWL15::ENUM__fx_sampler_wrap_enum__BORDER: newValue=COLLADASaxFWL::ENUM__fx_sampler_wrap_common__BORDER; break;</code_line>
				<code_line>case COLLADASaxFWL15::ENUM__fx_sampler_wrap_enum__MIRROR: newValue=COLLADASaxFWL::ENUM__fx_sampler_wrap_common__MIRROR; break;</code_line>
				<code_line>case COLLADASaxFWL15::ENUM__fx_sampler_wrap_enum__MIRROR_ONCE: newValue=COLLADASaxFWL::ENUM__fx_sampler_wrap_common__MIRROR_ONCE; break;</code_line>
				<code_line>case COLLADASaxFWL15::ENUM__fx_sampler_wrap_enum__COUNT: newValue=COLLADASaxFWL::ENUM__fx_sampler_wrap_common__COUNT; break;</code_line>
				<code_line>case COLLADASaxFWL15::ENUM__fx_sampler_wrap_enum__NOT_PRESENT: newValue=COLLADASaxFWL::ENUM__fx_sampler_wrap_common__NOT_PRESENT; break;</code_line>
	            <code_line>}</code_line>
			</specific>
		</method>


		<method name="begin__profile_COMMON__technique">
			<parameter type="COLLADASaxFWL::profile_COMMON__technique__AttributeData" name="attrData" />
			<specific version="14" name="begin__profile_COMMON__technique">
				<parameter type="const COLLADASaxFWL14::profile_COMMON__technique__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::profile_COMMON__technique__AttributeData attrData;</code_line>
				<code_line>attrData.id = attributeData.id;</code_line>
				<code_line>attrData.sid = attributeData.sid;</code_line>
			</specific>
			<specific version="15" name="begin__profile_common_type____technique">
				<parameter type="const COLLADASaxFWL15::profile_common_type____technique__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::profile_COMMON__technique__AttributeData attrData;</code_line>
				<code_line>attrData.id = attributeData.id;</code_line>
				<code_line>attrData.sid = attributeData.sid;</code_line>
			</specific>
		</method>

		<method name="end__profile_COMMON__technique">
			<specific version="14" name="end__profile_COMMON__technique"></specific>
			<specific version="15" name="end__profile_common_type____technique"></specific>
		</method>

		<method name="begin__profile_COMMON__technique__constant">
			<specific version="14" name="begin__profile_COMMON__technique__constant"></specific>
			<specific version="15" name="begin__profile_COMMON__technique__constant"></specific>
		</method>

		<method name="end__profile_COMMON__technique__constant">
			<specific version="14" name="end__profile_COMMON__technique__constant"></specific>
			<specific version="15" name="end__profile_COMMON__technique__constant"></specific>
		</method>

		<method name="begin__lambert">
			<specific version="14" name="begin__lambert"></specific>
			<specific version="15" name="begin__lambert"></specific>
		</method>

		<method name="end__lambert">
			<specific version="14" name="end__lambert"></specific>
			<specific version="15" name="end__lambert"></specific>
		</method>

		<method name="begin__phong">
			<specific version="14" name="begin__phong"></specific>
			<specific version="15" name="begin__phong"></specific>
		</method>

		<method name="end__phong">
			<specific version="14" name="end__phong"></specific>
			<specific version="15" name="end__phong"></specific>
		</method>

		<method name="begin__emission">
			<specific version="14" name="begin__emission"></specific>
			<specific version="15" name="begin__emission"></specific>
		</method>

		<method name="end__emission">
			<specific version="14" name="end__emission"></specific>
			<specific version="15" name="end__emission"></specific>
		</method>

		<method name="begin__ambient____common_color_or_texture_type">
			<specific version="14" name="begin__ambient____common_color_or_texture_type"></specific>
			<specific version="15" name="begin__ambient____fx_common_color_or_texture_type"></specific>
		</method>

		<method name="end__ambient____common_color_or_texture_type">
			<specific version="14" name="end__ambient____common_color_or_texture_type"></specific>
			<specific version="15" name="end__ambient____fx_common_color_or_texture_type"></specific>
		</method>

		<method name="begin__diffuse">
			<specific version="14" name="begin__diffuse"></specific>
			<specific version="15" name="begin__diffuse"></specific>
		</method>

		<method name="end__diffuse">
			<specific version="14" name="end__diffuse"></specific>
			<specific version="15" name="end__diffuse"></specific>
		</method>

		<method name="begin__specular">
			<specific version="14" name="begin__specular"></specific>
			<specific version="15" name="begin__specular"></specific>
		</method>

		<method name="end__specular">
			<specific version="14" name="end__specular"></specific>
			<specific version="15" name="end__specular"></specific>
		</method>

		<method name="begin__shininess">
			<specific version="14" name="begin__shininess"></specific>
			<specific version="15" name="begin__shininess"></specific>
		</method>

		<method name="end__shininess">
			<specific version="14" name="end__shininess"></specific>
			<specific version="15" name="end__shininess"></specific>
		</method>

		<method name="begin__reflective">
			<specific version="14" name="begin__reflective"></specific>
			<specific version="15" name="begin__reflective"></specific>
		</method>

		<method name="end__reflective">
			<specific version="14" name="end__reflective"></specific>
			<specific version="15" name="end__reflective"></specific>
		</method>

		<method name="begin__reflectivity">
			<specific version="14" name="begin__reflectivity"></specific>
			<specific version="15" name="begin__reflectivity"></specific>
		</method>

		<method name="end__reflectivity">
			<specific version="14" name="end__reflectivity"></specific>
			<specific version="15" name="end__reflectivity"></specific>
		</method>

		<method name="begin__transparency">
			<specific version="14" name="begin__transparency"></specific>
			<specific version="15" name="begin__transparency"></specific>
		</method>

		<method name="end__transparency">
			<specific version="14" name="end__transparency"></specific>
			<specific version="15" name="end__transparency	"></specific>
		</method>

		<method name="begin__index_of_refraction">
			<specific version="14" name="begin__index_of_refraction"></specific>
			<specific version="15" name="begin__index_of_refraction"></specific>
		</method>

		<method name="end__index_of_refraction">
			<specific version="14" name="end__index_of_refraction"></specific>
			<specific version="15" name="end__index_of_refraction"></specific>
		</method>

		<method name="begin__blinn">
			<specific version="14" name="begin__blinn"></specific>
			<specific version="15" name="begin__blinn"></specific>
		</method>

		<method name="end__blinn">
			<specific version="14" name="end__blinn"></specific>
			<specific version="15" name="end__blinn"></specific>
		</method>

		<method name="begin__transparent">
			<parameter type="COLLADASaxFWL::transparent__AttributeData" name="attrData" />
			<specific version="14" name="begin__transparent">
				<parameter type="const COLLADASaxFWL14::transparent__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::transparent__AttributeData attrData;</code_line>
				<code_line>switch (attributeData.opaque) {</code_line>
				<code_line>case COLLADASaxFWL14::ENUM__fx_opaque_enum__A_ONE: attrData.opaque=COLLADASaxFWL::ENUM__fx_opaque__A_ONE; break;</code_line>
				<code_line>case COLLADASaxFWL14::ENUM__fx_opaque_enum__RGB_ZERO: attrData.opaque=COLLADASaxFWL::ENUM__fx_opaque__RGB_ZERO; break;</code_line>
				<code_line>case COLLADASaxFWL14::ENUM__fx_opaque_enum__COUNT: attrData.opaque=COLLADASaxFWL::ENUM__fx_opaque__INVALID; break;</code_line>
				<code_line>case COLLADASaxFWL14::ENUM__fx_opaque_enum__NOT_PRESENT: attrData.opaque=COLLADASaxFWL::ENUM__fx_opaque__NOT_PRESENT; break;</code_line>
	            <code_line>}</code_line>
			</specific>
			<specific version="15" name="begin__transparent">
				<parameter type="const COLLADASaxFWL15::transparent__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::transparent__AttributeData attrData;</code_line>
				<code_line>switch (attributeData.opaque) {</code_line>
				<code_line>case COLLADASaxFWL15::ENUM__fx_opaque_enum__A_ONE: attrData.opaque=COLLADASaxFWL::ENUM__fx_opaque__A_ONE; break;</code_line>
				<code_line>case COLLADASaxFWL15::ENUM__fx_opaque_enum__A_ZERO: attrData.opaque=COLLADASaxFWL::ENUM__fx_opaque__A_ZERO; break;</code_line>
				<code_line>case COLLADASaxFWL15::ENUM__fx_opaque_enum__RGB_ONE: attrData.opaque=COLLADASaxFWL::ENUM__fx_opaque__RGB_ONE; break;</code_line>
				<code_line>case COLLADASaxFWL15::ENUM__fx_opaque_enum__RGB_ZERO: attrData.opaque=COLLADASaxFWL::ENUM__fx_opaque__RGB_ZERO; break;</code_line>
				<code_line>case COLLADASaxFWL15::ENUM__fx_opaque_enum__COUNT: attrData.opaque=COLLADASaxFWL::ENUM__fx_opaque__INVALID; break;</code_line>
				<code_line>case COLLADASaxFWL15::ENUM__fx_opaque_enum__NOT_PRESENT: attrData.opaque=COLLADASaxFWL::ENUM__fx_opaque__NOT_PRESENT; break;</code_line>
	            <code_line>}</code_line>
			</specific>
		</method>

		<method name="end__transparent">
			<specific version="14" name="end__transparent"></specific>
			<specific version="15" name="end__transparent"></specific>
		</method>

		<method name="begin__common_color_or_texture_type____color">
			<parameter type="COLLADASaxFWL::common_color_or_texture_type____color__AttributeData" name="attrData" />
			<specific version="14" name="begin__common_color_or_texture_type____color">
				<parameter type="const COLLADASaxFWL14::common_color_or_texture_type____color__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::common_color_or_texture_type____color__AttributeData attrData;</code_line>
				<code_line>attrData.sid = attributeData.sid;</code_line>
			</specific>
			<specific version="15" name="begin__fx_common_color_or_texture_type____color">
				<parameter type="const COLLADASaxFWL15::fx_common_color_or_texture_type____color__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::common_color_or_texture_type____color__AttributeData attrData;</code_line>
				<code_line>attrData.sid = attributeData.sid;</code_line>
			</specific>
		</method>

		<method name="end__common_color_or_texture_type____color">
			<specific version="14" name="end__common_color_or_texture_type____color"></specific>
			<specific version="15" name="end__fx_common_color_or_texture_type____color"></specific>
		</method>

		<method name="data__common_color_or_texture_type____color">
			<parameter type="const float*" name="data" />
			<parameter type="size_t" name="length" />
			<specific version="14" name="data__common_color_or_texture_type____color"></specific>
			<specific version="15" name="data__fx_common_color_or_texture_type____color"></specific>
		</method>

		<method name="begin__common_float_or_param_type____float">
			<parameter type="COLLADASaxFWL::common_float_or_param_type____float__AttributeData" name="attrData" />
			<specific version="14" name="begin__common_float_or_param_type____float">
				<parameter type="const COLLADASaxFWL14::common_float_or_param_type____float__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::common_float_or_param_type____float__AttributeData attrData;</code_line>
				<code_line>attrData.sid = attributeData.sid;</code_line>
			</specific>
			<specific version="15" name="begin__fx_common_float_or_param_type____float">
				<parameter type="const COLLADASaxFWL15::fx_common_float_or_param_type____float__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::common_float_or_param_type____float__AttributeData attrData;</code_line>
				<code_line>attrData.sid = attributeData.sid;</code_line>
			</specific>
		</method>

		<method name="end__common_float_or_param_type____float">
			<specific version="14" name="end__common_float_or_param_type____float"></specific>
			<specific version="15" name="end__fx_common_float_or_param_type____float"></specific>
		</method>

		<method name="data__common_float_or_param_type____float">
			<parameter type="float" name="value" />
			<specific version="14" name="data__common_float_or_param_type____float"></specific>
			<specific version="15" name="data__fx_common_float_or_param_type____float"></specific>
		</method>

		<method name="begin__texture">
			<parameter type="COLLADASaxFWL::texture__AttributeData" name="attrData" />
			<specific version="14" name="begin__texture">
				<parameter type="const COLLADASaxFWL14::texture__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::texture__AttributeData attrData;</code_line>
				<code_line>attrData.texture = attributeData.texture;</code_line>
				<code_line>attrData.texcoord = attributeData.texcoord;</code_line>
			</specific>
			<specific version="15" name="begin__texture">
				<parameter type="const COLLADASaxFWL15::texture__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::texture__AttributeData attrData;</code_line>
				<code_line>attrData.texture = attributeData.texture;</code_line>
				<code_line>attrData.texcoord = attributeData.texcoord;</code_line>
			</specific>
		</method>

		<method name="end__texture">
			<specific version="14" name="end__texture"></specific>
			<specific version="15" name="end__texture"></specific>
		</method>

		<method name="begin__technique">
			<parameter type="COLLADASaxFWL::technique__AttributeData" name="attrData" />
			<specific version="14" name="begin__technique">
				<parameter type="const COLLADASaxFWL14::technique__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::technique__AttributeData attrData;</code_line>
				<code_line>attrData.profile = attributeData.profile;</code_line>
			</specific>
			<specific version="15" name="begin__technique____technique_type">
				<parameter type="const COLLADASaxFWL15::technique____technique_type__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::technique__AttributeData attrData;</code_line>
				<code_line>attrData.profile = attributeData.profile;</code_line>
			</specific>
		</method>

		<method name="end__technique">
			<specific version="14" name="end__technique"></specific>
			<specific version="15" name="end__technique____technique_type"></specific>
		</method>

	</class>

	<class name="FormulasLoader" include="COLLADASaxFWLFormulasLoader.h">
		<member type="FormulasLoader*" name="mLoader" />
		<ctor>
			<parameter type="FormulasLoader*" name="loader" />
			<initlist name="mLoader" value="loader" />
		</ctor>

		<method name="begin__formula">
			<parameter type="COLLADASaxFWL::formula__AttributeData" name="attrData" />
			<specific version="15" name="begin__formula">
				<parameter type="const COLLADASaxFWL15::formula__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::formula__AttributeData attrData;</code_line>
				<code_line>attrData.id = attributeData.id;</code_line>
				<code_line>attrData.sid = attributeData.sid;</code_line>
	            <code_line>attrData.name = attributeData.name;</code_line>
			</specific>
		</method>

		<method name="end__formula">
			<specific version="15" name="end__formula"></specific>
		</method>

		<method name="begin__newparam">
			<parameter type="COLLADASaxFWL::formula_newparam_type__AttributeData" name="attrData" />
			<specific version="15" name="begin__newparam____formula_newparam_type">
				<parameter type="const COLLADASaxFWL15::newparam____formula_newparam_type__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::formula_newparam_type__AttributeData attrData;</code_line>
				<code_line>attrData.sid = attributeData.sid;</code_line>
			</specific>
		</method>

		<method name="end__newparam">
			<specific version="15" name="end__newparam____formula_newparam_type"></specific>
		</method>

		<method name="begin__target">
			<specific version="15" name="begin__target"></specific>
		</method>

		<method name="end__target">
			<specific version="15" name="end__target"></specific>
		</method>

		<method name="begin__param">
			<specific version="15" name="begin__param____common_param_type"></specific>
		</method>

		<method name="end__param">
			<specific version="15" name="end__param____common_param_type"></specific>
		</method>

		<method name="data__param">
			<parameter type="const ParserChar*" name="value" />
			<parameter type="size_t" name="length" />
			<specific version="15" name="data__param____common_param_type"></specific>
		</method>

		<method name="begin__float">
			<specific version="15" name="begin__float____float_type"></specific>
		</method>

		<method name="end__float">
			<specific version="15" name="end__float____float_type"></specific>
		</method>

		<method name="data__float">
			<parameter type="float" name="value" />
			<specific version="15" name="data__float____float_type"></specific>
		</method>

		<method name="begin__int">
			<specific version="15" name="begin__int____int_type"></specific>
		</method>

		<method name="end__int">
			<specific version="15" name="end__int____int_type"></specific>
		</method>

		<method name="data__int">
			<parameter type="int" name="value" />
			<specific version="15" name="data__int____int_type"></specific>
		</method>

		<method name="begin__bool">
			<specific version="15" name="begin__bool"></specific>
		</method>

		<method name="end__bool">
			<specific version="15" name="end__bool"></specific>
		</method>

		<method name="data__bool">
			<parameter type="bool" name="value" />
			<specific version="15" name="data__bool"></specific>
		</method>

		<method name="begin__technique_common">
			<specific version="15" name="begin__technique_common____formula_technique_type"></specific>
		</method>

		<method name="end__technique_common">
			<specific version="15" name="end__technique_common____formula_technique_type"></specific>
		</method>

		<method name="begin__math">
			<parameter type="COLLADASaxFWL::math__AttributeData" name="attrData" />
			<specific version="15" name="begin__math">
				<parameter type="const COLLADASaxFWL15::math__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::math__AttributeData attrData;</code_line>
				<code_line>attrData.baseline = attributeData.baseline;</code_line>
				<code_line>attrData.alttext = attributeData.alttext;</code_line>
				<code_line>attrData.type = attributeData.type;</code_line>
				<code_line>attrData.name = attributeData.name;</code_line>
				<code_line>attrData.height = attributeData.height;</code_line>
				<code_line>attrData.width = attributeData.width;</code_line>
				<code_line>attrData.macros = attributeData.macros;</code_line>
				<code_line>attrData.style = attributeData.style;</code_line>
				<code_line>attrData.xref = attributeData.xref;</code_line>
				<code_line>attrData.id = attributeData.id;</code_line>
				<code_line>attrData.unknownAttributes = attributeData.unknownAttributes;</code_line>

				<code_line>switch (attributeData.overflow) {</code_line>
				<code_line>case COLLADASaxFWL15::ENUM__mathml__overflow__scroll: attrData.overflow=COLLADASaxFWL::ENUM__mathml__overflow__scroll; break;</code_line>
				<code_line>case COLLADASaxFWL15::ENUM__mathml__overflow__elide: attrData.overflow=COLLADASaxFWL::ENUM__mathml__overflow__elide; break;</code_line>
				<code_line>case COLLADASaxFWL15::ENUM__mathml__overflow__truncate: attrData.overflow=COLLADASaxFWL::ENUM__mathml__overflow__truncate; break;</code_line>
				<code_line>case COLLADASaxFWL15::ENUM__mathml__overflow__scale: attrData.overflow=COLLADASaxFWL::ENUM__mathml__overflow__scale; break;</code_line>
				<code_line>case COLLADASaxFWL15::ENUM__mathml__overflow__COUNT: attrData.overflow=COLLADASaxFWL::ENUM__mathml__overflow__INVALID; break;</code_line>
				<code_line>case COLLADASaxFWL15::ENUM__mathml__overflow__NOT_PRESENT: attrData.overflow=COLLADASaxFWL::ENUM__mathml__overflow__NOT_PRESENT; break;</code_line>
				<code_line>}</code_line>

				<code_line>switch (attributeData.display) {</code_line>
				<code_line>case COLLADASaxFWL15::ENUM__mathml__display__block: attrData.display=COLLADASaxFWL::ENUM__mathml__display__block; break;</code_line>
				<code_line>case COLLADASaxFWL15::ENUM__mathml__display__inline: attrData.display=COLLADASaxFWL::ENUM__mathml__display__inline; break;</code_line>
				<code_line>case COLLADASaxFWL15::ENUM__mathml__display__COUNT: attrData.display=COLLADASaxFWL::ENUM__mathml__display__INVALID; break;</code_line>
				<code_line>case COLLADASaxFWL15::ENUM__mathml__display__NOT_PRESENT: attrData.display=COLLADASaxFWL::ENUM__mathml__display__NOT_PRESENT; break;</code_line>
				<code_line>}</code_line>

				<code_line>attrData.present_attributes = 0;</code_line>

				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::math__AttributeData::ATTRIBUTE_ALTIMG_PRESENT) == COLLADASaxFWL15::math__AttributeData::ATTRIBUTE_ALTIMG_PRESENT ) {</code_line>
				<code_line>    attrData.altimg = attributeData.altimg;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::math__AttributeData::ATTRIBUTE_ALTIMG_PRESENT;</code_line>
				<code_line>}</code_line>

				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::math__AttributeData::ATTRIBUTE__CLASS_PRESENT) == COLLADASaxFWL15::math__AttributeData::ATTRIBUTE__CLASS_PRESENT ) {</code_line>
				<code_line>    attrData._class = attributeData._class;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::math__AttributeData::ATTRIBUTE__CLASS_PRESENT;</code_line>
				<code_line>}</code_line>

				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::math__AttributeData::ATTRIBUTE_HREF_PRESENT) == COLLADASaxFWL15::math__AttributeData::ATTRIBUTE_HREF_PRESENT ) {</code_line>
				<code_line>    attrData.href = attributeData.href;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::math__AttributeData::ATTRIBUTE_HREF_PRESENT;</code_line>
				<code_line>}</code_line>
			</specific>
		</method>

		<method name="end__math">
			<specific version="15" name="end__math"></specific>
		</method>

		<method name="begin__apply">
			<parameter type="COLLADASaxFWL::apply__AttributeData" name="attrData" />
			<specific version="15" name="begin__apply">
				<parameter type="const COLLADASaxFWL15::apply__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::apply__AttributeData attrData;</code_line>
				<code_line>attrData.style = attributeData.style;</code_line>
				<code_line>attrData.xref = attributeData.xref;</code_line>
				<code_line>attrData.id = attributeData.id;</code_line>
				<code_line>attrData.unknownAttributes = attributeData.unknownAttributes;</code_line>
				<code_line>attrData.present_attributes = 0;</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::apply__AttributeData::ATTRIBUTE__CLASS_PRESENT) == COLLADASaxFWL15::apply__AttributeData::ATTRIBUTE__CLASS_PRESENT ) {</code_line>
				<code_line>    attrData._class = attributeData._class;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::apply__AttributeData::ATTRIBUTE__CLASS_PRESENT;</code_line>
				<code_line>}</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::apply__AttributeData::ATTRIBUTE_HREF_PRESENT) == COLLADASaxFWL15::apply__AttributeData::ATTRIBUTE_HREF_PRESENT ) {</code_line>
				<code_line>    attrData.href = attributeData.href;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::apply__AttributeData::ATTRIBUTE_HREF_PRESENT;</code_line>
				<code_line>}</code_line>
			</specific>
		</method>

		<method name="end__apply">
			<specific version="15" name="end__apply"></specific>
		</method>

		<method name="begin__cn">
			<parameter type="COLLADASaxFWL::cn__AttributeData" name="attrData" />
			<specific version="15" name="begin__cn">
				<parameter type="const COLLADASaxFWL15::cn__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::cn__AttributeData attrData;</code_line>
				<code_line>attrData.style = attributeData.style;</code_line>
				<code_line>attrData.xref = attributeData.xref;</code_line>
				<code_line>attrData.id = attributeData.id;</code_line>
				<code_line>attrData.encoding = attributeData.encoding;</code_line>
				<code_line>attrData.unknownAttributes = attributeData.unknownAttributes;</code_line>
				<code_line>attrData.present_attributes = 0;</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::cn__AttributeData::ATTRIBUTE__CLASS_PRESENT) == COLLADASaxFWL15::cn__AttributeData::ATTRIBUTE__CLASS_PRESENT ) {</code_line>
				<code_line>    attrData._class = attributeData._class;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::cn__AttributeData::ATTRIBUTE__CLASS_PRESENT;</code_line>
				<code_line>}</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::cn__AttributeData::ATTRIBUTE_HREF_PRESENT) == COLLADASaxFWL15::cn__AttributeData::ATTRIBUTE_HREF_PRESENT ) {</code_line>
				<code_line>    attrData.href = attributeData.href;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::cn__AttributeData::ATTRIBUTE_HREF_PRESENT;</code_line>
				<code_line>}</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::cn__AttributeData::ATTRIBUTE_BASE_PRESENT) == COLLADASaxFWL15::cn__AttributeData::ATTRIBUTE_BASE_PRESENT ) {</code_line>
				<code_line>    attrData.base = attributeData.base;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::cn__AttributeData::ATTRIBUTE_BASE_PRESENT;</code_line>
				<code_line>}</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::cn__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT) == COLLADASaxFWL15::cn__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT ) {</code_line>
				<code_line>    attrData.definitionURL = attributeData.definitionURL;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::cn__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT;</code_line>
				<code_line>}</code_line>
				<code_line>switch (attributeData.type) {</code_line>
				<code_line>case COLLADASaxFWL15::ENUM__mathml__cn__type__e_notation: attrData.type=COLLADASaxFWL::ENUM__mathml__cn__type__e_notation; break;</code_line>
				<code_line>case COLLADASaxFWL15::ENUM__mathml__cn__type__integer: attrData.type=COLLADASaxFWL::ENUM__mathml__cn__type__integer; break;</code_line>
				<code_line>case COLLADASaxFWL15::ENUM__mathml__cn__type__rational: attrData.type=COLLADASaxFWL::ENUM__mathml__cn__type__rational; break;</code_line>
				<code_line>case COLLADASaxFWL15::ENUM__mathml__cn__type__real: attrData.type=COLLADASaxFWL::ENUM__mathml__cn__type__real; break;</code_line>
				<code_line>case COLLADASaxFWL15::ENUM__mathml__cn__type__complex_cartesian: attrData.type=COLLADASaxFWL::ENUM__mathml__cn__type__complex_cartesian; break;</code_line>
				<code_line>case COLLADASaxFWL15::ENUM__mathml__cn__type__complex_polar: attrData.type=COLLADASaxFWL::ENUM__mathml__cn__type__complex_polar; break;</code_line>
				<code_line>case COLLADASaxFWL15::ENUM__mathml__cn__type__constant: attrData.type=COLLADASaxFWL::ENUM__mathml__cn__type__constant; break;</code_line>
				<code_line>case COLLADASaxFWL15::ENUM__mathml__cn__type__COUNT: attrData.type=COLLADASaxFWL::ENUM__mathml__cn__type__INVALID; break;</code_line>
				<code_line>case COLLADASaxFWL15::ENUM__mathml__cn__type__NOT_PRESENT: attrData.type=COLLADASaxFWL::ENUM__mathml__cn__type__NOT_PRESENT; break;</code_line>
				<code_line>}</code_line>
			</specific>
		</method>

		<method name="end__cn">
			<specific version="15" name="end__cn"></specific>
		</method>

		<method name="data__cn">
			<parameter type="const ParserChar*" name="value" />
			<parameter type="size_t" name="length" />
			<specific version="15" name="data__cn"></specific>
		</method>

		<method name="begin__sep">
			<specific version="15" name="begin__sep"></specific>
		</method>

		<method name="end__sep">
			<specific version="15" name="end__sep"></specific>
		</method>

		<method name="begin__ci">
			<parameter type="COLLADASaxFWL::ci__AttributeData" name="attrData" />
			<specific version="15" name="begin__ci">
				<parameter type="const COLLADASaxFWL15::ci__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::ci__AttributeData attrData;</code_line>
				<code_line>attrData.style = attributeData.style;</code_line>
				<code_line>attrData.xref = attributeData.xref;</code_line>
				<code_line>attrData.id = attributeData.id;</code_line>
				<code_line>attrData.type = attributeData.type;</code_line>
				<code_line>attrData.encoding = attributeData.encoding;</code_line>
				<code_line>attrData.unknownAttributes = attributeData.unknownAttributes;</code_line>
				<code_line>attrData.present_attributes = 0;</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::ci__AttributeData::ATTRIBUTE__CLASS_PRESENT) == COLLADASaxFWL15::ci__AttributeData::ATTRIBUTE__CLASS_PRESENT ) {</code_line>
				<code_line>    attrData._class = attributeData._class;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::ci__AttributeData::ATTRIBUTE__CLASS_PRESENT;</code_line>
				<code_line>}</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::ci__AttributeData::ATTRIBUTE_HREF_PRESENT) == COLLADASaxFWL15::ci__AttributeData::ATTRIBUTE_HREF_PRESENT ) {</code_line>
				<code_line>    attrData.href = attributeData.href;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::ci__AttributeData::ATTRIBUTE_HREF_PRESENT;</code_line>
				<code_line>}</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::ci__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT) == COLLADASaxFWL15::ci__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT ) {</code_line>
				<code_line>    attrData.definitionURL = attributeData.definitionURL;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::ci__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT;</code_line>
				<code_line>}</code_line>
			</specific>
		</method>

		<method name="end__ci">
			<specific version="15" name="end__ci"></specific>
		</method>

		<method name="data__ci">
			<parameter type="const ParserChar*" name="value" />
			<parameter type="size_t" name="length" />
			<specific version="15" name="data__ci"></specific>
		</method>

		<method name="begin__csymbol">
			<parameter type="COLLADASaxFWL::csymbol__AttributeData" name="attrData" />
			<specific version="15" name="begin__csymbol">
				<parameter type="const COLLADASaxFWL15::csymbol__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::csymbol__AttributeData attrData;</code_line>
				<code_line>attrData.style = attributeData.style;</code_line>
				<code_line>attrData.xref = attributeData.xref;</code_line>
				<code_line>attrData.id = attributeData.id;</code_line>
				<code_line>attrData.encoding = attributeData.encoding;</code_line>
				<code_line>attrData.unknownAttributes = attributeData.unknownAttributes;</code_line>
				<code_line>attrData.present_attributes = 0;</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::csymbol__AttributeData::ATTRIBUTE__CLASS_PRESENT) == COLLADASaxFWL15::csymbol__AttributeData::ATTRIBUTE__CLASS_PRESENT ) {</code_line>
				<code_line>    attrData._class = attributeData._class;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::csymbol__AttributeData::ATTRIBUTE__CLASS_PRESENT;</code_line>
				<code_line>}</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::csymbol__AttributeData::ATTRIBUTE_HREF_PRESENT) == COLLADASaxFWL15::csymbol__AttributeData::ATTRIBUTE_HREF_PRESENT ) {</code_line>
				<code_line>    attrData.href = attributeData.href;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::csymbol__AttributeData::ATTRIBUTE_HREF_PRESENT;</code_line>
				<code_line>}</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::csymbol__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT) == COLLADASaxFWL15::csymbol__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT ) {</code_line>
				<code_line>    attrData.definitionURL = attributeData.definitionURL;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::csymbol__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT;</code_line>
				<code_line>}</code_line>
			</specific>
		</method>

		<method name="end__csymbol">
			<specific version="15" name="end__csymbol"></specific>
		</method>

		<method name="data__csymbol">
			<parameter type="const ParserChar*" name="value" />
			<parameter type="size_t" name="length" />
			<specific version="15" name="data__csymbol"></specific>
		</method>

		<method name="begin__declare">
			<parameter type="COLLADASaxFWL::declare__AttributeData" name="attrData" />
			<specific version="15" name="begin__declare">
				<parameter type="const COLLADASaxFWL15::declare__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::declare__AttributeData attrData;</code_line>
				<code_line>attrData.type = attributeData.type;</code_line>
				<code_line>attrData.scope = attributeData.scope;</code_line>
				<code_line>attrData.encoding = attributeData.encoding;</code_line>
				<code_line>attrData.present_attributes = 0;</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::declare__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT) == COLLADASaxFWL15::declare__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT ) {</code_line>
				<code_line>    attrData.definitionURL = attributeData.definitionURL;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::declare__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT;</code_line>
				<code_line>}</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::declare__AttributeData::ATTRIBUTE_NARGS_PRESENT) == COLLADASaxFWL15::declare__AttributeData::ATTRIBUTE_NARGS_PRESENT ) {</code_line>
				<code_line>    attrData.nargs = attributeData.nargs;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::declare__AttributeData::ATTRIBUTE_NARGS_PRESENT;</code_line>
				<code_line>}</code_line>
				<code_line>switch (attributeData.occurrence) {</code_line>
				<code_line>case COLLADASaxFWL15::ENUM__mathml__declare__occurrence__prefix: attrData.occurrence=COLLADASaxFWL::ENUM__mathml__declare__occurrence__prefix; break;</code_line>
				<code_line>case COLLADASaxFWL15::ENUM__mathml__declare__occurrence__infix: attrData.occurrence=COLLADASaxFWL::ENUM__mathml__declare__occurrence__infix; break;</code_line>
				<code_line>case COLLADASaxFWL15::ENUM__mathml__declare__occurrence__function_model: attrData.occurrence=COLLADASaxFWL::ENUM__mathml__declare__occurrence__function_model; break;</code_line>
				<code_line>case COLLADASaxFWL15::ENUM__mathml__declare__occurrence__COUNT: attrData.occurrence=COLLADASaxFWL::ENUM__mathml__declare__occurrence__INVALID; break;</code_line>
				<code_line>case COLLADASaxFWL15::ENUM__mathml__declare__occurrence__NOT_PRESENT: attrData.occurrence=COLLADASaxFWL::ENUM__mathml__declare__occurrence__NOT_PRESENT; break;</code_line>
				<code_line>}</code_line>
			</specific>
		</method>

		<method name="end__declare">
			<specific version="15" name="end__declare"></specific>
		</method>

		<method name="begin__quotient">
			<parameter type="COLLADASaxFWL::quotient__AttributeData" name="attrData" />
			<specific version="15" name="begin__quotient">
				<parameter type="const COLLADASaxFWL15::quotient__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::quotient__AttributeData attrData;</code_line>
				<code_line>attrData.style = attributeData.style;</code_line>
				<code_line>attrData.xref = attributeData.xref;</code_line>
				<code_line>attrData.id = attributeData.id;</code_line>
				<code_line>attrData.encoding = attributeData.encoding;</code_line>
				<code_line>attrData.unknownAttributes = attributeData.unknownAttributes;</code_line>
				<code_line>attrData.present_attributes = 0;</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::quotient__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT) == COLLADASaxFWL15::quotient__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT ) {</code_line>
				<code_line>    attrData.definitionURL = attributeData.definitionURL;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::quotient__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT;</code_line>
				<code_line>}</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::quotient__AttributeData::ATTRIBUTE__CLASS_PRESENT) == COLLADASaxFWL15::quotient__AttributeData::ATTRIBUTE__CLASS_PRESENT ) {</code_line>
				<code_line>    attrData._class = attributeData._class;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::quotient__AttributeData::ATTRIBUTE__CLASS_PRESENT;</code_line>
				<code_line>}</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::quotient__AttributeData::ATTRIBUTE_HREF_PRESENT) == COLLADASaxFWL15::quotient__AttributeData::ATTRIBUTE_HREF_PRESENT ) {</code_line>
				<code_line>    attrData.href = attributeData.href;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::quotient__AttributeData::ATTRIBUTE_HREF_PRESENT;</code_line>
				<code_line>}</code_line>
			</specific>
		</method>

		<method name="end__quotient">
			<specific version="15" name="end__quotient"></specific>
		</method>

		<method name="begin__divide">
			<parameter type="COLLADASaxFWL::divide__AttributeData" name="attrData" />
			<specific version="15" name="begin__divide">
				<parameter type="const COLLADASaxFWL15::divide__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::divide__AttributeData attrData;</code_line>
				<code_line>attrData.style = attributeData.style;</code_line>
				<code_line>attrData.xref = attributeData.xref;</code_line>
				<code_line>attrData.id = attributeData.id;</code_line>
				<code_line>attrData.encoding = attributeData.encoding;</code_line>
				<code_line>attrData.unknownAttributes = attributeData.unknownAttributes;</code_line>
				<code_line>attrData.present_attributes = 0;</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::divide__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT) == COLLADASaxFWL15::divide__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT ) {</code_line>
				<code_line>    attrData.definitionURL = attributeData.definitionURL;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::divide__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT;</code_line>
				<code_line>}</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::divide__AttributeData::ATTRIBUTE__CLASS_PRESENT) == COLLADASaxFWL15::divide__AttributeData::ATTRIBUTE__CLASS_PRESENT ) {</code_line>
				<code_line>    attrData._class = attributeData._class;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::divide__AttributeData::ATTRIBUTE__CLASS_PRESENT;</code_line>
				<code_line>}</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::divide__AttributeData::ATTRIBUTE_HREF_PRESENT) == COLLADASaxFWL15::divide__AttributeData::ATTRIBUTE_HREF_PRESENT ) {</code_line>
				<code_line>    attrData.href = attributeData.href;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::divide__AttributeData::ATTRIBUTE_HREF_PRESENT;</code_line>
				<code_line>}</code_line>
			</specific>
		</method>

		<method name="end__divide">
			<specific version="15" name="end__divide"></specific>
		</method>

		<method name="begin__minus">
			<parameter type="COLLADASaxFWL::minus__AttributeData" name="attrData" />
			<specific version="15" name="begin__minus">
				<parameter type="const COLLADASaxFWL15::minus__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::minus__AttributeData attrData;</code_line>
				<code_line>attrData.style = attributeData.style;</code_line>
				<code_line>attrData.xref = attributeData.xref;</code_line>
				<code_line>attrData.id = attributeData.id;</code_line>
				<code_line>attrData.encoding = attributeData.encoding;</code_line>
				<code_line>attrData.unknownAttributes = attributeData.unknownAttributes;</code_line>
				<code_line>attrData.present_attributes = 0;</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::minus__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT) == COLLADASaxFWL15::minus__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT ) {</code_line>
				<code_line>    attrData.definitionURL = attributeData.definitionURL;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::minus__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT;</code_line>
				<code_line>}</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::minus__AttributeData::ATTRIBUTE__CLASS_PRESENT) == COLLADASaxFWL15::minus__AttributeData::ATTRIBUTE__CLASS_PRESENT ) {</code_line>
				<code_line>    attrData._class = attributeData._class;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::minus__AttributeData::ATTRIBUTE__CLASS_PRESENT;</code_line>
				<code_line>}</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::minus__AttributeData::ATTRIBUTE_HREF_PRESENT) == COLLADASaxFWL15::minus__AttributeData::ATTRIBUTE_HREF_PRESENT ) {</code_line>
				<code_line>    attrData.href = attributeData.href;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::minus__AttributeData::ATTRIBUTE_HREF_PRESENT;</code_line>
				<code_line>}</code_line>
			</specific>
		</method>

		<method name="end__minus">
			<specific version="15" name="end__minus"></specific>
		</method>

		<method name="begin__plus">
			<parameter type="COLLADASaxFWL::plus__AttributeData" name="attrData" />
			<specific version="15" name="begin__plus">
				<parameter type="const COLLADASaxFWL15::plus__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::plus__AttributeData attrData;</code_line>
				<code_line>attrData.style = attributeData.style;</code_line>
				<code_line>attrData.xref = attributeData.xref;</code_line>
				<code_line>attrData.id = attributeData.id;</code_line>
				<code_line>attrData.encoding = attributeData.encoding;</code_line>
				<code_line>attrData.unknownAttributes = attributeData.unknownAttributes;</code_line>
				<code_line>attrData.present_attributes = 0;</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::plus__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT) == COLLADASaxFWL15::plus__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT ) {</code_line>
				<code_line>    attrData.definitionURL = attributeData.definitionURL;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::plus__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT;</code_line>
				<code_line>}</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::plus__AttributeData::ATTRIBUTE__CLASS_PRESENT) == COLLADASaxFWL15::plus__AttributeData::ATTRIBUTE__CLASS_PRESENT ) {</code_line>
				<code_line>    attrData._class = attributeData._class;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::plus__AttributeData::ATTRIBUTE__CLASS_PRESENT;</code_line>
				<code_line>}</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::plus__AttributeData::ATTRIBUTE_HREF_PRESENT) == COLLADASaxFWL15::plus__AttributeData::ATTRIBUTE_HREF_PRESENT ) {</code_line>
				<code_line>    attrData.href = attributeData.href;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::plus__AttributeData::ATTRIBUTE_HREF_PRESENT;</code_line>
				<code_line>}</code_line>
			</specific>
		</method>

		<method name="end__plus">
			<specific version="15" name="end__plus"></specific>
		</method>

		<method name="begin__times">
			<parameter type="COLLADASaxFWL::times__AttributeData" name="attrData" />
			<specific version="15" name="begin__times">
				<parameter type="const COLLADASaxFWL15::times__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::times__AttributeData attrData;</code_line>
				<code_line>attrData.style = attributeData.style;</code_line>
				<code_line>attrData.xref = attributeData.xref;</code_line>
				<code_line>attrData.id = attributeData.id;</code_line>
				<code_line>attrData.encoding = attributeData.encoding;</code_line>
				<code_line>attrData.unknownAttributes = attributeData.unknownAttributes;</code_line>
				<code_line>attrData.present_attributes = 0;</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::times__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT) == COLLADASaxFWL15::times__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT ) {</code_line>
				<code_line>    attrData.definitionURL = attributeData.definitionURL;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::times__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT;</code_line>
				<code_line>}</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::times__AttributeData::ATTRIBUTE__CLASS_PRESENT) == COLLADASaxFWL15::times__AttributeData::ATTRIBUTE__CLASS_PRESENT ) {</code_line>
				<code_line>    attrData._class = attributeData._class;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::times__AttributeData::ATTRIBUTE__CLASS_PRESENT;</code_line>
				<code_line>}</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::times__AttributeData::ATTRIBUTE_HREF_PRESENT) == COLLADASaxFWL15::times__AttributeData::ATTRIBUTE_HREF_PRESENT ) {</code_line>
				<code_line>    attrData.href = attributeData.href;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::times__AttributeData::ATTRIBUTE_HREF_PRESENT;</code_line>
				<code_line>}</code_line>
			</specific>
		</method>

		<method name="end__times">
			<specific version="15" name="end__times"></specific>
		</method>

		<method name="begin__sum">
			<parameter type="COLLADASaxFWL::sum__AttributeData" name="attrData" />
			<specific version="15" name="begin__sum">
				<parameter type="const COLLADASaxFWL15::sum__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::sum__AttributeData attrData;</code_line>
				<code_line>attrData.style = attributeData.style;</code_line>
				<code_line>attrData.xref = attributeData.xref;</code_line>
				<code_line>attrData.id = attributeData.id;</code_line>
				<code_line>attrData.encoding = attributeData.encoding;</code_line>
				<code_line>attrData.unknownAttributes = attributeData.unknownAttributes;</code_line>
				<code_line>attrData.present_attributes = 0;</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::sum__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT) == COLLADASaxFWL15::sum__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT ) {</code_line>
				<code_line>    attrData.definitionURL = attributeData.definitionURL;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::sum__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT;</code_line>
				<code_line>}</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::sum__AttributeData::ATTRIBUTE__CLASS_PRESENT) == COLLADASaxFWL15::sum__AttributeData::ATTRIBUTE__CLASS_PRESENT ) {</code_line>
				<code_line>    attrData._class = attributeData._class;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::sum__AttributeData::ATTRIBUTE__CLASS_PRESENT;</code_line>
				<code_line>}</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::sum__AttributeData::ATTRIBUTE_HREF_PRESENT) == COLLADASaxFWL15::sum__AttributeData::ATTRIBUTE_HREF_PRESENT ) {</code_line>
				<code_line>    attrData.href = attributeData.href;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::sum__AttributeData::ATTRIBUTE_HREF_PRESENT;</code_line>
				<code_line>}</code_line>
			</specific>
		</method>

		<method name="end__sum">
			<specific version="15" name="end__sum"></specific>
		</method>

		<method name="begin__product">
			<parameter type="COLLADASaxFWL::product__AttributeData" name="attrData" />
			<specific version="15" name="begin__product">
				<parameter type="const COLLADASaxFWL15::product__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::product__AttributeData attrData;</code_line>
				<code_line>attrData.style = attributeData.style;</code_line>
				<code_line>attrData.xref = attributeData.xref;</code_line>
				<code_line>attrData.id = attributeData.id;</code_line>
				<code_line>attrData.encoding = attributeData.encoding;</code_line>
				<code_line>attrData.unknownAttributes = attributeData.unknownAttributes;</code_line>
				<code_line>attrData.present_attributes = 0;</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::product__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT) == COLLADASaxFWL15::product__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT ) {</code_line>
				<code_line>    attrData.definitionURL = attributeData.definitionURL;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::product__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT;</code_line>
				<code_line>}</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::product__AttributeData::ATTRIBUTE__CLASS_PRESENT) == COLLADASaxFWL15::product__AttributeData::ATTRIBUTE__CLASS_PRESENT ) {</code_line>
				<code_line>    attrData._class = attributeData._class;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::product__AttributeData::ATTRIBUTE__CLASS_PRESENT;</code_line>
				<code_line>}</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::product__AttributeData::ATTRIBUTE_HREF_PRESENT) == COLLADASaxFWL15::product__AttributeData::ATTRIBUTE_HREF_PRESENT ) {</code_line>
				<code_line>    attrData.href = attributeData.href;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::product__AttributeData::ATTRIBUTE_HREF_PRESENT;</code_line>
				<code_line>}</code_line>
			</specific>
		</method>

		<method name="end__product">
			<specific version="15" name="end__product"></specific>
		</method>

		<method name="begin__exponentiale">
			<parameter type="COLLADASaxFWL::exponentiale__AttributeData" name="attrData" />
			<specific version="15" name="begin__exponentiale">
				<parameter type="const COLLADASaxFWL15::exponentiale__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::exponentiale__AttributeData attrData;</code_line>
				<code_line>attrData.style = attributeData.style;</code_line>
				<code_line>attrData.xref = attributeData.xref;</code_line>
				<code_line>attrData.id = attributeData.id;</code_line>
				<code_line>attrData.encoding = attributeData.encoding;</code_line>
				<code_line>attrData.unknownAttributes = attributeData.unknownAttributes;</code_line>
				<code_line>attrData.present_attributes = 0;</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::exponentiale__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT) == COLLADASaxFWL15::exponentiale__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT ) {</code_line>
				<code_line>    attrData.definitionURL = attributeData.definitionURL;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::exponentiale__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT;</code_line>
				<code_line>}</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::exponentiale__AttributeData::ATTRIBUTE__CLASS_PRESENT) == COLLADASaxFWL15::exponentiale__AttributeData::ATTRIBUTE__CLASS_PRESENT ) {</code_line>
				<code_line>    attrData._class = attributeData._class;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::exponentiale__AttributeData::ATTRIBUTE__CLASS_PRESENT;</code_line>
				<code_line>}</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::exponentiale__AttributeData::ATTRIBUTE_HREF_PRESENT) == COLLADASaxFWL15::exponentiale__AttributeData::ATTRIBUTE_HREF_PRESENT ) {</code_line>
				<code_line>    attrData.href = attributeData.href;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::exponentiale__AttributeData::ATTRIBUTE_HREF_PRESENT;</code_line>
				<code_line>}</code_line>
			</specific>
		</method>

		<method name="end__exponentiale">
			<specific version="15" name="end__exponentiale"></specific>
		</method>

		<method name="begin__pi">
			<parameter type="COLLADASaxFWL::pi__AttributeData" name="attrData" />
			<specific version="15" name="begin__pi">
				<parameter type="const COLLADASaxFWL15::pi__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::pi__AttributeData attrData;</code_line>
				<code_line>attrData.style = attributeData.style;</code_line>
				<code_line>attrData.xref = attributeData.xref;</code_line>
				<code_line>attrData.id = attributeData.id;</code_line>
				<code_line>attrData.encoding = attributeData.encoding;</code_line>
				<code_line>attrData.unknownAttributes = attributeData.unknownAttributes;</code_line>
				<code_line>attrData.present_attributes = 0;</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::pi__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT) == COLLADASaxFWL15::pi__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT ) {</code_line>
				<code_line>    attrData.definitionURL = attributeData.definitionURL;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::pi__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT;</code_line>
				<code_line>}</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::pi__AttributeData::ATTRIBUTE__CLASS_PRESENT) == COLLADASaxFWL15::pi__AttributeData::ATTRIBUTE__CLASS_PRESENT ) {</code_line>
				<code_line>    attrData._class = attributeData._class;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::pi__AttributeData::ATTRIBUTE__CLASS_PRESENT;</code_line>
				<code_line>}</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::pi__AttributeData::ATTRIBUTE_HREF_PRESENT) == COLLADASaxFWL15::pi__AttributeData::ATTRIBUTE_HREF_PRESENT ) {</code_line>
				<code_line>    attrData.href = attributeData.href;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::pi__AttributeData::ATTRIBUTE_HREF_PRESENT;</code_line>
				<code_line>}</code_line>
			</specific>
		</method>

		<method name="end__pi">
			<specific version="15" name="end__pi"></specific>
		</method>

		<method name="begin__true">
			<parameter type="COLLADASaxFWL::true__AttributeData" name="attrData" />
			<specific version="15" name="begin__true">
				<parameter type="const COLLADASaxFWL15::true__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::true__AttributeData attrData;</code_line>
				<code_line>attrData.style = attributeData.style;</code_line>
				<code_line>attrData.xref = attributeData.xref;</code_line>
				<code_line>attrData.id = attributeData.id;</code_line>
				<code_line>attrData.encoding = attributeData.encoding;</code_line>
				<code_line>attrData.unknownAttributes = attributeData.unknownAttributes;</code_line>
				<code_line>attrData.present_attributes = 0;</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::true__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT) == COLLADASaxFWL15::true__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT ) {</code_line>
				<code_line>    attrData.definitionURL = attributeData.definitionURL;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::true__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT;</code_line>
				<code_line>}</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::true__AttributeData::ATTRIBUTE__CLASS_PRESENT) == COLLADASaxFWL15::true__AttributeData::ATTRIBUTE__CLASS_PRESENT ) {</code_line>
				<code_line>    attrData._class = attributeData._class;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::true__AttributeData::ATTRIBUTE__CLASS_PRESENT;</code_line>
				<code_line>}</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::true__AttributeData::ATTRIBUTE_HREF_PRESENT) == COLLADASaxFWL15::true__AttributeData::ATTRIBUTE_HREF_PRESENT ) {</code_line>
				<code_line>    attrData.href = attributeData.href;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::true__AttributeData::ATTRIBUTE_HREF_PRESENT;</code_line>
				<code_line>}</code_line>
			</specific>
		</method>

		<method name="end__true">
			<specific version="15" name="end__true"></specific>
		</method>

		<method name="begin__false">
			<parameter type="COLLADASaxFWL::false__AttributeData" name="attrData" />
			<specific version="15" name="begin__false">
				<parameter type="const COLLADASaxFWL15::false__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::false__AttributeData attrData;</code_line>
				<code_line>attrData.style = attributeData.style;</code_line>
				<code_line>attrData.xref = attributeData.xref;</code_line>
				<code_line>attrData.id = attributeData.id;</code_line>
				<code_line>attrData.encoding = attributeData.encoding;</code_line>
				<code_line>attrData.unknownAttributes = attributeData.unknownAttributes;</code_line>
				<code_line>attrData.present_attributes = 0;</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::false__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT) == COLLADASaxFWL15::false__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT ) {</code_line>
				<code_line>    attrData.definitionURL = attributeData.definitionURL;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::false__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT;</code_line>
				<code_line>}</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::false__AttributeData::ATTRIBUTE__CLASS_PRESENT) == COLLADASaxFWL15::false__AttributeData::ATTRIBUTE__CLASS_PRESENT ) {</code_line>
				<code_line>    attrData._class = attributeData._class;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::false__AttributeData::ATTRIBUTE__CLASS_PRESENT;</code_line>
				<code_line>}</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::false__AttributeData::ATTRIBUTE_HREF_PRESENT) == COLLADASaxFWL15::false__AttributeData::ATTRIBUTE_HREF_PRESENT ) {</code_line>
				<code_line>    attrData.href = attributeData.href;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::false__AttributeData::ATTRIBUTE_HREF_PRESENT;</code_line>
				<code_line>}</code_line>
			</specific>
		</method>

		<method name="end__false">
			<specific version="15" name="end__false"></specific>
		</method>

		<method name="begin__and">
			<parameter type="COLLADASaxFWL::and__AttributeData" name="attrData" />
			<specific version="15" name="begin__and">
				<parameter type="const COLLADASaxFWL15::and__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::and__AttributeData attrData;</code_line>
				<code_line>attrData.style = attributeData.style;</code_line>
				<code_line>attrData.xref = attributeData.xref;</code_line>
				<code_line>attrData.id = attributeData.id;</code_line>
				<code_line>attrData.encoding = attributeData.encoding;</code_line>
				<code_line>attrData.unknownAttributes = attributeData.unknownAttributes;</code_line>
				<code_line>attrData.present_attributes = 0;</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::and__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT) == COLLADASaxFWL15::and__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT ) {</code_line>
				<code_line>    attrData.definitionURL = attributeData.definitionURL;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::and__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT;</code_line>
				<code_line>}</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::and__AttributeData::ATTRIBUTE__CLASS_PRESENT) == COLLADASaxFWL15::and__AttributeData::ATTRIBUTE__CLASS_PRESENT ) {</code_line>
				<code_line>    attrData._class = attributeData._class;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::and__AttributeData::ATTRIBUTE__CLASS_PRESENT;</code_line>
				<code_line>}</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::and__AttributeData::ATTRIBUTE_HREF_PRESENT) == COLLADASaxFWL15::and__AttributeData::ATTRIBUTE_HREF_PRESENT ) {</code_line>
				<code_line>    attrData.href = attributeData.href;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::and__AttributeData::ATTRIBUTE_HREF_PRESENT;</code_line>
				<code_line>}</code_line>
			</specific>
		</method>

		<method name="end__and">
			<specific version="15" name="end__and"></specific>
		</method>

		<method name="begin__or">
			<parameter type="COLLADASaxFWL::or__AttributeData" name="attrData" />
			<specific version="15" name="begin__or">
				<parameter type="const COLLADASaxFWL15::or__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::or__AttributeData attrData;</code_line>
				<code_line>attrData.style = attributeData.style;</code_line>
				<code_line>attrData.xref = attributeData.xref;</code_line>
				<code_line>attrData.id = attributeData.id;</code_line>
				<code_line>attrData.encoding = attributeData.encoding;</code_line>
				<code_line>attrData.unknownAttributes = attributeData.unknownAttributes;</code_line>
				<code_line>attrData.present_attributes = 0;</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::or__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT) == COLLADASaxFWL15::or__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT ) {</code_line>
				<code_line>    attrData.definitionURL = attributeData.definitionURL;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::or__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT;</code_line>
				<code_line>}</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::or__AttributeData::ATTRIBUTE__CLASS_PRESENT) == COLLADASaxFWL15::or__AttributeData::ATTRIBUTE__CLASS_PRESENT ) {</code_line>
				<code_line>    attrData._class = attributeData._class;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::or__AttributeData::ATTRIBUTE__CLASS_PRESENT;</code_line>
				<code_line>}</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::or__AttributeData::ATTRIBUTE_HREF_PRESENT) == COLLADASaxFWL15::or__AttributeData::ATTRIBUTE_HREF_PRESENT ) {</code_line>
				<code_line>    attrData.href = attributeData.href;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::or__AttributeData::ATTRIBUTE_HREF_PRESENT;</code_line>
				<code_line>}</code_line>
			</specific>
		</method>

		<method name="end__or">
			<specific version="15" name="end__or"></specific>
		</method>

		<method name="begin__xor">
			<parameter type="COLLADASaxFWL::xor__AttributeData" name="attrData" />
			<specific version="15" name="begin__xor">
				<parameter type="const COLLADASaxFWL15::xor__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::xor__AttributeData attrData;</code_line>
				<code_line>attrData.style = attributeData.style;</code_line>
				<code_line>attrData.xref = attributeData.xref;</code_line>
				<code_line>attrData.id = attributeData.id;</code_line>
				<code_line>attrData.encoding = attributeData.encoding;</code_line>
				<code_line>attrData.unknownAttributes = attributeData.unknownAttributes;</code_line>
				<code_line>attrData.present_attributes = 0;</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::xor__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT) == COLLADASaxFWL15::xor__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT ) {</code_line>
				<code_line>    attrData.definitionURL = attributeData.definitionURL;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::xor__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT;</code_line>
				<code_line>}</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::xor__AttributeData::ATTRIBUTE__CLASS_PRESENT) == COLLADASaxFWL15::xor__AttributeData::ATTRIBUTE__CLASS_PRESENT ) {</code_line>
				<code_line>    attrData._class = attributeData._class;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::xor__AttributeData::ATTRIBUTE__CLASS_PRESENT;</code_line>
				<code_line>}</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::xor__AttributeData::ATTRIBUTE_HREF_PRESENT) == COLLADASaxFWL15::xor__AttributeData::ATTRIBUTE_HREF_PRESENT ) {</code_line>
				<code_line>    attrData.href = attributeData.href;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::xor__AttributeData::ATTRIBUTE_HREF_PRESENT;</code_line>
				<code_line>}</code_line>
			</specific>
		</method>

		<method name="end__xor">
			<specific version="15" name="end__xor"></specific>
		</method>

		<method name="begin__not">
			<parameter type="COLLADASaxFWL::not__AttributeData" name="attrData" />
			<specific version="15" name="begin__not">
				<parameter type="const COLLADASaxFWL15::not__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::not__AttributeData attrData;</code_line>
				<code_line>attrData.style = attributeData.style;</code_line>
				<code_line>attrData.xref = attributeData.xref;</code_line>
				<code_line>attrData.id = attributeData.id;</code_line>
				<code_line>attrData.encoding = attributeData.encoding;</code_line>
				<code_line>attrData.unknownAttributes = attributeData.unknownAttributes;</code_line>
				<code_line>attrData.present_attributes = 0;</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::not__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT) == COLLADASaxFWL15::not__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT ) {</code_line>
				<code_line>    attrData.definitionURL = attributeData.definitionURL;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::not__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT;</code_line>
				<code_line>}</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::not__AttributeData::ATTRIBUTE__CLASS_PRESENT) == COLLADASaxFWL15::not__AttributeData::ATTRIBUTE__CLASS_PRESENT ) {</code_line>
				<code_line>    attrData._class = attributeData._class;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::not__AttributeData::ATTRIBUTE__CLASS_PRESENT;</code_line>
				<code_line>}</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::not__AttributeData::ATTRIBUTE_HREF_PRESENT) == COLLADASaxFWL15::not__AttributeData::ATTRIBUTE_HREF_PRESENT ) {</code_line>
				<code_line>    attrData.href = attributeData.href;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::not__AttributeData::ATTRIBUTE_HREF_PRESENT;</code_line>
				<code_line>}</code_line>
			</specific>
		</method>

		<method name="end__not">
			<specific version="15" name="end__not"></specific>
		</method>

		<method name="begin__eq">
			<parameter type="COLLADASaxFWL::eq__AttributeData" name="attrData" />
			<specific version="15" name="begin__eq">
				<parameter type="const COLLADASaxFWL15::eq__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::eq__AttributeData attrData;</code_line>
				<code_line>attrData.style = attributeData.style;</code_line>
				<code_line>attrData.xref = attributeData.xref;</code_line>
				<code_line>attrData.id = attributeData.id;</code_line>
				<code_line>attrData.encoding = attributeData.encoding;</code_line>
				<code_line>attrData.unknownAttributes = attributeData.unknownAttributes;</code_line>
				<code_line>attrData.present_attributes = 0;</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::eq__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT) == COLLADASaxFWL15::eq__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT ) {</code_line>
				<code_line>    attrData.definitionURL = attributeData.definitionURL;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::eq__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT;</code_line>
				<code_line>}</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::eq__AttributeData::ATTRIBUTE__CLASS_PRESENT) == COLLADASaxFWL15::eq__AttributeData::ATTRIBUTE__CLASS_PRESENT ) {</code_line>
				<code_line>    attrData._class = attributeData._class;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::eq__AttributeData::ATTRIBUTE__CLASS_PRESENT;</code_line>
				<code_line>}</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::eq__AttributeData::ATTRIBUTE_HREF_PRESENT) == COLLADASaxFWL15::eq__AttributeData::ATTRIBUTE_HREF_PRESENT ) {</code_line>
				<code_line>    attrData.href = attributeData.href;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::eq__AttributeData::ATTRIBUTE_HREF_PRESENT;</code_line>
				<code_line>}</code_line>
			</specific>
		</method>

		<method name="end__eq">
			<specific version="15" name="end__eq"></specific>
		</method>

		<method name="begin__neq">
			<parameter type="COLLADASaxFWL::neq__AttributeData" name="attrData" />
			<specific version="15" name="begin__neq">
				<parameter type="const COLLADASaxFWL15::neq__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::neq__AttributeData attrData;</code_line>
				<code_line>attrData.style = attributeData.style;</code_line>
				<code_line>attrData.xref = attributeData.xref;</code_line>
				<code_line>attrData.id = attributeData.id;</code_line>
				<code_line>attrData.encoding = attributeData.encoding;</code_line>
				<code_line>attrData.unknownAttributes = attributeData.unknownAttributes;</code_line>
				<code_line>attrData.present_attributes = 0;</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::neq__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT) == COLLADASaxFWL15::neq__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT ) {</code_line>
				<code_line>    attrData.definitionURL = attributeData.definitionURL;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::neq__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT;</code_line>
				<code_line>}</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::neq__AttributeData::ATTRIBUTE__CLASS_PRESENT) == COLLADASaxFWL15::neq__AttributeData::ATTRIBUTE__CLASS_PRESENT ) {</code_line>
				<code_line>    attrData._class = attributeData._class;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::neq__AttributeData::ATTRIBUTE__CLASS_PRESENT;</code_line>
				<code_line>}</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::neq__AttributeData::ATTRIBUTE_HREF_PRESENT) == COLLADASaxFWL15::neq__AttributeData::ATTRIBUTE_HREF_PRESENT ) {</code_line>
				<code_line>    attrData.href = attributeData.href;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::neq__AttributeData::ATTRIBUTE_HREF_PRESENT;</code_line>
				<code_line>}</code_line>
			</specific>
		</method>

		<method name="end__neq">
			<specific version="15" name="end__neq"></specific>
		</method>

		<method name="begin__leq">
			<parameter type="COLLADASaxFWL::leq__AttributeData" name="attrData" />
			<specific version="15" name="begin__leq">
				<parameter type="const COLLADASaxFWL15::leq__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::leq__AttributeData attrData;</code_line>
				<code_line>attrData.style = attributeData.style;</code_line>
				<code_line>attrData.xref = attributeData.xref;</code_line>
				<code_line>attrData.id = attributeData.id;</code_line>
				<code_line>attrData.encoding = attributeData.encoding;</code_line>
				<code_line>attrData.unknownAttributes = attributeData.unknownAttributes;</code_line>
				<code_line>attrData.present_attributes = 0;</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::leq__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT) == COLLADASaxFWL15::leq__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT ) {</code_line>
				<code_line>    attrData.definitionURL = attributeData.definitionURL;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::leq__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT;</code_line>
				<code_line>}</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::leq__AttributeData::ATTRIBUTE__CLASS_PRESENT) == COLLADASaxFWL15::leq__AttributeData::ATTRIBUTE__CLASS_PRESENT ) {</code_line>
				<code_line>    attrData._class = attributeData._class;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::leq__AttributeData::ATTRIBUTE__CLASS_PRESENT;</code_line>
				<code_line>}</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::leq__AttributeData::ATTRIBUTE_HREF_PRESENT) == COLLADASaxFWL15::leq__AttributeData::ATTRIBUTE_HREF_PRESENT ) {</code_line>
				<code_line>    attrData.href = attributeData.href;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::leq__AttributeData::ATTRIBUTE_HREF_PRESENT;</code_line>
				<code_line>}</code_line>
			</specific>
		</method>

		<method name="end__leq">
			<specific version="15" name="end__leq"></specific>
		</method>

		<method name="begin__lt">
			<parameter type="COLLADASaxFWL::lt__AttributeData" name="attrData" />
			<specific version="15" name="begin__lt">
				<parameter type="const COLLADASaxFWL15::lt__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::lt__AttributeData attrData;</code_line>
				<code_line>attrData.style = attributeData.style;</code_line>
				<code_line>attrData.xref = attributeData.xref;</code_line>
				<code_line>attrData.id = attributeData.id;</code_line>
				<code_line>attrData.encoding = attributeData.encoding;</code_line>
				<code_line>attrData.unknownAttributes = attributeData.unknownAttributes;</code_line>
				<code_line>attrData.present_attributes = 0;</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::lt__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT) == COLLADASaxFWL15::lt__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT ) {</code_line>
				<code_line>    attrData.definitionURL = attributeData.definitionURL;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::lt__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT;</code_line>
				<code_line>}</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::lt__AttributeData::ATTRIBUTE__CLASS_PRESENT) == COLLADASaxFWL15::lt__AttributeData::ATTRIBUTE__CLASS_PRESENT ) {</code_line>
				<code_line>    attrData._class = attributeData._class;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::lt__AttributeData::ATTRIBUTE__CLASS_PRESENT;</code_line>
				<code_line>}</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::lt__AttributeData::ATTRIBUTE_HREF_PRESENT) == COLLADASaxFWL15::lt__AttributeData::ATTRIBUTE_HREF_PRESENT ) {</code_line>
				<code_line>    attrData.href = attributeData.href;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::lt__AttributeData::ATTRIBUTE_HREF_PRESENT;</code_line>
				<code_line>}</code_line>
			</specific>
		</method>

		<method name="end__lt">
			<specific version="15" name="end__lt"></specific>
		</method>

		<method name="begin__geq">
			<parameter type="COLLADASaxFWL::geq__AttributeData" name="attrData" />
			<specific version="15" name="begin__geq">
				<parameter type="const COLLADASaxFWL15::geq__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::geq__AttributeData attrData;</code_line>
				<code_line>attrData.style = attributeData.style;</code_line>
				<code_line>attrData.xref = attributeData.xref;</code_line>
				<code_line>attrData.id = attributeData.id;</code_line>
				<code_line>attrData.encoding = attributeData.encoding;</code_line>
				<code_line>attrData.unknownAttributes = attributeData.unknownAttributes;</code_line>
				<code_line>attrData.present_attributes = 0;</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::geq__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT) == COLLADASaxFWL15::geq__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT ) {</code_line>
				<code_line>    attrData.definitionURL = attributeData.definitionURL;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::geq__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT;</code_line>
				<code_line>}</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::geq__AttributeData::ATTRIBUTE__CLASS_PRESENT) == COLLADASaxFWL15::geq__AttributeData::ATTRIBUTE__CLASS_PRESENT ) {</code_line>
				<code_line>    attrData._class = attributeData._class;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::geq__AttributeData::ATTRIBUTE__CLASS_PRESENT;</code_line>
				<code_line>}</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::geq__AttributeData::ATTRIBUTE_HREF_PRESENT) == COLLADASaxFWL15::geq__AttributeData::ATTRIBUTE_HREF_PRESENT ) {</code_line>
				<code_line>    attrData.href = attributeData.href;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::geq__AttributeData::ATTRIBUTE_HREF_PRESENT;</code_line>
				<code_line>}</code_line>
			</specific>
		</method>

		<method name="end__geq">
			<specific version="15" name="end__geq"></specific>
		</method>

		<method name="begin__gt">
			<parameter type="COLLADASaxFWL::gt__AttributeData" name="attrData" />
			<specific version="15" name="begin__gt">
				<parameter type="const COLLADASaxFWL15::gt__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::gt__AttributeData attrData;</code_line>
				<code_line>attrData.style = attributeData.style;</code_line>
				<code_line>attrData.xref = attributeData.xref;</code_line>
				<code_line>attrData.id = attributeData.id;</code_line>
				<code_line>attrData.encoding = attributeData.encoding;</code_line>
				<code_line>attrData.unknownAttributes = attributeData.unknownAttributes;</code_line>
				<code_line>attrData.present_attributes = 0;</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::gt__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT) == COLLADASaxFWL15::gt__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT ) {</code_line>
				<code_line>    attrData.definitionURL = attributeData.definitionURL;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::gt__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT;</code_line>
				<code_line>}</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::gt__AttributeData::ATTRIBUTE__CLASS_PRESENT) == COLLADASaxFWL15::gt__AttributeData::ATTRIBUTE__CLASS_PRESENT ) {</code_line>
				<code_line>    attrData._class = attributeData._class;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::gt__AttributeData::ATTRIBUTE__CLASS_PRESENT;</code_line>
				<code_line>}</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::gt__AttributeData::ATTRIBUTE_HREF_PRESENT) == COLLADASaxFWL15::gt__AttributeData::ATTRIBUTE_HREF_PRESENT ) {</code_line>
				<code_line>    attrData.href = attributeData.href;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::gt__AttributeData::ATTRIBUTE_HREF_PRESENT;</code_line>
				<code_line>}</code_line>
			</specific>
		</method>

		<method name="end__gt">
			<specific version="15" name="end__gt"></specific>
		</method>

		<method name="begin__equivalent">
			<parameter type="COLLADASaxFWL::equivalent__AttributeData" name="attrData" />
			<specific version="15" name="begin__equivalent">
				<parameter type="const COLLADASaxFWL15::equivalent__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::equivalent__AttributeData attrData;</code_line>
				<code_line>attrData.style = attributeData.style;</code_line>
				<code_line>attrData.xref = attributeData.xref;</code_line>
				<code_line>attrData.id = attributeData.id;</code_line>
				<code_line>attrData.encoding = attributeData.encoding;</code_line>
				<code_line>attrData.unknownAttributes = attributeData.unknownAttributes;</code_line>
				<code_line>attrData.present_attributes = 0;</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::equivalent__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT) == COLLADASaxFWL15::equivalent__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT ) {</code_line>
				<code_line>    attrData.definitionURL = attributeData.definitionURL;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::equivalent__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT;</code_line>
				<code_line>}</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::equivalent__AttributeData::ATTRIBUTE__CLASS_PRESENT) == COLLADASaxFWL15::equivalent__AttributeData::ATTRIBUTE__CLASS_PRESENT ) {</code_line>
				<code_line>    attrData._class = attributeData._class;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::equivalent__AttributeData::ATTRIBUTE__CLASS_PRESENT;</code_line>
				<code_line>}</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::equivalent__AttributeData::ATTRIBUTE_HREF_PRESENT) == COLLADASaxFWL15::equivalent__AttributeData::ATTRIBUTE_HREF_PRESENT ) {</code_line>
				<code_line>    attrData.href = attributeData.href;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::equivalent__AttributeData::ATTRIBUTE_HREF_PRESENT;</code_line>
				<code_line>}</code_line>
			</specific>
		</method>

		<method name="end__equivalent">
			<specific version="15" name="end__equivalent"></specific>
		</method>

		<method name="begin__power">
			<parameter type="COLLADASaxFWL::power__AttributeData" name="attrData" />
			<specific version="15" name="begin__power">
				<parameter type="const COLLADASaxFWL15::power__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::power__AttributeData attrData;</code_line>
				<code_line>attrData.style = attributeData.style;</code_line>
				<code_line>attrData.xref = attributeData.xref;</code_line>
				<code_line>attrData.id = attributeData.id;</code_line>
				<code_line>attrData.encoding = attributeData.encoding;</code_line>
				<code_line>attrData.unknownAttributes = attributeData.unknownAttributes;</code_line>
				<code_line>attrData.present_attributes = 0;</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::power__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT) == COLLADASaxFWL15::power__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT ) {</code_line>
				<code_line>    attrData.definitionURL = attributeData.definitionURL;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::power__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT;</code_line>
				<code_line>}</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::power__AttributeData::ATTRIBUTE__CLASS_PRESENT) == COLLADASaxFWL15::power__AttributeData::ATTRIBUTE__CLASS_PRESENT ) {</code_line>
				<code_line>    attrData._class = attributeData._class;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::power__AttributeData::ATTRIBUTE__CLASS_PRESENT;</code_line>
				<code_line>}</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::power__AttributeData::ATTRIBUTE_HREF_PRESENT) == COLLADASaxFWL15::power__AttributeData::ATTRIBUTE_HREF_PRESENT ) {</code_line>
				<code_line>    attrData.href = attributeData.href;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::power__AttributeData::ATTRIBUTE_HREF_PRESENT;</code_line>
				<code_line>}</code_line>
			</specific>
		</method>

		<method name="end__power">
			<specific version="15" name="end__power"></specific>
		</method>

		<method name="begin__factorial">
			<parameter type="COLLADASaxFWL::factorial__AttributeData" name="attrData" />
			<specific version="15" name="begin__factorial">
				<parameter type="const COLLADASaxFWL15::factorial__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::factorial__AttributeData attrData;</code_line>
				<code_line>attrData.style = attributeData.style;</code_line>
				<code_line>attrData.xref = attributeData.xref;</code_line>
				<code_line>attrData.id = attributeData.id;</code_line>
				<code_line>attrData.encoding = attributeData.encoding;</code_line>
				<code_line>attrData.unknownAttributes = attributeData.unknownAttributes;</code_line>
				<code_line>attrData.present_attributes = 0;</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::factorial__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT) == COLLADASaxFWL15::factorial__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT ) {</code_line>
				<code_line>    attrData.definitionURL = attributeData.definitionURL;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::factorial__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT;</code_line>
				<code_line>}</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::factorial__AttributeData::ATTRIBUTE__CLASS_PRESENT) == COLLADASaxFWL15::factorial__AttributeData::ATTRIBUTE__CLASS_PRESENT ) {</code_line>
				<code_line>    attrData._class = attributeData._class;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::factorial__AttributeData::ATTRIBUTE__CLASS_PRESENT;</code_line>
				<code_line>}</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::factorial__AttributeData::ATTRIBUTE_HREF_PRESENT) == COLLADASaxFWL15::factorial__AttributeData::ATTRIBUTE_HREF_PRESENT ) {</code_line>
				<code_line>    attrData.href = attributeData.href;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::factorial__AttributeData::ATTRIBUTE_HREF_PRESENT;</code_line>
				<code_line>}</code_line>
			</specific>
		</method>

		<method name="end__factorial">
			<specific version="15" name="end__factorial"></specific>
		</method>

		<method name="begin__abs">
			<parameter type="COLLADASaxFWL::abs__AttributeData" name="attrData" />
			<specific version="15" name="begin__abs">
				<parameter type="const COLLADASaxFWL15::abs__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::abs__AttributeData attrData;</code_line>
				<code_line>attrData.style = attributeData.style;</code_line>
				<code_line>attrData.xref = attributeData.xref;</code_line>
				<code_line>attrData.id = attributeData.id;</code_line>
				<code_line>attrData.encoding = attributeData.encoding;</code_line>
				<code_line>attrData.unknownAttributes = attributeData.unknownAttributes;</code_line>
				<code_line>attrData.present_attributes = 0;</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::abs__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT) == COLLADASaxFWL15::abs__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT ) {</code_line>
				<code_line>    attrData.definitionURL = attributeData.definitionURL;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::abs__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT;</code_line>
				<code_line>}</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::abs__AttributeData::ATTRIBUTE__CLASS_PRESENT) == COLLADASaxFWL15::abs__AttributeData::ATTRIBUTE__CLASS_PRESENT ) {</code_line>
				<code_line>    attrData._class = attributeData._class;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::abs__AttributeData::ATTRIBUTE__CLASS_PRESENT;</code_line>
				<code_line>}</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::abs__AttributeData::ATTRIBUTE_HREF_PRESENT) == COLLADASaxFWL15::abs__AttributeData::ATTRIBUTE_HREF_PRESENT ) {</code_line>
				<code_line>    attrData.href = attributeData.href;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::abs__AttributeData::ATTRIBUTE_HREF_PRESENT;</code_line>
				<code_line>}</code_line>
			</specific>
		</method>

		<method name="end__abs">
			<specific version="15" name="end__abs"></specific>
		</method>

		<method name="begin__exp">
			<parameter type="COLLADASaxFWL::exp__AttributeData" name="attrData" />
			<specific version="15" name="begin__exp">
				<parameter type="const COLLADASaxFWL15::exp__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::exp__AttributeData attrData;</code_line>
				<code_line>attrData.style = attributeData.style;</code_line>
				<code_line>attrData.xref = attributeData.xref;</code_line>
				<code_line>attrData.id = attributeData.id;</code_line>
				<code_line>attrData.encoding = attributeData.encoding;</code_line>
				<code_line>attrData.unknownAttributes = attributeData.unknownAttributes;</code_line>
				<code_line>attrData.present_attributes = 0;</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::exp__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT) == COLLADASaxFWL15::exp__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT ) {</code_line>
				<code_line>    attrData.definitionURL = attributeData.definitionURL;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::exp__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT;</code_line>
				<code_line>}</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::exp__AttributeData::ATTRIBUTE__CLASS_PRESENT) == COLLADASaxFWL15::exp__AttributeData::ATTRIBUTE__CLASS_PRESENT ) {</code_line>
				<code_line>    attrData._class = attributeData._class;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::exp__AttributeData::ATTRIBUTE__CLASS_PRESENT;</code_line>
				<code_line>}</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::exp__AttributeData::ATTRIBUTE_HREF_PRESENT) == COLLADASaxFWL15::exp__AttributeData::ATTRIBUTE_HREF_PRESENT ) {</code_line>
				<code_line>    attrData.href = attributeData.href;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::exp__AttributeData::ATTRIBUTE_HREF_PRESENT;</code_line>
				<code_line>}</code_line>
			</specific>
		</method>

		<method name="end__exp">
			<specific version="15" name="end__exp"></specific>
		</method>

		<method name="begin__ln">
			<parameter type="COLLADASaxFWL::ln__AttributeData" name="attrData" />
			<specific version="15" name="begin__ln">
				<parameter type="const COLLADASaxFWL15::ln__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::ln__AttributeData attrData;</code_line>
				<code_line>attrData.style = attributeData.style;</code_line>
				<code_line>attrData.xref = attributeData.xref;</code_line>
				<code_line>attrData.id = attributeData.id;</code_line>
				<code_line>attrData.encoding = attributeData.encoding;</code_line>
				<code_line>attrData.unknownAttributes = attributeData.unknownAttributes;</code_line>
				<code_line>attrData.present_attributes = 0;</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::ln__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT) == COLLADASaxFWL15::ln__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT ) {</code_line>
				<code_line>    attrData.definitionURL = attributeData.definitionURL;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::ln__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT;</code_line>
				<code_line>}</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::ln__AttributeData::ATTRIBUTE__CLASS_PRESENT) == COLLADASaxFWL15::ln__AttributeData::ATTRIBUTE__CLASS_PRESENT ) {</code_line>
				<code_line>    attrData._class = attributeData._class;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::ln__AttributeData::ATTRIBUTE__CLASS_PRESENT;</code_line>
				<code_line>}</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::ln__AttributeData::ATTRIBUTE_HREF_PRESENT) == COLLADASaxFWL15::ln__AttributeData::ATTRIBUTE_HREF_PRESENT ) {</code_line>
				<code_line>    attrData.href = attributeData.href;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::ln__AttributeData::ATTRIBUTE_HREF_PRESENT;</code_line>
				<code_line>}</code_line>
			</specific>
		</method>

		<method name="end__ln">
			<specific version="15" name="end__ln"></specific>
		</method>

		<method name="begin__min">
			<parameter type="COLLADASaxFWL::min__AttributeData" name="attrData" />
			<specific version="15" name="begin__min____Arith_type">
				<parameter type="const COLLADASaxFWL15::min____Arith_type__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::min__AttributeData attrData;</code_line>
				<code_line>attrData.style = attributeData.style;</code_line>
				<code_line>attrData.xref = attributeData.xref;</code_line>
				<code_line>attrData.id = attributeData.id;</code_line>
				<code_line>attrData.encoding = attributeData.encoding;</code_line>
				<code_line>attrData.unknownAttributes = attributeData.unknownAttributes;</code_line>
				<code_line>attrData.present_attributes = 0;</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::min____Arith_type__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT) == COLLADASaxFWL15::min____Arith_type__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT ) {</code_line>
				<code_line>    attrData.definitionURL = attributeData.definitionURL;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::min__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT;</code_line>
				<code_line>}</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::min____Arith_type__AttributeData::ATTRIBUTE__CLASS_PRESENT) == COLLADASaxFWL15::min____Arith_type__AttributeData::ATTRIBUTE__CLASS_PRESENT ) {</code_line>
				<code_line>    attrData._class = attributeData._class;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::min__AttributeData::ATTRIBUTE__CLASS_PRESENT;</code_line>
				<code_line>}</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::min____Arith_type__AttributeData::ATTRIBUTE_HREF_PRESENT) == COLLADASaxFWL15::min____Arith_type__AttributeData::ATTRIBUTE_HREF_PRESENT ) {</code_line>
				<code_line>    attrData.href = attributeData.href;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::min__AttributeData::ATTRIBUTE_HREF_PRESENT;</code_line>
				<code_line>}</code_line>
			</specific>
		</method>

		<method name="end__min">
			<specific version="15" name="end__min____Arith_type"></specific>
		</method>

		<method name="begin__max">
			<parameter type="COLLADASaxFWL::max__AttributeData" name="attrData" />
			<specific version="15" name="begin__max____Arith_type">
				<parameter type="const COLLADASaxFWL15::max____Arith_type__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::max__AttributeData attrData;</code_line>
				<code_line>attrData.style = attributeData.style;</code_line>
				<code_line>attrData.xref = attributeData.xref;</code_line>
				<code_line>attrData.id = attributeData.id;</code_line>
				<code_line>attrData.encoding = attributeData.encoding;</code_line>
				<code_line>attrData.unknownAttributes = attributeData.unknownAttributes;</code_line>
				<code_line>attrData.present_attributes = 0;</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::max____Arith_type__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT) == COLLADASaxFWL15::max____Arith_type__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT ) {</code_line>
				<code_line>    attrData.definitionURL = attributeData.definitionURL;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::max__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT;</code_line>
				<code_line>}</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::max____Arith_type__AttributeData::ATTRIBUTE__CLASS_PRESENT) == COLLADASaxFWL15::max____Arith_type__AttributeData::ATTRIBUTE__CLASS_PRESENT ) {</code_line>
				<code_line>    attrData._class = attributeData._class;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::max__AttributeData::ATTRIBUTE__CLASS_PRESENT;</code_line>
				<code_line>}</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::max____Arith_type__AttributeData::ATTRIBUTE_HREF_PRESENT) == COLLADASaxFWL15::max____Arith_type__AttributeData::ATTRIBUTE_HREF_PRESENT ) {</code_line>
				<code_line>    attrData.href = attributeData.href;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::max__AttributeData::ATTRIBUTE_HREF_PRESENT;</code_line>
				<code_line>}</code_line>
			</specific>
		</method>

		<method name="end__max">
			<specific version="15" name="end__max____Arith_type"></specific>
		</method>

		<method name="begin__ceiling">
			<parameter type="COLLADASaxFWL::ceiling__AttributeData" name="attrData" />
			<specific version="15" name="begin__ceiling">
				<parameter type="const COLLADASaxFWL15::ceiling__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::ceiling__AttributeData attrData;</code_line>
				<code_line>attrData.style = attributeData.style;</code_line>
				<code_line>attrData.xref = attributeData.xref;</code_line>
				<code_line>attrData.id = attributeData.id;</code_line>
				<code_line>attrData.encoding = attributeData.encoding;</code_line>
				<code_line>attrData.unknownAttributes = attributeData.unknownAttributes;</code_line>
				<code_line>attrData.present_attributes = 0;</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::ceiling__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT) == COLLADASaxFWL15::ceiling__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT ) {</code_line>
				<code_line>    attrData.definitionURL = attributeData.definitionURL;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::ceiling__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT;</code_line>
				<code_line>}</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::ceiling__AttributeData::ATTRIBUTE__CLASS_PRESENT) == COLLADASaxFWL15::ceiling__AttributeData::ATTRIBUTE__CLASS_PRESENT ) {</code_line>
				<code_line>    attrData._class = attributeData._class;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::ceiling__AttributeData::ATTRIBUTE__CLASS_PRESENT;</code_line>
				<code_line>}</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::ceiling__AttributeData::ATTRIBUTE_HREF_PRESENT) == COLLADASaxFWL15::ceiling__AttributeData::ATTRIBUTE_HREF_PRESENT ) {</code_line>
				<code_line>    attrData.href = attributeData.href;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::ceiling__AttributeData::ATTRIBUTE_HREF_PRESENT;</code_line>
				<code_line>}</code_line>
			</specific>
		</method>

		<method name="end__ceiling">
			<specific version="15" name="end__ceiling"></specific>
		</method>

		<method name="begin__floor">
			<parameter type="COLLADASaxFWL::floor__AttributeData" name="attrData" />
			<specific version="15" name="begin__floor">
				<parameter type="const COLLADASaxFWL15::floor__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::floor__AttributeData attrData;</code_line>
				<code_line>attrData.style = attributeData.style;</code_line>
				<code_line>attrData.xref = attributeData.xref;</code_line>
				<code_line>attrData.id = attributeData.id;</code_line>
				<code_line>attrData.encoding = attributeData.encoding;</code_line>
				<code_line>attrData.unknownAttributes = attributeData.unknownAttributes;</code_line>
				<code_line>attrData.present_attributes = 0;</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::floor__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT) == COLLADASaxFWL15::floor__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT ) {</code_line>
				<code_line>    attrData.definitionURL = attributeData.definitionURL;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::floor__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT;</code_line>
				<code_line>}</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::floor__AttributeData::ATTRIBUTE__CLASS_PRESENT) == COLLADASaxFWL15::floor__AttributeData::ATTRIBUTE__CLASS_PRESENT ) {</code_line>
				<code_line>    attrData._class = attributeData._class;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::floor__AttributeData::ATTRIBUTE__CLASS_PRESENT;</code_line>
				<code_line>}</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::floor__AttributeData::ATTRIBUTE_HREF_PRESENT) == COLLADASaxFWL15::floor__AttributeData::ATTRIBUTE_HREF_PRESENT ) {</code_line>
				<code_line>    attrData.href = attributeData.href;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::floor__AttributeData::ATTRIBUTE_HREF_PRESENT;</code_line>
				<code_line>}</code_line>
			</specific>
		</method>

		<method name="end__floor">
			<specific version="15" name="end__floor"></specific>
		</method>

		<method name="begin__gcd">
			<parameter type="COLLADASaxFWL::gcd__AttributeData" name="attrData" />
			<specific version="15" name="begin__gcd">
				<parameter type="const COLLADASaxFWL15::gcd__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::gcd__AttributeData attrData;</code_line>
				<code_line>attrData.style = attributeData.style;</code_line>
				<code_line>attrData.xref = attributeData.xref;</code_line>
				<code_line>attrData.id = attributeData.id;</code_line>
				<code_line>attrData.encoding = attributeData.encoding;</code_line>
				<code_line>attrData.unknownAttributes = attributeData.unknownAttributes;</code_line>
				<code_line>attrData.present_attributes = 0;</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::gcd__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT) == COLLADASaxFWL15::gcd__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT ) {</code_line>
				<code_line>    attrData.definitionURL = attributeData.definitionURL;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::gcd__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT;</code_line>
				<code_line>}</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::gcd__AttributeData::ATTRIBUTE__CLASS_PRESENT) == COLLADASaxFWL15::gcd__AttributeData::ATTRIBUTE__CLASS_PRESENT ) {</code_line>
				<code_line>    attrData._class = attributeData._class;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::gcd__AttributeData::ATTRIBUTE__CLASS_PRESENT;</code_line>
				<code_line>}</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::gcd__AttributeData::ATTRIBUTE_HREF_PRESENT) == COLLADASaxFWL15::gcd__AttributeData::ATTRIBUTE_HREF_PRESENT ) {</code_line>
				<code_line>    attrData.href = attributeData.href;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::gcd__AttributeData::ATTRIBUTE_HREF_PRESENT;</code_line>
				<code_line>}</code_line>
			</specific>
		</method>

		<method name="end__gcd">
			<specific version="15" name="end__gcd"></specific>
		</method>

		<method name="begin__lcm">
			<parameter type="COLLADASaxFWL::lcm__AttributeData" name="attrData" />
			<specific version="15" name="begin__lcm">
				<parameter type="const COLLADASaxFWL15::lcm__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::lcm__AttributeData attrData;</code_line>
				<code_line>attrData.style = attributeData.style;</code_line>
				<code_line>attrData.xref = attributeData.xref;</code_line>
				<code_line>attrData.id = attributeData.id;</code_line>
				<code_line>attrData.encoding = attributeData.encoding;</code_line>
				<code_line>attrData.unknownAttributes = attributeData.unknownAttributes;</code_line>
				<code_line>attrData.present_attributes = 0;</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::lcm__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT) == COLLADASaxFWL15::lcm__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT ) {</code_line>
				<code_line>    attrData.definitionURL = attributeData.definitionURL;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::lcm__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT;</code_line>
				<code_line>}</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::lcm__AttributeData::ATTRIBUTE__CLASS_PRESENT) == COLLADASaxFWL15::lcm__AttributeData::ATTRIBUTE__CLASS_PRESENT ) {</code_line>
				<code_line>    attrData._class = attributeData._class;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::lcm__AttributeData::ATTRIBUTE__CLASS_PRESENT;</code_line>
				<code_line>}</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::lcm__AttributeData::ATTRIBUTE_HREF_PRESENT) == COLLADASaxFWL15::lcm__AttributeData::ATTRIBUTE_HREF_PRESENT ) {</code_line>
				<code_line>    attrData.href = attributeData.href;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::lcm__AttributeData::ATTRIBUTE_HREF_PRESENT;</code_line>
				<code_line>}</code_line>
			</specific>
		</method>

		<method name="end__lcm">
			<specific version="15" name="end__lcm"></specific>
		</method>

		<method name="begin__rem">
			<parameter type="COLLADASaxFWL::rem__AttributeData" name="attrData" />
			<specific version="15" name="begin__rem">
				<parameter type="const COLLADASaxFWL15::rem__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::rem__AttributeData attrData;</code_line>
				<code_line>attrData.style = attributeData.style;</code_line>
				<code_line>attrData.xref = attributeData.xref;</code_line>
				<code_line>attrData.id = attributeData.id;</code_line>
				<code_line>attrData.encoding = attributeData.encoding;</code_line>
				<code_line>attrData.unknownAttributes = attributeData.unknownAttributes;</code_line>
				<code_line>attrData.present_attributes = 0;</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::rem__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT) == COLLADASaxFWL15::rem__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT ) {</code_line>
				<code_line>    attrData.definitionURL = attributeData.definitionURL;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::rem__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT;</code_line>
				<code_line>}</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::rem__AttributeData::ATTRIBUTE__CLASS_PRESENT) == COLLADASaxFWL15::rem__AttributeData::ATTRIBUTE__CLASS_PRESENT ) {</code_line>
				<code_line>    attrData._class = attributeData._class;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::rem__AttributeData::ATTRIBUTE__CLASS_PRESENT;</code_line>
				<code_line>}</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::rem__AttributeData::ATTRIBUTE_HREF_PRESENT) == COLLADASaxFWL15::rem__AttributeData::ATTRIBUTE_HREF_PRESENT ) {</code_line>
				<code_line>    attrData.href = attributeData.href;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::rem__AttributeData::ATTRIBUTE_HREF_PRESENT;</code_line>
				<code_line>}</code_line>
			</specific>
		</method>

		<method name="end__rem">
			<specific version="15" name="end__rem"></specific>
		</method>

		<method name="begin__root">
			<parameter type="COLLADASaxFWL::root__AttributeData" name="attrData" />
			<specific version="15" name="begin__root">
				<parameter type="const COLLADASaxFWL15::root__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::root__AttributeData attrData;</code_line>
				<code_line>attrData.style = attributeData.style;</code_line>
				<code_line>attrData.xref = attributeData.xref;</code_line>
				<code_line>attrData.id = attributeData.id;</code_line>
				<code_line>attrData.encoding = attributeData.encoding;</code_line>
				<code_line>attrData.unknownAttributes = attributeData.unknownAttributes;</code_line>
				<code_line>attrData.present_attributes = 0;</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::root__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT) == COLLADASaxFWL15::root__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT ) {</code_line>
				<code_line>    attrData.definitionURL = attributeData.definitionURL;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::root__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT;</code_line>
				<code_line>}</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::root__AttributeData::ATTRIBUTE__CLASS_PRESENT) == COLLADASaxFWL15::root__AttributeData::ATTRIBUTE__CLASS_PRESENT ) {</code_line>
				<code_line>    attrData._class = attributeData._class;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::root__AttributeData::ATTRIBUTE__CLASS_PRESENT;</code_line>
				<code_line>}</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::root__AttributeData::ATTRIBUTE_HREF_PRESENT) == COLLADASaxFWL15::root__AttributeData::ATTRIBUTE_HREF_PRESENT ) {</code_line>
				<code_line>    attrData.href = attributeData.href;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::root__AttributeData::ATTRIBUTE_HREF_PRESENT;</code_line>
				<code_line>}</code_line>
			</specific>
		</method>

		<method name="end__root">
			<specific version="15" name="end__root"></specific>
		</method>

		<method name="begin__log">
			<parameter type="COLLADASaxFWL::log__AttributeData" name="attrData" />
			<specific version="15" name="begin__log">
				<parameter type="const COLLADASaxFWL15::log__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::log__AttributeData attrData;</code_line>
				<code_line>attrData.style = attributeData.style;</code_line>
				<code_line>attrData.xref = attributeData.xref;</code_line>
				<code_line>attrData.id = attributeData.id;</code_line>
				<code_line>attrData.encoding = attributeData.encoding;</code_line>
				<code_line>attrData.unknownAttributes = attributeData.unknownAttributes;</code_line>
				<code_line>attrData.present_attributes = 0;</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::log__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT) == COLLADASaxFWL15::log__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT ) {</code_line>
				<code_line>    attrData.definitionURL = attributeData.definitionURL;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::log__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT;</code_line>
				<code_line>}</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::log__AttributeData::ATTRIBUTE__CLASS_PRESENT) == COLLADASaxFWL15::log__AttributeData::ATTRIBUTE__CLASS_PRESENT ) {</code_line>
				<code_line>    attrData._class = attributeData._class;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::log__AttributeData::ATTRIBUTE__CLASS_PRESENT;</code_line>
				<code_line>}</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::log__AttributeData::ATTRIBUTE_HREF_PRESENT) == COLLADASaxFWL15::log__AttributeData::ATTRIBUTE_HREF_PRESENT ) {</code_line>
				<code_line>    attrData.href = attributeData.href;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::log__AttributeData::ATTRIBUTE_HREF_PRESENT;</code_line>
				<code_line>}</code_line>
			</specific>
		</method>

		<method name="end__log">
			<specific version="15" name="end__log"></specific>
		</method>

		<method name="begin__logbase">
			<parameter type="COLLADASaxFWL::logbase__AttributeData" name="attrData" />
			<specific version="15" name="begin__logbase">
				<parameter type="const COLLADASaxFWL15::logbase__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::logbase__AttributeData attrData;</code_line>
				<code_line>attrData.style = attributeData.style;</code_line>
				<code_line>attrData.xref = attributeData.xref;</code_line>
				<code_line>attrData.id = attributeData.id;</code_line>
				<code_line>attrData.unknownAttributes = attributeData.unknownAttributes;</code_line>
				<code_line>attrData.present_attributes = 0;</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::logbase__AttributeData::ATTRIBUTE__CLASS_PRESENT) == COLLADASaxFWL15::logbase__AttributeData::ATTRIBUTE__CLASS_PRESENT ) {</code_line>
				<code_line>    attrData._class = attributeData._class;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::logbase__AttributeData::ATTRIBUTE__CLASS_PRESENT;</code_line>
				<code_line>}</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::logbase__AttributeData::ATTRIBUTE_HREF_PRESENT) == COLLADASaxFWL15::logbase__AttributeData::ATTRIBUTE_HREF_PRESENT ) {</code_line>
				<code_line>    attrData.href = attributeData.href;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::logbase__AttributeData::ATTRIBUTE_HREF_PRESENT;</code_line>
				<code_line>}</code_line>
			</specific>
		</method>

		<method name="end__logbase">
			<specific version="15" name="end__logbase"></specific>
		</method>

		<method name="begin__sin">
			<parameter type="COLLADASaxFWL::sin__AttributeData" name="attrData" />
			<specific version="15" name="begin__sin">
				<parameter type="const COLLADASaxFWL15::sin__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::sin__AttributeData attrData;</code_line>
				<code_line>attrData.style = attributeData.style;</code_line>
				<code_line>attrData.xref = attributeData.xref;</code_line>
				<code_line>attrData.id = attributeData.id;</code_line>
				<code_line>attrData.encoding = attributeData.encoding;</code_line>
				<code_line>attrData.unknownAttributes = attributeData.unknownAttributes;</code_line>
				<code_line>attrData.present_attributes = 0;</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::sin__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT) == COLLADASaxFWL15::sin__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT ) {</code_line>
				<code_line>    attrData.definitionURL = attributeData.definitionURL;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::sin__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT;</code_line>
				<code_line>}</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::sin__AttributeData::ATTRIBUTE__CLASS_PRESENT) == COLLADASaxFWL15::sin__AttributeData::ATTRIBUTE__CLASS_PRESENT ) {</code_line>
				<code_line>    attrData._class = attributeData._class;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::sin__AttributeData::ATTRIBUTE__CLASS_PRESENT;</code_line>
				<code_line>}</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::sin__AttributeData::ATTRIBUTE_HREF_PRESENT) == COLLADASaxFWL15::sin__AttributeData::ATTRIBUTE_HREF_PRESENT ) {</code_line>
				<code_line>    attrData.href = attributeData.href;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::sin__AttributeData::ATTRIBUTE_HREF_PRESENT;</code_line>
				<code_line>}</code_line>
			</specific>
		</method>

		<method name="end__sin">
			<specific version="15" name="end__sin"></specific>
		</method>

		<method name="begin__cos">
			<parameter type="COLLADASaxFWL::cos__AttributeData" name="attrData" />
			<specific version="15" name="begin__cos">
				<parameter type="const COLLADASaxFWL15::cos__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::cos__AttributeData attrData;</code_line>
				<code_line>attrData.style = attributeData.style;</code_line>
				<code_line>attrData.xref = attributeData.xref;</code_line>
				<code_line>attrData.id = attributeData.id;</code_line>
				<code_line>attrData.encoding = attributeData.encoding;</code_line>
				<code_line>attrData.unknownAttributes = attributeData.unknownAttributes;</code_line>
				<code_line>attrData.present_attributes = 0;</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::cos__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT) == COLLADASaxFWL15::cos__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT ) {</code_line>
				<code_line>    attrData.definitionURL = attributeData.definitionURL;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::cos__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT;</code_line>
				<code_line>}</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::cos__AttributeData::ATTRIBUTE__CLASS_PRESENT) == COLLADASaxFWL15::cos__AttributeData::ATTRIBUTE__CLASS_PRESENT ) {</code_line>
				<code_line>    attrData._class = attributeData._class;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::cos__AttributeData::ATTRIBUTE__CLASS_PRESENT;</code_line>
				<code_line>}</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::cos__AttributeData::ATTRIBUTE_HREF_PRESENT) == COLLADASaxFWL15::cos__AttributeData::ATTRIBUTE_HREF_PRESENT ) {</code_line>
				<code_line>    attrData.href = attributeData.href;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::cos__AttributeData::ATTRIBUTE_HREF_PRESENT;</code_line>
				<code_line>}</code_line>
			</specific>
		</method>

		<method name="end__cos">
			<specific version="15" name="end__cos"></specific>
		</method>

		<method name="begin__tan">
			<parameter type="COLLADASaxFWL::tan__AttributeData" name="attrData" />
			<specific version="15" name="begin__tan">
				<parameter type="const COLLADASaxFWL15::tan__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::tan__AttributeData attrData;</code_line>
				<code_line>attrData.style = attributeData.style;</code_line>
				<code_line>attrData.xref = attributeData.xref;</code_line>
				<code_line>attrData.id = attributeData.id;</code_line>
				<code_line>attrData.encoding = attributeData.encoding;</code_line>
				<code_line>attrData.unknownAttributes = attributeData.unknownAttributes;</code_line>
				<code_line>attrData.present_attributes = 0;</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::tan__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT) == COLLADASaxFWL15::tan__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT ) {</code_line>
				<code_line>    attrData.definitionURL = attributeData.definitionURL;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::tan__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT;</code_line>
				<code_line>}</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::tan__AttributeData::ATTRIBUTE__CLASS_PRESENT) == COLLADASaxFWL15::tan__AttributeData::ATTRIBUTE__CLASS_PRESENT ) {</code_line>
				<code_line>    attrData._class = attributeData._class;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::tan__AttributeData::ATTRIBUTE__CLASS_PRESENT;</code_line>
				<code_line>}</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::tan__AttributeData::ATTRIBUTE_HREF_PRESENT) == COLLADASaxFWL15::tan__AttributeData::ATTRIBUTE_HREF_PRESENT ) {</code_line>
				<code_line>    attrData.href = attributeData.href;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::tan__AttributeData::ATTRIBUTE_HREF_PRESENT;</code_line>
				<code_line>}</code_line>
			</specific>
		</method>

		<method name="end__tan">
			<specific version="15" name="end__tan"></specific>
		</method>

		<method name="begin__cot">
			<parameter type="COLLADASaxFWL::cot__AttributeData" name="attrData" />
			<specific version="15" name="begin__cot">
				<parameter type="const COLLADASaxFWL15::cot__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::cot__AttributeData attrData;</code_line>
				<code_line>attrData.style = attributeData.style;</code_line>
				<code_line>attrData.xref = attributeData.xref;</code_line>
				<code_line>attrData.id = attributeData.id;</code_line>
				<code_line>attrData.encoding = attributeData.encoding;</code_line>
				<code_line>attrData.unknownAttributes = attributeData.unknownAttributes;</code_line>
				<code_line>attrData.present_attributes = 0;</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::cot__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT) == COLLADASaxFWL15::cot__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT ) {</code_line>
				<code_line>    attrData.definitionURL = attributeData.definitionURL;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::cot__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT;</code_line>
				<code_line>}</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::cot__AttributeData::ATTRIBUTE__CLASS_PRESENT) == COLLADASaxFWL15::cot__AttributeData::ATTRIBUTE__CLASS_PRESENT ) {</code_line>
				<code_line>    attrData._class = attributeData._class;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::cot__AttributeData::ATTRIBUTE__CLASS_PRESENT;</code_line>
				<code_line>}</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::cot__AttributeData::ATTRIBUTE_HREF_PRESENT) == COLLADASaxFWL15::cot__AttributeData::ATTRIBUTE_HREF_PRESENT ) {</code_line>
				<code_line>    attrData.href = attributeData.href;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::cot__AttributeData::ATTRIBUTE_HREF_PRESENT;</code_line>
				<code_line>}</code_line>
			</specific>
		</method>

		<method name="end__cot">
			<specific version="15" name="end__cot"></specific>
		</method>

		<method name="begin__sec">
			<parameter type="COLLADASaxFWL::sec__AttributeData" name="attrData" />
			<specific version="15" name="begin__sec">
				<parameter type="const COLLADASaxFWL15::sec__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::sec__AttributeData attrData;</code_line>
				<code_line>attrData.style = attributeData.style;</code_line>
				<code_line>attrData.xref = attributeData.xref;</code_line>
				<code_line>attrData.id = attributeData.id;</code_line>
				<code_line>attrData.encoding = attributeData.encoding;</code_line>
				<code_line>attrData.unknownAttributes = attributeData.unknownAttributes;</code_line>
				<code_line>attrData.present_attributes = 0;</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::sec__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT) == COLLADASaxFWL15::sec__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT ) {</code_line>
				<code_line>    attrData.definitionURL = attributeData.definitionURL;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::sec__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT;</code_line>
				<code_line>}</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::sec__AttributeData::ATTRIBUTE__CLASS_PRESENT) == COLLADASaxFWL15::sec__AttributeData::ATTRIBUTE__CLASS_PRESENT ) {</code_line>
				<code_line>    attrData._class = attributeData._class;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::sec__AttributeData::ATTRIBUTE__CLASS_PRESENT;</code_line>
				<code_line>}</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::sec__AttributeData::ATTRIBUTE_HREF_PRESENT) == COLLADASaxFWL15::sec__AttributeData::ATTRIBUTE_HREF_PRESENT ) {</code_line>
				<code_line>    attrData.href = attributeData.href;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::sec__AttributeData::ATTRIBUTE_HREF_PRESENT;</code_line>
				<code_line>}</code_line>
			</specific>
		</method>

		<method name="end__sec">
			<specific version="15" name="end__sec"></specific>
		</method>

		<method name="begin__csc">
			<parameter type="COLLADASaxFWL::csc__AttributeData" name="attrData" />
			<specific version="15" name="begin__csc">
				<parameter type="const COLLADASaxFWL15::csc__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::csc__AttributeData attrData;</code_line>
				<code_line>attrData.style = attributeData.style;</code_line>
				<code_line>attrData.xref = attributeData.xref;</code_line>
				<code_line>attrData.id = attributeData.id;</code_line>
				<code_line>attrData.encoding = attributeData.encoding;</code_line>
				<code_line>attrData.unknownAttributes = attributeData.unknownAttributes;</code_line>
				<code_line>attrData.present_attributes = 0;</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::csc__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT) == COLLADASaxFWL15::csc__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT ) {</code_line>
				<code_line>    attrData.definitionURL = attributeData.definitionURL;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::csc__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT;</code_line>
				<code_line>}</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::csc__AttributeData::ATTRIBUTE__CLASS_PRESENT) == COLLADASaxFWL15::csc__AttributeData::ATTRIBUTE__CLASS_PRESENT ) {</code_line>
				<code_line>    attrData._class = attributeData._class;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::csc__AttributeData::ATTRIBUTE__CLASS_PRESENT;</code_line>
				<code_line>}</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::csc__AttributeData::ATTRIBUTE_HREF_PRESENT) == COLLADASaxFWL15::csc__AttributeData::ATTRIBUTE_HREF_PRESENT ) {</code_line>
				<code_line>    attrData.href = attributeData.href;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::csc__AttributeData::ATTRIBUTE_HREF_PRESENT;</code_line>
				<code_line>}</code_line>
			</specific>
		</method>

		<method name="end__csc">
			<specific version="15" name="end__csc"></specific>
		</method>

		<method name="begin__arcsin">
			<parameter type="COLLADASaxFWL::arcsin__AttributeData" name="attrData" />
			<specific version="15" name="begin__arcsin">
				<parameter type="const COLLADASaxFWL15::arcsin__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::arcsin__AttributeData attrData;</code_line>
				<code_line>attrData.style = attributeData.style;</code_line>
				<code_line>attrData.xref = attributeData.xref;</code_line>
				<code_line>attrData.id = attributeData.id;</code_line>
				<code_line>attrData.encoding = attributeData.encoding;</code_line>
				<code_line>attrData.unknownAttributes = attributeData.unknownAttributes;</code_line>
				<code_line>attrData.present_attributes = 0;</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::arcsin__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT) == COLLADASaxFWL15::arcsin__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT ) {</code_line>
				<code_line>    attrData.definitionURL = attributeData.definitionURL;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::arcsin__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT;</code_line>
				<code_line>}</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::arcsin__AttributeData::ATTRIBUTE__CLASS_PRESENT) == COLLADASaxFWL15::arcsin__AttributeData::ATTRIBUTE__CLASS_PRESENT ) {</code_line>
				<code_line>    attrData._class = attributeData._class;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::arcsin__AttributeData::ATTRIBUTE__CLASS_PRESENT;</code_line>
				<code_line>}</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::arcsin__AttributeData::ATTRIBUTE_HREF_PRESENT) == COLLADASaxFWL15::arcsin__AttributeData::ATTRIBUTE_HREF_PRESENT ) {</code_line>
				<code_line>    attrData.href = attributeData.href;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::arcsin__AttributeData::ATTRIBUTE_HREF_PRESENT;</code_line>
				<code_line>}</code_line>
			</specific>
		</method>

		<method name="end__arcsin">
			<specific version="15" name="end__arcsin"></specific>
		</method>

		<method name="begin__arccos">
			<parameter type="COLLADASaxFWL::arccos__AttributeData" name="attrData" />
			<specific version="15" name="begin__arccos">
				<parameter type="const COLLADASaxFWL15::arccos__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::arccos__AttributeData attrData;</code_line>
				<code_line>attrData.style = attributeData.style;</code_line>
				<code_line>attrData.xref = attributeData.xref;</code_line>
				<code_line>attrData.id = attributeData.id;</code_line>
				<code_line>attrData.encoding = attributeData.encoding;</code_line>
				<code_line>attrData.unknownAttributes = attributeData.unknownAttributes;</code_line>
				<code_line>attrData.present_attributes = 0;</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::arccos__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT) == COLLADASaxFWL15::arccos__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT ) {</code_line>
				<code_line>    attrData.definitionURL = attributeData.definitionURL;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::arccos__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT;</code_line>
				<code_line>}</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::arccos__AttributeData::ATTRIBUTE__CLASS_PRESENT) == COLLADASaxFWL15::arccos__AttributeData::ATTRIBUTE__CLASS_PRESENT ) {</code_line>
				<code_line>    attrData._class = attributeData._class;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::arccos__AttributeData::ATTRIBUTE__CLASS_PRESENT;</code_line>
				<code_line>}</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::arccos__AttributeData::ATTRIBUTE_HREF_PRESENT) == COLLADASaxFWL15::arccos__AttributeData::ATTRIBUTE_HREF_PRESENT ) {</code_line>
				<code_line>    attrData.href = attributeData.href;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::arccos__AttributeData::ATTRIBUTE_HREF_PRESENT;</code_line>
				<code_line>}</code_line>
			</specific>
		</method>

		<method name="end__arccos">
			<specific version="15" name="end__arccos"></specific>
		</method>

		<method name="begin__arctan">
			<parameter type="COLLADASaxFWL::arctan__AttributeData" name="attrData" />
			<specific version="15" name="begin__arctan">
				<parameter type="const COLLADASaxFWL15::arctan__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::arctan__AttributeData attrData;</code_line>
				<code_line>attrData.style = attributeData.style;</code_line>
				<code_line>attrData.xref = attributeData.xref;</code_line>
				<code_line>attrData.id = attributeData.id;</code_line>
				<code_line>attrData.encoding = attributeData.encoding;</code_line>
				<code_line>attrData.unknownAttributes = attributeData.unknownAttributes;</code_line>
				<code_line>attrData.present_attributes = 0;</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::arctan__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT) == COLLADASaxFWL15::arctan__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT ) {</code_line>
				<code_line>    attrData.definitionURL = attributeData.definitionURL;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::arctan__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT;</code_line>
				<code_line>}</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::arctan__AttributeData::ATTRIBUTE__CLASS_PRESENT) == COLLADASaxFWL15::arctan__AttributeData::ATTRIBUTE__CLASS_PRESENT ) {</code_line>
				<code_line>    attrData._class = attributeData._class;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::arctan__AttributeData::ATTRIBUTE__CLASS_PRESENT;</code_line>
				<code_line>}</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::arctan__AttributeData::ATTRIBUTE_HREF_PRESENT) == COLLADASaxFWL15::arctan__AttributeData::ATTRIBUTE_HREF_PRESENT ) {</code_line>
				<code_line>    attrData.href = attributeData.href;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::arctan__AttributeData::ATTRIBUTE_HREF_PRESENT;</code_line>
				<code_line>}</code_line>
			</specific>
		</method>

		<method name="end__arctan">
			<specific version="15" name="end__arctan"></specific>
		</method>

		<method name="begin__arccot">
			<parameter type="COLLADASaxFWL::arccot__AttributeData" name="attrData" />
			<specific version="15" name="begin__arccot">
				<parameter type="const COLLADASaxFWL15::arccot__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::arccot__AttributeData attrData;</code_line>
				<code_line>attrData.style = attributeData.style;</code_line>
				<code_line>attrData.xref = attributeData.xref;</code_line>
				<code_line>attrData.id = attributeData.id;</code_line>
				<code_line>attrData.encoding = attributeData.encoding;</code_line>
				<code_line>attrData.unknownAttributes = attributeData.unknownAttributes;</code_line>
				<code_line>attrData.present_attributes = 0;</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::arccot__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT) == COLLADASaxFWL15::arccot__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT ) {</code_line>
				<code_line>    attrData.definitionURL = attributeData.definitionURL;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::arccot__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT;</code_line>
				<code_line>}</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::arccot__AttributeData::ATTRIBUTE__CLASS_PRESENT) == COLLADASaxFWL15::arccot__AttributeData::ATTRIBUTE__CLASS_PRESENT ) {</code_line>
				<code_line>    attrData._class = attributeData._class;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::arccot__AttributeData::ATTRIBUTE__CLASS_PRESENT;</code_line>
				<code_line>}</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::arccot__AttributeData::ATTRIBUTE_HREF_PRESENT) == COLLADASaxFWL15::arccot__AttributeData::ATTRIBUTE_HREF_PRESENT ) {</code_line>
				<code_line>    attrData.href = attributeData.href;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::arccot__AttributeData::ATTRIBUTE_HREF_PRESENT;</code_line>
				<code_line>}</code_line>
			</specific>
		</method>

		<method name="end__arccot">
			<specific version="15" name="end__arccot"></specific>
		</method>

		<method name="begin__arcsec">
			<parameter type="COLLADASaxFWL::arcsec__AttributeData" name="attrData" />
			<specific version="15" name="begin__arcsec">
				<parameter type="const COLLADASaxFWL15::arcsec__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::arcsec__AttributeData attrData;</code_line>
				<code_line>attrData.style = attributeData.style;</code_line>
				<code_line>attrData.xref = attributeData.xref;</code_line>
				<code_line>attrData.id = attributeData.id;</code_line>
				<code_line>attrData.encoding = attributeData.encoding;</code_line>
				<code_line>attrData.unknownAttributes = attributeData.unknownAttributes;</code_line>
				<code_line>attrData.present_attributes = 0;</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::arcsec__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT) == COLLADASaxFWL15::arcsec__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT ) {</code_line>
				<code_line>    attrData.definitionURL = attributeData.definitionURL;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::arcsec__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT;</code_line>
				<code_line>}</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::arcsec__AttributeData::ATTRIBUTE__CLASS_PRESENT) == COLLADASaxFWL15::arcsec__AttributeData::ATTRIBUTE__CLASS_PRESENT ) {</code_line>
				<code_line>    attrData._class = attributeData._class;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::arcsec__AttributeData::ATTRIBUTE__CLASS_PRESENT;</code_line>
				<code_line>}</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::arcsec__AttributeData::ATTRIBUTE_HREF_PRESENT) == COLLADASaxFWL15::arcsec__AttributeData::ATTRIBUTE_HREF_PRESENT ) {</code_line>
				<code_line>    attrData.href = attributeData.href;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::arcsec__AttributeData::ATTRIBUTE_HREF_PRESENT;</code_line>
				<code_line>}</code_line>
			</specific>
		</method>

		<method name="end__arcsec">
			<specific version="15" name="end__arcsec"></specific>
		</method>

		<method name="begin__arccsc">
			<parameter type="COLLADASaxFWL::arccsc__AttributeData" name="attrData" />
			<specific version="15" name="begin__arccsc">
				<parameter type="const COLLADASaxFWL15::arccsc__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::arccsc__AttributeData attrData;</code_line>
				<code_line>attrData.style = attributeData.style;</code_line>
				<code_line>attrData.xref = attributeData.xref;</code_line>
				<code_line>attrData.id = attributeData.id;</code_line>
				<code_line>attrData.encoding = attributeData.encoding;</code_line>
				<code_line>attrData.unknownAttributes = attributeData.unknownAttributes;</code_line>
				<code_line>attrData.present_attributes = 0;</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::arccsc__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT) == COLLADASaxFWL15::arccsc__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT ) {</code_line>
				<code_line>    attrData.definitionURL = attributeData.definitionURL;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::arccsc__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT;</code_line>
				<code_line>}</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::arccsc__AttributeData::ATTRIBUTE__CLASS_PRESENT) == COLLADASaxFWL15::arccsc__AttributeData::ATTRIBUTE__CLASS_PRESENT ) {</code_line>
				<code_line>    attrData._class = attributeData._class;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::arccsc__AttributeData::ATTRIBUTE__CLASS_PRESENT;</code_line>
				<code_line>}</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::arccsc__AttributeData::ATTRIBUTE_HREF_PRESENT) == COLLADASaxFWL15::arccsc__AttributeData::ATTRIBUTE_HREF_PRESENT ) {</code_line>
				<code_line>    attrData.href = attributeData.href;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::arccsc__AttributeData::ATTRIBUTE_HREF_PRESENT;</code_line>
				<code_line>}</code_line>
			</specific>
		</method>

		<method name="end__arccsc">
			<specific version="15" name="end__arccsc"></specific>
		</method>

		<method name="begin__sinh">
			<parameter type="COLLADASaxFWL::sinh__AttributeData" name="attrData" />
			<specific version="15" name="begin__sinh">
				<parameter type="const COLLADASaxFWL15::sinh__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::sinh__AttributeData attrData;</code_line>
				<code_line>attrData.style = attributeData.style;</code_line>
				<code_line>attrData.xref = attributeData.xref;</code_line>
				<code_line>attrData.id = attributeData.id;</code_line>
				<code_line>attrData.encoding = attributeData.encoding;</code_line>
				<code_line>attrData.unknownAttributes = attributeData.unknownAttributes;</code_line>
				<code_line>attrData.present_attributes = 0;</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::sinh__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT) == COLLADASaxFWL15::sinh__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT ) {</code_line>
				<code_line>    attrData.definitionURL = attributeData.definitionURL;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::sinh__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT;</code_line>
				<code_line>}</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::sinh__AttributeData::ATTRIBUTE__CLASS_PRESENT) == COLLADASaxFWL15::sinh__AttributeData::ATTRIBUTE__CLASS_PRESENT ) {</code_line>
				<code_line>    attrData._class = attributeData._class;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::sinh__AttributeData::ATTRIBUTE__CLASS_PRESENT;</code_line>
				<code_line>}</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::sinh__AttributeData::ATTRIBUTE_HREF_PRESENT) == COLLADASaxFWL15::sinh__AttributeData::ATTRIBUTE_HREF_PRESENT ) {</code_line>
				<code_line>    attrData.href = attributeData.href;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::sinh__AttributeData::ATTRIBUTE_HREF_PRESENT;</code_line>
				<code_line>}</code_line>
			</specific>
		</method>

		<method name="end__sinh">
			<specific version="15" name="end__sinh"></specific>
		</method>

		<method name="begin__cosh">
			<parameter type="COLLADASaxFWL::cosh__AttributeData" name="attrData" />
			<specific version="15" name="begin__cosh">
				<parameter type="const COLLADASaxFWL15::cosh__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::cosh__AttributeData attrData;</code_line>
				<code_line>attrData.style = attributeData.style;</code_line>
				<code_line>attrData.xref = attributeData.xref;</code_line>
				<code_line>attrData.id = attributeData.id;</code_line>
				<code_line>attrData.encoding = attributeData.encoding;</code_line>
				<code_line>attrData.unknownAttributes = attributeData.unknownAttributes;</code_line>
				<code_line>attrData.present_attributes = 0;</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::cosh__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT) == COLLADASaxFWL15::cosh__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT ) {</code_line>
				<code_line>    attrData.definitionURL = attributeData.definitionURL;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::cosh__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT;</code_line>
				<code_line>}</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::cosh__AttributeData::ATTRIBUTE__CLASS_PRESENT) == COLLADASaxFWL15::cosh__AttributeData::ATTRIBUTE__CLASS_PRESENT ) {</code_line>
				<code_line>    attrData._class = attributeData._class;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::cosh__AttributeData::ATTRIBUTE__CLASS_PRESENT;</code_line>
				<code_line>}</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::cosh__AttributeData::ATTRIBUTE_HREF_PRESENT) == COLLADASaxFWL15::cosh__AttributeData::ATTRIBUTE_HREF_PRESENT ) {</code_line>
				<code_line>    attrData.href = attributeData.href;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::cosh__AttributeData::ATTRIBUTE_HREF_PRESENT;</code_line>
				<code_line>}</code_line>
			</specific>
		</method>

		<method name="end__cosh">
			<specific version="15" name="end__cosh"></specific>
		</method>

		<method name="begin__tanh">
			<parameter type="COLLADASaxFWL::tanh__AttributeData" name="attrData" />
			<specific version="15" name="begin__tanh">
				<parameter type="const COLLADASaxFWL15::tanh__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::tanh__AttributeData attrData;</code_line>
				<code_line>attrData.style = attributeData.style;</code_line>
				<code_line>attrData.xref = attributeData.xref;</code_line>
				<code_line>attrData.id = attributeData.id;</code_line>
				<code_line>attrData.encoding = attributeData.encoding;</code_line>
				<code_line>attrData.unknownAttributes = attributeData.unknownAttributes;</code_line>
				<code_line>attrData.present_attributes = 0;</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::tanh__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT) == COLLADASaxFWL15::tanh__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT ) {</code_line>
				<code_line>    attrData.definitionURL = attributeData.definitionURL;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::tanh__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT;</code_line>
				<code_line>}</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::tanh__AttributeData::ATTRIBUTE__CLASS_PRESENT) == COLLADASaxFWL15::tanh__AttributeData::ATTRIBUTE__CLASS_PRESENT ) {</code_line>
				<code_line>    attrData._class = attributeData._class;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::tanh__AttributeData::ATTRIBUTE__CLASS_PRESENT;</code_line>
				<code_line>}</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::tanh__AttributeData::ATTRIBUTE_HREF_PRESENT) == COLLADASaxFWL15::tanh__AttributeData::ATTRIBUTE_HREF_PRESENT ) {</code_line>
				<code_line>    attrData.href = attributeData.href;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::tanh__AttributeData::ATTRIBUTE_HREF_PRESENT;</code_line>
				<code_line>}</code_line>
			</specific>
		</method>

		<method name="end__tanh">
			<specific version="15" name="end__tanh"></specific>
		</method>

		<method name="begin__sech">
			<parameter type="COLLADASaxFWL::sech__AttributeData" name="attrData" />
			<specific version="15" name="begin__sech">
				<parameter type="const COLLADASaxFWL15::sech__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::sech__AttributeData attrData;</code_line>
				<code_line>attrData.style = attributeData.style;</code_line>
				<code_line>attrData.xref = attributeData.xref;</code_line>
				<code_line>attrData.id = attributeData.id;</code_line>
				<code_line>attrData.encoding = attributeData.encoding;</code_line>
				<code_line>attrData.unknownAttributes = attributeData.unknownAttributes;</code_line>
				<code_line>attrData.present_attributes = 0;</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::sech__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT) == COLLADASaxFWL15::sech__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT ) {</code_line>
				<code_line>    attrData.definitionURL = attributeData.definitionURL;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::sech__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT;</code_line>
				<code_line>}</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::sech__AttributeData::ATTRIBUTE__CLASS_PRESENT) == COLLADASaxFWL15::sech__AttributeData::ATTRIBUTE__CLASS_PRESENT ) {</code_line>
				<code_line>    attrData._class = attributeData._class;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::sech__AttributeData::ATTRIBUTE__CLASS_PRESENT;</code_line>
				<code_line>}</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::sech__AttributeData::ATTRIBUTE_HREF_PRESENT) == COLLADASaxFWL15::sech__AttributeData::ATTRIBUTE_HREF_PRESENT ) {</code_line>
				<code_line>    attrData.href = attributeData.href;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::sech__AttributeData::ATTRIBUTE_HREF_PRESENT;</code_line>
				<code_line>}</code_line>
			</specific>
		</method>

		<method name="end__sech">
			<specific version="15" name="end__sech"></specific>
		</method>

		<method name="begin__csch">
			<parameter type="COLLADASaxFWL::csch__AttributeData" name="attrData" />
			<specific version="15" name="begin__csch">
				<parameter type="const COLLADASaxFWL15::csch__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::csch__AttributeData attrData;</code_line>
				<code_line>attrData.style = attributeData.style;</code_line>
				<code_line>attrData.xref = attributeData.xref;</code_line>
				<code_line>attrData.id = attributeData.id;</code_line>
				<code_line>attrData.encoding = attributeData.encoding;</code_line>
				<code_line>attrData.unknownAttributes = attributeData.unknownAttributes;</code_line>
				<code_line>attrData.present_attributes = 0;</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::csch__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT) == COLLADASaxFWL15::csch__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT ) {</code_line>
				<code_line>    attrData.definitionURL = attributeData.definitionURL;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::csch__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT;</code_line>
				<code_line>}</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::csch__AttributeData::ATTRIBUTE__CLASS_PRESENT) == COLLADASaxFWL15::csch__AttributeData::ATTRIBUTE__CLASS_PRESENT ) {</code_line>
				<code_line>    attrData._class = attributeData._class;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::csch__AttributeData::ATTRIBUTE__CLASS_PRESENT;</code_line>
				<code_line>}</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::csch__AttributeData::ATTRIBUTE_HREF_PRESENT) == COLLADASaxFWL15::csch__AttributeData::ATTRIBUTE_HREF_PRESENT ) {</code_line>
				<code_line>    attrData.href = attributeData.href;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::csch__AttributeData::ATTRIBUTE_HREF_PRESENT;</code_line>
				<code_line>}</code_line>
			</specific>
		</method>

		<method name="end__csch">
			<specific version="15" name="end__csch"></specific>
		</method>

		<method name="begin__coth">
			<parameter type="COLLADASaxFWL::coth__AttributeData" name="attrData" />
			<specific version="15" name="begin__coth">
				<parameter type="const COLLADASaxFWL15::coth__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::coth__AttributeData attrData;</code_line>
				<code_line>attrData.style = attributeData.style;</code_line>
				<code_line>attrData.xref = attributeData.xref;</code_line>
				<code_line>attrData.id = attributeData.id;</code_line>
				<code_line>attrData.encoding = attributeData.encoding;</code_line>
				<code_line>attrData.unknownAttributes = attributeData.unknownAttributes;</code_line>
				<code_line>attrData.present_attributes = 0;</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::coth__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT) == COLLADASaxFWL15::coth__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT ) {</code_line>
				<code_line>    attrData.definitionURL = attributeData.definitionURL;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::coth__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT;</code_line>
				<code_line>}</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::coth__AttributeData::ATTRIBUTE__CLASS_PRESENT) == COLLADASaxFWL15::coth__AttributeData::ATTRIBUTE__CLASS_PRESENT ) {</code_line>
				<code_line>    attrData._class = attributeData._class;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::coth__AttributeData::ATTRIBUTE__CLASS_PRESENT;</code_line>
				<code_line>}</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::coth__AttributeData::ATTRIBUTE_HREF_PRESENT) == COLLADASaxFWL15::coth__AttributeData::ATTRIBUTE_HREF_PRESENT ) {</code_line>
				<code_line>    attrData.href = attributeData.href;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::coth__AttributeData::ATTRIBUTE_HREF_PRESENT;</code_line>
				<code_line>}</code_line>
			</specific>
		</method>

		<method name="end__coth">
			<specific version="15" name="end__coth"></specific>
		</method>

		<method name="begin__arcsinh">
			<parameter type="COLLADASaxFWL::arcsinh__AttributeData" name="attrData" />
			<specific version="15" name="begin__arcsinh">
				<parameter type="const COLLADASaxFWL15::arcsinh__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::arcsinh__AttributeData attrData;</code_line>
				<code_line>attrData.style = attributeData.style;</code_line>
				<code_line>attrData.xref = attributeData.xref;</code_line>
				<code_line>attrData.id = attributeData.id;</code_line>
				<code_line>attrData.encoding = attributeData.encoding;</code_line>
				<code_line>attrData.unknownAttributes = attributeData.unknownAttributes;</code_line>
				<code_line>attrData.present_attributes = 0;</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::arcsinh__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT) == COLLADASaxFWL15::arcsinh__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT ) {</code_line>
				<code_line>    attrData.definitionURL = attributeData.definitionURL;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::arcsinh__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT;</code_line>
				<code_line>}</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::arcsinh__AttributeData::ATTRIBUTE__CLASS_PRESENT) == COLLADASaxFWL15::arcsinh__AttributeData::ATTRIBUTE__CLASS_PRESENT ) {</code_line>
				<code_line>    attrData._class = attributeData._class;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::arcsinh__AttributeData::ATTRIBUTE__CLASS_PRESENT;</code_line>
				<code_line>}</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::arcsinh__AttributeData::ATTRIBUTE_HREF_PRESENT) == COLLADASaxFWL15::arcsinh__AttributeData::ATTRIBUTE_HREF_PRESENT ) {</code_line>
				<code_line>    attrData.href = attributeData.href;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::arcsinh__AttributeData::ATTRIBUTE_HREF_PRESENT;</code_line>
				<code_line>}</code_line>
			</specific>
		</method>

		<method name="end__arcsinh">
			<specific version="15" name="end__arcsinh"></specific>
		</method>

		<method name="begin__arccosh">
			<parameter type="COLLADASaxFWL::arccosh__AttributeData" name="attrData" />
			<specific version="15" name="begin__arccosh">
				<parameter type="const COLLADASaxFWL15::arccosh__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::arccosh__AttributeData attrData;</code_line>
				<code_line>attrData.style = attributeData.style;</code_line>
				<code_line>attrData.xref = attributeData.xref;</code_line>
				<code_line>attrData.id = attributeData.id;</code_line>
				<code_line>attrData.encoding = attributeData.encoding;</code_line>
				<code_line>attrData.unknownAttributes = attributeData.unknownAttributes;</code_line>
				<code_line>attrData.present_attributes = 0;</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::arccosh__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT) == COLLADASaxFWL15::arccosh__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT ) {</code_line>
				<code_line>    attrData.definitionURL = attributeData.definitionURL;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::arccosh__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT;</code_line>
				<code_line>}</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::arccosh__AttributeData::ATTRIBUTE__CLASS_PRESENT) == COLLADASaxFWL15::arccosh__AttributeData::ATTRIBUTE__CLASS_PRESENT ) {</code_line>
				<code_line>    attrData._class = attributeData._class;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::arccosh__AttributeData::ATTRIBUTE__CLASS_PRESENT;</code_line>
				<code_line>}</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::arccosh__AttributeData::ATTRIBUTE_HREF_PRESENT) == COLLADASaxFWL15::arccosh__AttributeData::ATTRIBUTE_HREF_PRESENT ) {</code_line>
				<code_line>    attrData.href = attributeData.href;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::arccosh__AttributeData::ATTRIBUTE_HREF_PRESENT;</code_line>
				<code_line>}</code_line>
			</specific>
		</method>

		<method name="end__arccosh">
			<specific version="15" name="end__arccosh"></specific>
		</method>

		<method name="begin__arctanh">
			<parameter type="COLLADASaxFWL::arctanh__AttributeData" name="attrData" />
			<specific version="15" name="begin__arctanh">
				<parameter type="const COLLADASaxFWL15::arctanh__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::arctanh__AttributeData attrData;</code_line>
				<code_line>attrData.style = attributeData.style;</code_line>
				<code_line>attrData.xref = attributeData.xref;</code_line>
				<code_line>attrData.id = attributeData.id;</code_line>
				<code_line>attrData.encoding = attributeData.encoding;</code_line>
				<code_line>attrData.unknownAttributes = attributeData.unknownAttributes;</code_line>
				<code_line>attrData.present_attributes = 0;</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::arctanh__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT) == COLLADASaxFWL15::arctanh__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT ) {</code_line>
				<code_line>    attrData.definitionURL = attributeData.definitionURL;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::arctanh__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT;</code_line>
				<code_line>}</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::arctanh__AttributeData::ATTRIBUTE__CLASS_PRESENT) == COLLADASaxFWL15::arctanh__AttributeData::ATTRIBUTE__CLASS_PRESENT ) {</code_line>
				<code_line>    attrData._class = attributeData._class;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::arctanh__AttributeData::ATTRIBUTE__CLASS_PRESENT;</code_line>
				<code_line>}</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::arctanh__AttributeData::ATTRIBUTE_HREF_PRESENT) == COLLADASaxFWL15::arctanh__AttributeData::ATTRIBUTE_HREF_PRESENT ) {</code_line>
				<code_line>    attrData.href = attributeData.href;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::arctanh__AttributeData::ATTRIBUTE_HREF_PRESENT;</code_line>
				<code_line>}</code_line>
			</specific>
		</method>

		<method name="end__arctanh">
			<specific version="15" name="end__arctanh"></specific>
		</method>

		<method name="begin__arcsech">
			<parameter type="COLLADASaxFWL::arcsech__AttributeData" name="attrData" />
			<specific version="15" name="begin__arcsech">
				<parameter type="const COLLADASaxFWL15::arcsech__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::arcsech__AttributeData attrData;</code_line>
				<code_line>attrData.style = attributeData.style;</code_line>
				<code_line>attrData.xref = attributeData.xref;</code_line>
				<code_line>attrData.id = attributeData.id;</code_line>
				<code_line>attrData.encoding = attributeData.encoding;</code_line>
				<code_line>attrData.unknownAttributes = attributeData.unknownAttributes;</code_line>
				<code_line>attrData.present_attributes = 0;</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::arcsech__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT) == COLLADASaxFWL15::arcsech__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT ) {</code_line>
				<code_line>    attrData.definitionURL = attributeData.definitionURL;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::arcsech__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT;</code_line>
				<code_line>}</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::arcsech__AttributeData::ATTRIBUTE__CLASS_PRESENT) == COLLADASaxFWL15::arcsech__AttributeData::ATTRIBUTE__CLASS_PRESENT ) {</code_line>
				<code_line>    attrData._class = attributeData._class;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::arcsech__AttributeData::ATTRIBUTE__CLASS_PRESENT;</code_line>
				<code_line>}</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::arcsech__AttributeData::ATTRIBUTE_HREF_PRESENT) == COLLADASaxFWL15::arcsech__AttributeData::ATTRIBUTE_HREF_PRESENT ) {</code_line>
				<code_line>    attrData.href = attributeData.href;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::arcsech__AttributeData::ATTRIBUTE_HREF_PRESENT;</code_line>
				<code_line>}</code_line>
			</specific>
		</method>

		<method name="end__arcsech">
			<specific version="15" name="end__arcsech"></specific>
		</method>

		<method name="begin__arccsch">
			<parameter type="COLLADASaxFWL::arccsch__AttributeData" name="attrData" />
			<specific version="15" name="begin__arccsch">
				<parameter type="const COLLADASaxFWL15::arccsch__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::arccsch__AttributeData attrData;</code_line>
				<code_line>attrData.style = attributeData.style;</code_line>
				<code_line>attrData.xref = attributeData.xref;</code_line>
				<code_line>attrData.id = attributeData.id;</code_line>
				<code_line>attrData.encoding = attributeData.encoding;</code_line>
				<code_line>attrData.unknownAttributes = attributeData.unknownAttributes;</code_line>
				<code_line>attrData.present_attributes = 0;</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::arccsch__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT) == COLLADASaxFWL15::arccsch__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT ) {</code_line>
				<code_line>    attrData.definitionURL = attributeData.definitionURL;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::arccsch__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT;</code_line>
				<code_line>}</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::arccsch__AttributeData::ATTRIBUTE__CLASS_PRESENT) == COLLADASaxFWL15::arccsch__AttributeData::ATTRIBUTE__CLASS_PRESENT ) {</code_line>
				<code_line>    attrData._class = attributeData._class;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::arccsch__AttributeData::ATTRIBUTE__CLASS_PRESENT;</code_line>
				<code_line>}</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::arccsch__AttributeData::ATTRIBUTE_HREF_PRESENT) == COLLADASaxFWL15::arccsch__AttributeData::ATTRIBUTE_HREF_PRESENT ) {</code_line>
				<code_line>    attrData.href = attributeData.href;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::arccsch__AttributeData::ATTRIBUTE_HREF_PRESENT;</code_line>
				<code_line>}</code_line>
			</specific>
		</method>

		<method name="end__arccsch">
			<specific version="15" name="end__arccsch"></specific>
		</method>

		<method name="begin__arccoth">
			<parameter type="COLLADASaxFWL::arccoth__AttributeData" name="attrData" />
			<specific version="15" name="begin__arccoth">
				<parameter type="const COLLADASaxFWL15::arccoth__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::arccoth__AttributeData attrData;</code_line>
				<code_line>attrData.style = attributeData.style;</code_line>
				<code_line>attrData.xref = attributeData.xref;</code_line>
				<code_line>attrData.id = attributeData.id;</code_line>
				<code_line>attrData.encoding = attributeData.encoding;</code_line>
				<code_line>attrData.unknownAttributes = attributeData.unknownAttributes;</code_line>
				<code_line>attrData.present_attributes = 0;</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::arccoth__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT) == COLLADASaxFWL15::arccoth__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT ) {</code_line>
				<code_line>    attrData.definitionURL = attributeData.definitionURL;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::arccoth__AttributeData::ATTRIBUTE_DEFINITIONURL_PRESENT;</code_line>
				<code_line>}</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::arccoth__AttributeData::ATTRIBUTE__CLASS_PRESENT) == COLLADASaxFWL15::arccoth__AttributeData::ATTRIBUTE__CLASS_PRESENT ) {</code_line>
				<code_line>    attrData._class = attributeData._class;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::arccoth__AttributeData::ATTRIBUTE__CLASS_PRESENT;</code_line>
				<code_line>}</code_line>
				<code_line>if ( (attributeData.present_attributes &amp; COLLADASaxFWL15::arccoth__AttributeData::ATTRIBUTE_HREF_PRESENT) == COLLADASaxFWL15::arccoth__AttributeData::ATTRIBUTE_HREF_PRESENT ) {</code_line>
				<code_line>    attrData.href = attributeData.href;</code_line>
				<code_line>    attrData.present_attributes |= COLLADASaxFWL::arccoth__AttributeData::ATTRIBUTE_HREF_PRESENT;</code_line>
				<code_line>}</code_line>
			</specific>
		</method>

		<method name="end__arccoth">
			<specific version="15" name="end__arccoth"></specific>
		</method>

	</class>


	<class name="LibraryFormulasLoader" include="COLLADASaxFWLLibraryFormulasLoader.h" 
			baseClass="FormulasLoader" baseInclude="COLLADASaxFWLFormulasLoader.h">
		<member type="LibraryFormulasLoader*" name="mLoader" />
		<ctor>
			<parameter type="LibraryFormulasLoader*" name="loader" />
			<initlist name="FormulasLoader" value="loader" />
			<initlist name="mLoader" value="loader" />
		</ctor>

		<method name="end__library_formulas">
			<specific version="15" name="end__library_formulas"></specific>
		</method>

	</class>


<!-- *******************************************   kinematics   ********************************************-->

	<class name="LibraryJointsLoader" include="COLLADASaxFWLLibraryJointsLoader.h">
		<member type="LibraryJointsLoader*" name="mLoader" />
		<ctor>
			<parameter type="LibraryJointsLoader*" name="loader" />
			<initlist name="mLoader" value="loader" />
		</ctor>

		<method name="end__library_joints">
			<specific version="15" name="end__library_joints"></specific>
		</method>


		<method name="begin__joint">
			<parameter type="COLLADASaxFWL::joint__AttributeData" name="attrData" />
			<specific version="15" name="begin__joint">
				<parameter type="const COLLADASaxFWL15::joint__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::joint__AttributeData attrData;</code_line>
				<code_line>attrData.id = attributeData.id;</code_line>
				<code_line>attrData.sid = attributeData.sid;</code_line>
	      <code_line>attrData.name = attributeData.name;</code_line>
			</specific>
		</method>

		<method name="end__joint">
			<specific version="15" name="end__joint"></specific>
		</method>

		<method name="begin__prismatic">
			<parameter type="COLLADASaxFWL::prismatic__AttributeData" name="attrData" />
			<specific version="15" name="begin__prismatic">
				<parameter type="const COLLADASaxFWL15::prismatic__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::prismatic__AttributeData attrData;</code_line>
				<code_line>attrData.sid = attributeData.sid;</code_line>
			</specific>
		</method>

		<method name="end__prismatic">
			<specific version="15" name="end__prismatic"></specific>
		</method>

		<method name="begin__axis____axis_type">
			<parameter type="COLLADASaxFWL::axis____axis_type__AttributeData" name="attrData" />
			<specific version="15" name="begin__axis____axis_type">
				<parameter type="const COLLADASaxFWL15::axis____axis_type__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::axis____axis_type__AttributeData attrData;</code_line>
				<code_line>attrData.sid = attributeData.sid;</code_line>
	      <code_line>attrData.name = attributeData.name;</code_line>
			</specific>
		</method>

		<method name="end__axis____axis_type">
			<specific version="15" name="end__axis____axis_type"></specific>
		</method>
		
  	<method name="data__axis____axis_type">
			<parameter type="const float*" name="data" />
			<parameter type="size_t" name="length" />
			<specific version="15" name="data__axis____axis_type"></specific>
		</method>

		<method name="begin__limits____joint_limits_type">
			<specific version="15" name="begin__limits____joint_limits_type"/>
		</method>

		<method name="end__limits____joint_limits_type">
			<specific version="15" name="end__limits____joint_limits_type"></specific>
		</method>

		<method name="begin__min____minmax_type">
			<parameter type="COLLADASaxFWL::min____minmax_type__AttributeData" name="attrData" />
			<specific version="15" name="begin__min____minmax_type">
				<parameter type="const COLLADASaxFWL15::min____minmax_type__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::min____minmax_type__AttributeData attrData;</code_line>
				<code_line>attrData.sid = attributeData.sid;</code_line>
	      <code_line>attrData.name = attributeData.name;</code_line>
			</specific>
		</method>

		<method name="end__min____minmax_type">
			<specific version="15" name="end__min____minmax_type"></specific>
		</method>
		
  	<method name="data__min____minmax_type">
			<parameter type="float" name="value" />
			<specific version="15" name="data__min____minmax_type"></specific>
		</method>

		<method name="begin__max____minmax_type">
			<parameter type="COLLADASaxFWL::max____minmax_type__AttributeData" name="attrData" />
			<specific version="15" name="begin__max____minmax_type">
				<parameter type="const COLLADASaxFWL15::max____minmax_type__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::max____minmax_type__AttributeData attrData;</code_line>
				<code_line>attrData.sid = attributeData.sid;</code_line>
	      <code_line>attrData.name = attributeData.name;</code_line>
			</specific>
		</method>

		<method name="end__max____minmax_type">
			<specific version="15" name="end__max____minmax_type"></specific>
		</method>
		
  	<method name="data__max____minmax_type">
			<parameter type="float" name="value" />
			<specific version="15" name="data__max____minmax_type"></specific>
		</method>

		<method name="begin__revolute">
			<parameter type="COLLADASaxFWL::revolute__AttributeData" name="attrData" />
			<specific version="15" name="begin__revolute">
				<parameter type="const COLLADASaxFWL15::revolute__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::revolute__AttributeData attrData;</code_line>
				<code_line>attrData.sid = attributeData.sid;</code_line>
			</specific>
		</method>

		<method name="end__revolute">
			<specific version="15" name="end__revolute"></specific>
		</method>

		<method name="begin__technique">
			<parameter type="COLLADASaxFWL::technique__AttributeData" name="attrData" />
			<specific version="15" name="begin__technique____technique_type">
				<parameter type="const COLLADASaxFWL15::technique____technique_type__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::technique__AttributeData attrData;</code_line>
				<code_line>attrData.profile = attributeData.profile;</code_line>
			</specific>
		</method>

		<method name="end__technique">
			<specific version="15" name="end__technique____technique_type"></specific>
		</method>

	</class>


	<class name="LibraryKinematicsModelsLoader" include="COLLADASaxFWLLibraryKinematicsModelsLoader.h" 
			baseClass="FormulasLoader" baseInclude="COLLADASaxFWLFormulasLoader.h">
		<member type="LibraryKinematicsModelsLoader*" name="mLoader" />
		<ctor>
			<parameter type="LibraryKinematicsModelsLoader*" name="loader" />
			<initlist name="FormulasLoader" value="loader" />
			<initlist name="mLoader" value="loader" />
		</ctor>

		<method name="end__library_kinematics_models">
			<specific version="15" name="end__library_kinematics_models"></specific>
		</method>

		<method name="begin__kinematics_model">
			<parameter type="COLLADASaxFWL::kinematics_model__AttributeData" name="attrData" />
			<specific version="15" name="begin__kinematics_model">
				<parameter type="const COLLADASaxFWL15::kinematics_model__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::kinematics_model__AttributeData attrData;</code_line>
				<code_line>attrData.id = attributeData.id;</code_line>
	      <code_line>attrData.name = attributeData.name;</code_line>
			</specific>
		</method>

		<method name="end__kinematics_model">
			<specific version="15" name="end__kinematics_model"></specific>
		</method>
		
		<method name="begin__technique_common____kinematics_model_technique_type">
			<specific version="15" name="begin__technique_common____kinematics_model_technique_type"/>
		</method>

		<method name="end__technique_common____kinematics_model_technique_type">
			<specific version="15" name="end__technique_common____kinematics_model_technique_type"></specific>
		</method>

		<method name="begin__newparam____kinematics_newparam_type">
			<parameter type="COLLADASaxFWL::newparam____kinematics_newparam_type__AttributeData" name="attrData" />
			<specific version="15" name="begin__newparam____kinematics_newparam_type">
				<parameter type="const COLLADASaxFWL15::newparam____kinematics_newparam_type__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::newparam____kinematics_newparam_type__AttributeData attrData;</code_line>
				<code_line>attrData.sid = attributeData.sid;</code_line>
			</specific>
		</method>

		<method name="end__newparam____kinematics_newparam_type">
			<specific version="15" name="end__newparam____kinematics_newparam_type"></specific>
		</method>

		<method name="begin__joint">
			<parameter type="COLLADASaxFWL::joint__AttributeData" name="attrData" />
			<specific version="15" name="begin__joint">
				<parameter type="const COLLADASaxFWL15::joint__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::joint__AttributeData attrData;</code_line>
				<code_line>attrData.id = attributeData.id;</code_line>
				<code_line>attrData.sid = attributeData.sid;</code_line>
	      <code_line>attrData.name = attributeData.name;</code_line>
			</specific>
		</method>

		<method name="end__joint">
			<specific version="15" name="end__joint"></specific>
		</method>

		<method name="begin__prismatic">
			<parameter type="COLLADASaxFWL::prismatic__AttributeData" name="attrData" />
			<specific version="15" name="begin__prismatic">
				<parameter type="const COLLADASaxFWL15::prismatic__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::prismatic__AttributeData attrData;</code_line>
				<code_line>attrData.sid = attributeData.sid;</code_line>
			</specific>
		</method>

		<method name="end__prismatic">
			<specific version="15" name="end__prismatic"></specific>
		</method>

		<method name="begin__axis____axis_type">
			<parameter type="COLLADASaxFWL::axis____axis_type__AttributeData" name="attrData" />
			<specific version="15" name="begin__axis____axis_type">
				<parameter type="const COLLADASaxFWL15::axis____axis_type__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::axis____axis_type__AttributeData attrData;</code_line>
				<code_line>attrData.sid = attributeData.sid;</code_line>
	      <code_line>attrData.name = attributeData.name;</code_line>
			</specific>
		</method>

		<method name="end__axis____axis_type">
			<specific version="15" name="end__axis____axis_type"></specific>
		</method>
		
  	<method name="data__axis____axis_type">
			<parameter type="const float*" name="data" />
			<parameter type="size_t" name="length" />
			<specific version="15" name="data__axis____axis_type"></specific>
		</method>

		<method name="begin__limits____joint_limits_type">
			<specific version="15" name="begin__limits____joint_limits_type"/>
		</method>

		<method name="end__limits____joint_limits_type">
			<specific version="15" name="end__limits____joint_limits_type"></specific>
		</method>

		<method name="begin__min____minmax_type">
			<parameter type="COLLADASaxFWL::min____minmax_type__AttributeData" name="attrData" />
			<specific version="15" name="begin__min____minmax_type">
				<parameter type="const COLLADASaxFWL15::min____minmax_type__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::min____minmax_type__AttributeData attrData;</code_line>
				<code_line>attrData.sid = attributeData.sid;</code_line>
	      <code_line>attrData.name = attributeData.name;</code_line>
			</specific>
		</method>

		<method name="end__min____minmax_type">
			<specific version="15" name="end__min____minmax_type"></specific>
		</method>
		
  	<method name="data__min____minmax_type">
			<parameter type="float" name="value" />
			<specific version="15" name="data__min____minmax_type"></specific>
		</method>

		<method name="begin__max____minmax_type">
			<parameter type="COLLADASaxFWL::max____minmax_type__AttributeData" name="attrData" />
			<specific version="15" name="begin__max____minmax_type">
				<parameter type="const COLLADASaxFWL15::max____minmax_type__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::max____minmax_type__AttributeData attrData;</code_line>
				<code_line>attrData.sid = attributeData.sid;</code_line>
	      <code_line>attrData.name = attributeData.name;</code_line>
			</specific>
		</method>

		<method name="end__max____minmax_type">
			<specific version="15" name="end__max____minmax_type"></specific>
		</method>
		
  	<method name="data__max____minmax_type">
			<parameter type="float" name="value" />
			<specific version="15" name="data__max____minmax_type"></specific>
		</method>

		<method name="begin__revolute">
			<parameter type="COLLADASaxFWL::revolute__AttributeData" name="attrData" />
			<specific version="15" name="begin__revolute">
				<parameter type="const COLLADASaxFWL15::revolute__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::revolute__AttributeData attrData;</code_line>
				<code_line>attrData.sid = attributeData.sid;</code_line>
			</specific>
		</method>

		<method name="end__revolute">
			<specific version="15" name="end__revolute"></specific>
		</method>
				
		<method name="begin__instance_joint">
			<parameter type="COLLADASaxFWL::instance_joint__AttributeData" name="attrData" />
			<specific version="15" name="begin__instance_joint">
				<parameter type="const COLLADASaxFWL15::instance_joint__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::instance_joint__AttributeData attrData;</code_line>
				<code_line>attrData.present_attributes = attributeData.present_attributes;</code_line>
				<code_line>attrData.url = attributeData.url;</code_line>
				<code_line>attrData.sid = attributeData.sid;</code_line>
				<code_line>attrData.name = attributeData.name;</code_line>
			</specific>
		</method>

		<method name="end__instance_joint">
			<specific version="15" name="end__instance_joint"></specific>
		</method>

		<method name="begin__link">
			<parameter type="COLLADASaxFWL::link__AttributeData" name="attrData" />
			<specific version="15" name="begin__link">
				<parameter type="const COLLADASaxFWL15::link__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::link__AttributeData attrData;</code_line>
				<code_line>attrData.sid = attributeData.sid;</code_line>
				<code_line>attrData.name = attributeData.name;</code_line>
			</specific>
		</method>

		<method name="end__link">
			<specific version="15" name="end__link"></specific>
		</method>

		<method name="begin__attachment_full">
			<parameter type="COLLADASaxFWL::attachment_AttributeData" name="attrData" />
			<specific version="15" name="begin__attachment_full">
				<parameter type="const COLLADASaxFWL15::attachment_full__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::attachment_AttributeData attrData;</code_line>
				<code_line>attrData.joint = attributeData.joint;</code_line>
			</specific>
		</method>

		<method name="end__attachment_full">
			<specific version="15" name="end__attachment_full"></specific>
		</method>

		<method name="begin__attachment_start">
			<parameter type="COLLADASaxFWL::attachment_AttributeData" name="attrData" />
			<specific version="15" name="begin__attachment_start">
				<parameter type="const COLLADASaxFWL15::attachment_start__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::attachment_AttributeData attrData;</code_line>
				<code_line>attrData.joint = attributeData.joint;</code_line>
			</specific>
		</method>

		<method name="end__attachment_start">
			<specific version="15" name="end__attachment_start"></specific>
		</method>

	  <method name="begin__attachment_end">
			<parameter type="COLLADASaxFWL::attachment_AttributeData" name="attrData" />
			<specific version="15" name="begin__attachment_end">
				<parameter type="const COLLADASaxFWL15::attachment_end__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::attachment_AttributeData attrData;</code_line>
				<code_line>attrData.joint = attributeData.joint;</code_line>
			</specific>
		</method>

		<method name="end__attachment_end">
			<specific version="15" name="end__attachment_end"></specific>
		</method>
		
		<method name="begin__translate">
			<parameter type="COLLADASaxFWL::translate__AttributeData" name="attrData" />
			<specific version="15" name="begin__translate">
				<parameter type="const COLLADASaxFWL15::translate__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::translate__AttributeData attrData;</code_line>
				<code_line>attrData.sid = attributeData.sid;</code_line>
			</specific>
		</method>

		<method name="end__translate">
			<specific version="15" name="end__translate"></specific>
		</method>

		<method name="data__translate">
			<parameter type="const float*" name="data" />
			<parameter type="size_t" name="length" />
			<specific version="15" name="data__translate"></specific>
		</method>

		<method name="begin__rotate">
			<parameter type="COLLADASaxFWL::rotate__AttributeData" name="attrData" />
			<specific version="15" name="begin__rotate">
				<parameter type="const COLLADASaxFWL15::rotate__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::rotate__AttributeData attrData;</code_line>
				<code_line>attrData.sid = attributeData.sid;</code_line>
			</specific>
		</method>

		<method name="end__rotate">
			<specific version="15" name="end__rotate"></specific>
		</method>

		<method name="data__rotate">
			<parameter type="const float*" name="data" />
			<parameter type="size_t" name="length" />
			<specific version="15" name="data__rotate"></specific>
		</method>

		<method name="begin__technique">
			<parameter type="COLLADASaxFWL::technique__AttributeData" name="attrData" />
			<specific version="15" name="begin__technique____technique_type">
				<parameter type="const COLLADASaxFWL15::technique____technique_type__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::technique__AttributeData attrData;</code_line>
				<code_line>attrData.profile = attributeData.profile;</code_line>
			</specific>
		</method>

		<method name="end__technique">
			<specific version="15" name="end__technique____technique_type"></specific>
		</method>

	</class>


	<class name="LibraryArticulatedSystemsLoader" include="COLLADASaxFWLLibraryArticulatedSystemsLoader.h" >
		<member type="LibraryArticulatedSystemsLoader*" name="mLoader" />
		<ctor>
			<parameter type="LibraryArticulatedSystemsLoader*" name="loader" />
			<initlist name="mLoader" value="loader" />
		</ctor>

		<method name="end__library_articulated_systems">
			<specific version="15" name="end__library_articulated_systems"></specific>
		</method>

		<method name="begin__articulated_system">
			<parameter type="COLLADASaxFWL::articulated_system__AttributeData" name="attrData" />
			<specific version="15" name="begin__articulated_system">
				<parameter type="const COLLADASaxFWL15::articulated_system__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::articulated_system__AttributeData attrData;</code_line>
				<code_line>attrData.id = attributeData.id;</code_line>
	      <code_line>attrData.name = attributeData.name;</code_line>
			</specific>
		</method>

		<method name="end__articulated_system">
			<specific version="15" name="end__articulated_system"></specific>
		</method>
		
		<method name="begin__kinematics">
			<specific version="15" name="begin__kinematics"></specific>
		</method>
		
		<method name="end__kinematics">
			<specific version="15" name="end__kinematics"></specific>
		</method>
		
		<method name="begin__instance_kinematics_model">
			<parameter type="COLLADASaxFWL::instance_kinematics_model__AttributeData" name="attrData" />
			<specific version="15" name="begin__instance_kinematics_model">
				<parameter type="const COLLADASaxFWL15::instance_kinematics_model__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::instance_kinematics_model__AttributeData attrData;</code_line>
				<code_line>attrData.present_attributes = attributeData.present_attributes;</code_line>
				<code_line>attrData.url = attributeData.url;</code_line>
				<code_line>attrData.sid = attributeData.sid;</code_line>
	      <code_line>attrData.name = attributeData.name;</code_line>
			</specific>
		</method>

		<method name="end__instance_kinematics_model">
			<specific version="15" name="end__instance_kinematics_model"></specific>
		</method>
		
		<method name="begin__newparam____kinematics_newparam_type">
			<parameter type="COLLADASaxFWL::newparam____kinematics_newparam_type__AttributeData" name="attrData" />
			<specific version="15" name="begin__newparam____kinematics_newparam_type">
				<parameter type="const COLLADASaxFWL15::newparam____kinematics_newparam_type__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::newparam____kinematics_newparam_type__AttributeData attrData;</code_line>
				<code_line>attrData.sid = attributeData.sid;</code_line>
			</specific>
		</method>

		<method name="end__newparam____kinematics_newparam_type">
			<specific version="15" name="end__newparam____kinematics_newparam_type"></specific>
		</method>

		<method name="begin__bind____kinematics_bind_type">
			<parameter type="COLLADASaxFWL::bind____kinematics_bind_type__AttributeData" name="attrData" />
			<specific version="15" name="begin__bind____kinematics_bind_type">
				<parameter type="const COLLADASaxFWL15::bind____kinematics_bind_type__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::bind____kinematics_bind_type__AttributeData attrData;</code_line>
				<code_line>attrData.symbol = attributeData.symbol;</code_line>
			</specific>
		</method>
		
				<method name="begin__float">
			<specific version="15" name="begin__float____float_type"></specific>
		</method>

		<method name="end__float">
			<specific version="15" name="end__float____float_type"></specific>
		</method>

		<method name="data__float">
			<parameter type="float" name="value" />
			<specific version="15" name="data__float____float_type"></specific>
		</method>

		<method name="begin__int">
			<specific version="15" name="begin__int____int_type"></specific>
		</method>

		<method name="end__int">
			<specific version="15" name="end__int____int_type"></specific>
		</method>

		<method name="data__int">
			<parameter type="int" name="value" />
			<specific version="15" name="data__int____int_type"></specific>
		</method>

		<method name="begin__bool">
			<specific version="15" name="begin__bool"></specific>
		</method>

		<method name="end__bool">
			<specific version="15" name="end__bool"></specific>
		</method>

		<method name="data__bool">
			<parameter type="bool" name="value" />
			<specific version="15" name="data__bool"></specific>
		</method>

		<method name="begin__SIDREF">
			<specific version="15" name="begin__SIDREF"></specific>
		</method>

		<method name="end__SIDREF">
			<specific version="15" name="end__SIDREF"></specific>
		</method>

		<method name="data__SIDREF">
			<parameter type="const ParserChar*" name="value" />
			<parameter type="size_t" name="length" />
			<specific version="15" name="data__SIDREF"></specific>
		</method>


		<method name="end__bind____kinematics_bind_type">
			<specific version="15" name="end__bind____kinematics_bind_type"></specific>
		</method>
		
		<method name="begin__param____kinematics_param_type">
			<parameter type="COLLADASaxFWL::param____kinematics_param_type__AttributeData" name="attrData" />
			<specific version="15" name="begin__param____kinematics_param_type">
				<parameter type="const COLLADASaxFWL15::param____kinematics_param_type__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::param____kinematics_param_type__AttributeData attrData;</code_line>
				<code_line>attrData.ref = attributeData.ref;</code_line>
			</specific>
		</method>

		<method name="end__param____kinematics_param_type">
			<specific version="15" name="end__param____kinematics_param_type"></specific>
		</method>

		<method name="begin__setparam____kinematics_setparam_type">
			<parameter type="COLLADASaxFWL::setparam____kinematics_setparam_type__AttributeData" name="attrData" />
			<specific version="15" name="begin__setparam____kinematics_setparam_type">
				<parameter type="const COLLADASaxFWL15::setparam____kinematics_setparam_type__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::setparam____kinematics_setparam_type__AttributeData attrData;</code_line>
				<code_line>attrData.ref = attributeData.ref;</code_line>
			</specific>
		</method>

		<method name="end__setparam____kinematics_setparam_type">
			<specific version="15" name="end__setparam____kinematics_setparam_type"></specific>
		</method>

		<method name="begin__technique_common____kinematics_technique_type">
			<specific version="15" name="begin__technique_common____kinematics_technique_type"></specific>
		</method>
		
		<method name="end__technique_common____kinematics_technique_type">
			<specific version="15" name="end__technique_common____kinematics_technique_type"></specific>
		</method>

		<method name="begin__axis_info____kinematics_axis_info_type">
			<parameter type="COLLADASaxFWL::axis_info____kinematics_axis_info_type__AttributeData" name="attrData" />
			<specific version="15" name="begin__axis_info____kinematics_axis_info_type">
				<parameter type="const COLLADASaxFWL15::axis_info____kinematics_axis_info_type__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::axis_info____kinematics_axis_info_type__AttributeData attrData;</code_line>
				<code_line>attrData.sid = attributeData.sid;</code_line>
				<code_line>attrData.name = attributeData.name;</code_line>
				<code_line>attrData.axis = attributeData.axis;</code_line>
			</specific>
		</method>

		<method name="end__axis_info____kinematics_axis_info_type">
			<specific version="15" name="end__axis_info____kinematics_axis_info_type"></specific>
		</method>

		<method name="begin__active">
			<specific version="15" name="begin__active"></specific>
		</method>
		
		<method name="end__active">
			<specific version="15" name="end__active"></specific>
		</method>

		<method name="begin__locked">
			<specific version="15" name="begin__locked"></specific>
		</method>
		
		<method name="end__locked">
			<specific version="15" name="end__locked"></specific>
		</method>

		<method name="begin__index">
			<parameter type="COLLADASaxFWL::index__AttributeData" name="attrData" />
			<specific version="15" name="begin__index">
				<parameter type="const COLLADASaxFWL15::index__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::index__AttributeData attrData;</code_line>
				<code_line>attrData.semantic = attributeData.semantic;</code_line>
			</specific>
		</method>

		<method name="end__index">
			<specific version="15" name="end__index"></specific>
		</method>

		<method name="begin__limits____kinematics_limits_type">
			<specific version="15" name="begin__limits____kinematics_limits_type"></specific>
		</method>
		
		<method name="end__limits____kinematics_limits_type">
			<specific version="15" name="end__limits____kinematics_limits_type"></specific>
		</method>

		<method name="begin__min____common_float_or_param_type">
			<specific version="15" name="begin__min____common_float_or_param_type"></specific>
		</method>
		
		<method name="end__min____common_float_or_param_type">
			<specific version="15" name="end__min____common_float_or_param_type"></specific>
		</method>

		<method name="begin__max____common_float_or_param_type">
			<specific version="15" name="begin__max____common_float_or_param_type"></specific>
		</method>
		
		<method name="end__max____common_float_or_param_type">
			<specific version="15" name="end__max____common_float_or_param_type"></specific>
		</method>
		
		<method name="begin__frame_origin">
			<parameter type="COLLADASaxFWL::frame__AttributeData" name="attrData" />
			<specific version="15" name="begin__frame_origin">
				<parameter type="const COLLADASaxFWL15::frame_origin__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::frame__AttributeData attrData;</code_line>
				<code_line>attrData.link = attributeData.link;</code_line>
			</specific>
		</method>

		<method name="end__frame_origin">
			<specific version="15" name="end__frame_origin"></specific>
		</method>
		
		<method name="begin__frame_tip">
			<parameter type="COLLADASaxFWL::frame__AttributeData" name="attrData" />
			<specific version="15" name="begin__frame_tip">
				<parameter type="const COLLADASaxFWL15::frame_tip__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::frame__AttributeData attrData;</code_line>
				<code_line>attrData.link = attributeData.link;</code_line>
			</specific>
		</method>

		<method name="end__frame_tip">
			<specific version="15" name="end__frame_tip"></specific>
		</method>

		<method name="begin__frame_tcp">
			<parameter type="COLLADASaxFWL::frame__AttributeData" name="attrData" />
			<specific version="15" name="begin__frame_tcp">
				<parameter type="const COLLADASaxFWL15::frame_tcp__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::frame__AttributeData attrData;</code_line>
				<code_line>attrData.link = attributeData.link;</code_line>
			</specific>
		</method>

		<method name="end__frame_tcp">
			<specific version="15" name="end__frame_tcp"></specific>
		</method>
		
		<method name="begin__frame_object">
			<parameter type="COLLADASaxFWL::frame__AttributeData" name="attrData" />
			<specific version="15" name="begin__frame_object">
				<parameter type="const COLLADASaxFWL15::frame_object__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::frame__AttributeData attrData;</code_line>
				<code_line>attrData.link = attributeData.link;</code_line>
			</specific>
		</method>

		<method name="end__frame_object">
			<specific version="15" name="end__frame_object"></specific>
		</method>
		
		<method name="begin__motion">
			<specific version="15" name="begin__motion"></specific>
		</method>
		
		<method name="end__motion">
			<specific version="15" name="end__motion"></specific>
		</method>

		<method name="begin__instance_articulated_system">
			<parameter type="COLLADASaxFWL::instance_articulated_system__AttributeData" name="attrData" />
			<specific version="15" name="begin__instance_articulated_system">
				<parameter type="const COLLADASaxFWL15::instance_articulated_system__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::instance_articulated_system__AttributeData attrData;</code_line>
				<code_line>attrData.present_attributes = attributeData.present_attributes;</code_line>
				<code_line>attrData.sid = attributeData.sid;</code_line>
				<code_line>attrData.url = attributeData.url;</code_line>
				<code_line>attrData.name = attributeData.name;</code_line>
			</specific>
		</method>

		<method name="end__instance_articulated_system">
			<specific version="15" name="end__instance_articulated_system"></specific>
		</method>

		<method name="begin__technique_common____motion_technique_type">
			<specific version="15" name="begin__technique_common____motion_technique_type"></specific>
		</method>
		
		<method name="end__technique_common____motion_technique_type">
			<specific version="15" name="end__technique_common____motion_technique_type"></specific>
		</method>
		
		<method name="begin__axis_info____motion_axis_info_type">
			<parameter type="COLLADASaxFWL::axis_info____motion_axis_info_type__AttributeData" name="attrData" />
			<specific version="15" name="begin__axis_info____motion_axis_info_type">
				<parameter type="const COLLADASaxFWL15::axis_info____motion_axis_info_type__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::axis_info____motion_axis_info_type__AttributeData attrData;</code_line>
				<code_line>attrData.sid = attributeData.sid;</code_line>
				<code_line>attrData.axis = attributeData.axis;</code_line>
				<code_line>attrData.name = attributeData.name;</code_line>
			</specific>
		</method>

		<method name="end__axis_info____motion_axis_info_type">
			<specific version="15" name="end__axis_info____motion_axis_info_type"></specific>
		</method>

		<method name="begin__speed____common_float_or_param_type">
			<specific version="15" name="begin__speed____common_float_or_param_type"></specific>
		</method>
		
		<method name="end__speed____common_float_or_param_type">
			<specific version="15" name="end__speed____common_float_or_param_type"></specific>
		</method>

		<method name="begin__acceleration____common_float_or_param_type">
			<specific version="15" name="begin__acceleration____common_float_or_param_type"></specific>
		</method>
		
		<method name="end__acceleration____common_float_or_param_type">
			<specific version="15" name="end__acceleration____common_float_or_param_type"></specific>
		</method>

		<method name="begin__deceleration____common_float_or_param_type">
			<specific version="15" name="begin__deceleration____common_float_or_param_type"></specific>
		</method>
		
		<method name="end__deceleration____common_float_or_param_type">
			<specific version="15" name="end__deceleration____common_float_or_param_type"></specific>
		</method>

		<method name="begin__jerk____common_float_or_param_type">
			<specific version="15" name="begin__jerk____common_float_or_param_type"></specific>
		</method>
		
		<method name="end__jerk____common_float_or_param_type">
			<specific version="15" name="end__jerk____common_float_or_param_type"></specific>
		</method>

		<method name="begin__effector_info">
			<parameter type="COLLADASaxFWL::effector_info__AttributeData" name="attrData" />
			<specific version="15" name="begin__effector_info">
				<parameter type="const COLLADASaxFWL15::effector_info__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::effector_info__AttributeData attrData;</code_line>
				<code_line>attrData.sid = attributeData.sid;</code_line>
				<code_line>attrData.name = attributeData.name;</code_line>
			</specific>
		</method>

		<method name="end__effector_info">
			<specific version="15" name="end__effector_info"></specific>
		</method>

		<method name="begin__speed____common_float2_or_param_type">
			<specific version="15" name="begin__speed____common_float2_or_param_type"></specific>
		</method>
		
		<method name="end__speed____common_float2_or_param_type">
			<specific version="15" name="end__speed____common_float2_or_param_type"></specific>
		</method>

		<method name="begin__acceleration____common_float2_or_param_type">
			<specific version="15" name="begin__acceleration____common_float2_or_param_type"></specific>
		</method>
		
		<method name="end__acceleration____common_float2_or_param_type">
			<specific version="15" name="end__acceleration____common_float2_or_param_type"></specific>
		</method>

		<method name="begin__deceleration____common_float2_or_param_type">
			<specific version="15" name="begin__deceleration____common_float2_or_param_type"></specific>
		</method>
		
		<method name="end__deceleration____common_float2_or_param_type">
			<specific version="15" name="end__deceleration____common_float2_or_param_type"></specific>
		</method>

		<method name="begin__jerk____common_float2_or_param_type">
			<specific version="15" name="begin__jerk____common_float2_or_param_type"></specific>
		</method>
		
		<method name="end__jerk____common_float2_or_param_type">
			<specific version="15" name="end__jerk____common_float2_or_param_type"></specific>
		</method>

		<method name="begin__technique">
			<parameter type="COLLADASaxFWL::technique__AttributeData" name="attrData" />
			<specific version="15" name="begin__technique____technique_type">
				<parameter type="const COLLADASaxFWL15::technique____technique_type__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::technique__AttributeData attrData;</code_line>
				<code_line>attrData.profile = attributeData.profile;</code_line>
			</specific>
		</method>

		<method name="end__technique">
			<specific version="15" name="end__technique____technique_type"></specific>
		</method>

	</class>


	<class name="LibraryKinematicsScenesLoader" include="COLLADASaxFWLLibraryKinematicsScenesLoader.h" >
		<member type="LibraryKinematicsScenesLoader*" name="mLoader" />
		<ctor>
			<parameter type="LibraryKinematicsScenesLoader*" name="loader" />
			<initlist name="mLoader" value="loader" />
		</ctor>

		<method name="end__library_kinematics_scenes">
			<specific version="15" name="end__library_kinematics_scenes"></specific>
		</method>

		<method name="begin__kinematics_scene">
			<parameter type="COLLADASaxFWL::kinematics_scene__AttributeData" name="attrData" />
			<specific version="15" name="begin__kinematics_scene">
				<parameter type="const COLLADASaxFWL15::kinematics_scene__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::kinematics_scene__AttributeData attrData;</code_line>
				<code_line>attrData.id = attributeData.id;</code_line>
	      <code_line>attrData.name = attributeData.name;</code_line>
			</specific>
		</method>
		
		<method name="end__kinematics_scene">
			<specific version="15" name="end__kinematics_scene"></specific>
		</method>

		<method name="begin__bind____kinematics_bind_type">
			<parameter type="COLLADASaxFWL::bind____kinematics_bind_type__AttributeData" name="attrData" />
			<specific version="15" name="begin__bind____kinematics_bind_type">
				<parameter type="const COLLADASaxFWL15::bind____kinematics_bind_type__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::bind____kinematics_bind_type__AttributeData attrData;</code_line>
				<code_line>attrData.symbol = attributeData.symbol;</code_line>
			</specific>
		</method>
		
		<method name="end__bind____kinematics_bind_type">
			<specific version="15" name="end__bind____kinematics_bind_type"></specific>
		</method>

		<method name="begin__param____kinematics_param_type">
			<parameter type="COLLADASaxFWL::param____kinematics_param_type__AttributeData" name="attrData" />
			<specific version="15" name="begin__param____kinematics_param_type">
				<parameter type="const COLLADASaxFWL15::param____kinematics_param_type__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::param____kinematics_param_type__AttributeData attrData;</code_line>
				<code_line>attrData.ref = attributeData.ref;</code_line>
			</specific>
		</method>
		
		<method name="end__param____kinematics_param_type">
			<specific version="15" name="end__param____kinematics_param_type"></specific>
		</method>
		
		<method name="begin__instance_kinematics_model">
			<parameter type="COLLADASaxFWL::instance_kinematics_model__AttributeData" name="attrData" />
			<specific version="15" name="begin__instance_kinematics_model">
				<parameter type="const COLLADASaxFWL15::instance_kinematics_model__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::instance_kinematics_model__AttributeData attrData;</code_line>
				<code_line>attrData.present_attributes = attributeData.present_attributes;</code_line>
				<code_line>attrData.url = attributeData.url;</code_line>
				<code_line>attrData.sid = attributeData.sid;</code_line>
	      <code_line>attrData.name = attributeData.name;</code_line>
			</specific>
		</method>

		<method name="end__instance_kinematics_model">
			<specific version="15" name="end__instance_kinematics_model"></specific>
		</method>
		
		<method name="begin__newparam____kinematics_newparam_type">
			<parameter type="COLLADASaxFWL::newparam____kinematics_newparam_type__AttributeData" name="attrData" />
			<specific version="15" name="begin__newparam____kinematics_newparam_type">
				<parameter type="const COLLADASaxFWL15::newparam____kinematics_newparam_type__AttributeData&amp;" name="attributeData" />
				<code_line>COLLADASaxFWL::newparam____kinematics_newparam_type__AttributeData attrData;</code_line>
				<code_line>attrData.sid = attributeData.sid;</code_line>
			</specific>
		</method>

		<method name="end__newparam____kinematics_newparam_type">
			<specific version="15" name="end__newparam____kinematics_newparam_type"></specific>
		</method>

		<method name="begin__float">
			<specific version="15" name="begin__float____float_type"></specific>
		</method>

		<method name="end__float">
			<specific version="15" name="end__float____float_type"></specific>
		</method>

		<method name="data__float">
			<parameter type="float" name="value" />
			<specific version="15" name="data__float____float_type"></specific>
		</method>

		<method name="begin__int">
			<specific version="15" name="begin__int____int_type"></specific>
		</method>

		<method name="end__int">
			<specific version="15" name="end__int____int_type"></specific>
		</method>

		<method name="data__int">
			<parameter type="int" name="value" />
			<specific version="15" name="data__int____int_type"></specific>
		</method>

		<method name="begin__bool">
			<specific version="15" name="begin__bool"></specific>
		</method>

		<method name="end__bool">
			<specific version="15" name="end__bool"></specific>
		</method>

		<method name="data__bool">
			<parameter type="bool" name="value" />
			<specific version="15" name="data__bool"></specific>
		</method>

		<method name="begin__SIDREF">
			<specific version="15" name="begin__SIDREF"></specific>
		</method>

		<method name="end__SIDREF">
			<specific version="15" name="end__SIDREF"></specific>
		</method>

		<method name="data__SIDREF">
			<parameter type="const ParserChar*" name="value" />
			<parameter type="size_t" name="length" />
			<specific version="15" name="data__SIDREF"></specific>
		</method>

	</class>


</saxfwl>
